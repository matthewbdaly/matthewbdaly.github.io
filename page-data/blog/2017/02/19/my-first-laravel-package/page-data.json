{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/blog/2017/02/19/my-first-laravel-package/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Matthew Daly","siteUrl":"https://matthewdaly.co.uk"}},"mdx":{"id":"bb2de30c-6a53-5bf7-b634-252df9909f3a","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"My first Laravel package\",\n  \"date\": \"2017-02-19 15:50:11 +0000\",\n  \"layout\": \"post\",\n  \"categories\": [\"php\", \"laravel\"],\n  \"comments\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"For some time now I've had a Laravel middleware I use extensively to add ETags to HTTP requests. I often use it for work projects, but obviously copying and pasting it all the time was a pain. I always meant to create a package for it, but I didn't want to do so until such time as I had some proper tests for it. Now I've finally figured out how to test middleware in isolation and I've got around to adding tests and creating a proper package for it.\"), mdx(\"p\", null, \"It's available on \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/matthewbdaly/laravel-etag-middleware\"\n  }, \"Github\"), \" and \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://packagist.org/packages/matthewbdaly/laravel-etag-middleware\"\n  }, \"Packagist\"), \" if you want to use it.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"For some time now I've had a Laravel middleware I use extensively to add ETags to HTTP requests. I often use it for work projects, but obviously copying and pasting it all the timeâ€¦","frontmatter":{"title":"My first Laravel package","date":"19th February 2017 3:50 pm","isoDate":"2017-02-19T15:50:11+00:00","categories":["php","laravel"]},"fields":{"path":"/blog/2017/02/19/my-first-laravel-package/"}}},"pageContext":{"previous":{"fields":{"path":"/blog/2017/02/18/integrating-behat-with-laravel/"},"frontmatter":{"title":"Integrating Behat with Laravel","date":"2017-02-18 21:25:57 +0000","layout":"post"}},"next":{"fields":{"path":"/blog/2017/03/01/decorating-laravel-repositories/"},"frontmatter":{"title":"Decorating Laravel repositories","date":"2017-03-01 23:16:57 +0000","layout":"post"}}}},
    "staticQueryHashes": ["290055352","2909664151"]}