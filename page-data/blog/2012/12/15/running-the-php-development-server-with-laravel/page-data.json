{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/2012/12/15/running-the-php-development-server-with-laravel/","result":{"data":{"site":{"siteMetadata":{"title":"Matthew Daly","siteUrl":"https://matthewdaly.co.uk"}},"mdx":{"id":"e11320cf-800d-5f67-a884-820addb0c579","body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Running the PHP development server with Laravel\",\n  \"date\": \"2012-12-15 00:26\",\n  \"comments\": true,\n  \"categories\": [\"php\", \"laravel\", \"webdevelopment\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"One thing that I've really never liked about PHP is the requirement to install a full-blown web server, so I was pleased when PHP 5.4 shipped with a built-in development server. However, it seems like no PHP framework has yet embraced this to the extent that their counterparts for languages like Python have.\"), mdx(\"p\", null, \"I've recently decided that CodeIgniter is no longer fulfilling what I need from my main go-to PHP framework, and I've been looking at Laravel as a likely replacement. It occurred to me that I could create an Artisan task to run the development server quite easily, and after a little tinkering, I put this together, which worked well:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, \"<?php\\n\\nclass Runserver_Task {\\n\\n    public function run($arguments)\\n    {   \\n        $port = !isset($arguments[0]) ? 8000: $arguments[0];\\n        echo 'Running PHP development server on port '.$port.'...';\\n        passthru('php -S localhost:'.$port.' -t '.getcwd().'/public');\\n    }   \\n}\\n?>\\n\")), mdx(\"p\", null, \"Once this is in place, you can just run \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"php artisan runserver\"), \" to run the development server, and hit \", mdx(\"kbd\", null, \"Ctrl-C\"), \" to stop it, giving you an experience much like that with Django. Note this requires PHP 5.4 or greater. You also have the option of specifying a different port eg \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"php artisan runserver 7000\"), \" for port 7000.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"One thing that I've really never liked about PHP is the requirement to install a full-blown web server, so I was pleased when PHP 5.4 shipped with a built-in development serverâ€¦","frontmatter":{"title":"Running the PHP development server with Laravel","date":"15th December 2012 12:26 am","isoDate":"2012-12-15T00:26:00+00:00","categories":["php","laravel","webdevelopment"]},"fields":{"path":"/blog/2012/12/15/running-the-php-development-server-with-laravel/"}}},"pageContext":{"previous":{"fields":{"path":"/blog/2012/11/03/testing-php-web-applications-with-cucumber/"},"frontmatter":{"title":"Testing PHP web applications with Cucumber","date":"2012-11-03 16:43","layout":"post"}},"next":{"fields":{"path":"/blog/2013/04/21/my-first-jquery-plugin/"},"frontmatter":{"title":"My first jQuery plugin","date":"2013-04-21 22:06","layout":"post"}}}},"staticQueryHashes":["1776624730","3528622268"]}