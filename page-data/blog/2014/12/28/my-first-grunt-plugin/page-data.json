{
    "componentChunkName": "component---src-templates-post-tsx",
    "path": "/blog/2014/12/28/my-first-grunt-plugin/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Matthew Daly","siteUrl":"https://matthewdaly.co.uk"}},"mdx":{"id":"ec9f1903-ec7a-5b2f-afe5-cb2350e031b0","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"My first Grunt plugin\",\n  \"date\": \"2014-12-28 17:04:41 +0000\",\n  \"comments\": true,\n  \"categories\": [\"grunt\", \"yeoman\", \"javascript\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"A while back, I mentioned that I'd written a Yeoman generator for creating a flat HTML blog, called \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/matthewbdaly/generator-simple-static-blog\"\n  }, \"generator-simple-static-blog\"), \". For this, I'd used the first Grunt plugin I could find for the purpose, which was \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/testdouble/grunt-markdown-blog\"\n  }, \"grunt-markdown-blog\"), \". This worked, but I wasn't really very happy with it.\"), mdx(\"p\", null, \"The ideal Grunt plugin I had in mind was as follows:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Used Handlebars for templating\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generated posts from Markdown files\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Saved files in named folders with a single \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"index.html\"), \" file in each one (like Octopress does) so that no file extension is visible on a page\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Generated index pages, rather than just showing the latest post as the first page\")), mdx(\"p\", null, \"Unfortunately, \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"grunt-markdown-blog\"), \" only fulfilled the second criteria, so it was never going to be something I stuck with long-term. However, I couldn't find anything else that would do the trick, so it looked like my only option was to write a suitable plugin myself.\"), mdx(\"p\", null, \"I started a new Git repository a while back, but didn't make much progress. Then, on Christmas Eve, I suddenly got the urge to start working on this again, and in a matter of a few hours I'd gotten a working Grunt plugin that ticked all of these boxes. I had to delay getting it integrated into the generator due to Christmas day, and then an unfortunate bout of flu, but I've now published it as \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/matthewbdaly/grunt-blogbuilder\"\n  }, \"grunt-blogbuilder\"), \" and amended the Yeoman generator to use it instead.\"), mdx(\"p\", null, \"I'm really pleased with the outcome, and while I'm still not yet ready to migrate over to it from Octopress, it's a massive step forward, and building a Grunt plugin has been an interesting experience.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"A while back, I mentioned that I'd written a Yeoman generator for creating a flat HTML blog, called  generator-simple-static-blog . For this, I'd used the first Grunt plugin Iâ€¦","frontmatter":{"title":"My first Grunt plugin","date":"28th December 2014 5:04 pm","isoDate":"2014-12-28T17:04:41+00:00","categories":["grunt","yeoman","javascript"]},"fields":{"path":"/blog/2014/12/28/my-first-grunt-plugin/"}}},"pageContext":{"previous":{"fields":{"path":"/blog/2014/11/09/building-a-url-shortener-with-node-dot-js-and-redis/"},"frontmatter":{"title":"Building a URL shortener with Node.js and Redis","date":"2014-11-09 17:13:16 +0000","layout":"post"}},"next":{"fields":{"path":"/blog/2014/12/31/building-a-chat-server-with-node-dot-js-and-redis/"},"frontmatter":{"title":"Building a chat server with Node.js and Redis","date":"2014-12-31 14:10:57 +0000","layout":"post"}}}},
    "staticQueryHashes": ["290055352","2909664151"]}