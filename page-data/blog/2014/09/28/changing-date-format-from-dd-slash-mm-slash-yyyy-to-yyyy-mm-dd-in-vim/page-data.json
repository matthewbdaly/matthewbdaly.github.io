{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/2014/09/28/changing-date-format-from-dd-slash-mm-slash-yyyy-to-yyyy-mm-dd-in-vim/","result":{"data":{"site":{"siteMetadata":{"title":"Matthew Daly","siteUrl":"https://matthewdaly.co.uk"}},"mdx":{"id":"c559851c-5b71-503d-b10f-8a13b37504ae","body":"var _excluded = [\"components\"];\nfunction _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } return n; }, _extends.apply(null, arguments); }\nfunction _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var n = Object.getOwnPropertySymbols(e); for (r = 0; r < n.length; r++) o = n[r], t.indexOf(o) >= 0 || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } return i; }\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Changing date format from DD/MM/YYYY to YYYY-MM-DD in Vim\",\n  \"date\": \"2014-09-28 19:53:34 +0100\",\n  \"comments\": true,\n  \"categories\": [\"vim\", \"regex\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently I had the occasion to reformat a load of dates in Vim from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DD/MM/YYYY\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"YYYY-MM-DD\"), \". In Vim, this is quite simple:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-vim\"\n  }, \":%s/\\\\(\\\\d\\\\{2}\\\\)\\\\/\\\\(\\\\d\\\\{2}\\\\)\\\\/\\\\(\\\\d\\\\{4}\\\\)/\\\\3-\\\\2-\\\\1/g\\n\")), mdx(\"p\", null, \"This should be easy to adapt to reformatting other date formats.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Recently I had the occasion to reformat a load of dates in Vim from  DD/MM/YYYY  to  YYYY-MM-DD . In Vim, this is quite simple: This should be easy to adapt to reformatting otherâ€¦","frontmatter":{"title":"Changing date format from DD/MM/YYYY to YYYY-MM-DD in Vim","date":"28th September 2014 6:53 pm","isoDate":"2014-09-28T18:53:34+00:00","categories":["vim","regex"]},"fields":{"path":"/blog/2014/09/28/changing-date-format-from-dd-slash-mm-slash-yyyy-to-yyyy-mm-dd-in-vim/"}}},"pageContext":{"previous":{"fields":{"path":"/blog/2014/08/31/django-blog-tutorial-the-next-generation-part-8/"},"frontmatter":{"title":"Django Blog Tutorial - the Next Generation - Part 8","date":"2014-08-31 22:00:00 +0100","layout":"post"}},"next":{"fields":{"path":"/blog/2014/09/28/django-blog-tutorial-the-next-generation-part-9/"},"frontmatter":{"title":"Django Blog Tutorial - the Next Generation - Part 9","date":"2014-09-28 20:51:02 +0100","layout":"post"}}}},"staticQueryHashes":["1776624730","458490740"]}