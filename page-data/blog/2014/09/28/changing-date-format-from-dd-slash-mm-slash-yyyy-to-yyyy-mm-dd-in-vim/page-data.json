{"componentChunkName":"component---src-templates-post-tsx","path":"/blog/2014/09/28/changing-date-format-from-dd-slash-mm-slash-yyyy-to-yyyy-mm-dd-in-vim/","result":{"data":{"site":{"siteMetadata":{"title":"Matthew Daly","siteUrl":"https://matthewdaly.co.uk"}},"mdx":{"id":"c559851c-5b71-503d-b10f-8a13b37504ae","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Changing date format from DD/MM/YYYY to YYYY-MM-DD in Vim\",\n  \"date\": \"2014-09-28 19:53:34 +0100\",\n  \"comments\": true,\n  \"categories\": [\"vim\", \"regex\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Recently I had the occasion to reformat a load of dates in Vim from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"DD/MM/YYYY\"), \" to \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"YYYY-MM-DD\"), \". In Vim, this is quite simple:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-vim\"\n  }, \":%s/\\\\(\\\\d\\\\{2}\\\\)\\\\/\\\\(\\\\d\\\\{2}\\\\)\\\\/\\\\(\\\\d\\\\{4}\\\\)/\\\\3-\\\\2-\\\\1/g\\n\")), mdx(\"p\", null, \"This should be easy to adapt to reformatting other date formats.\"));\n}\n;\nMDXContent.isMDXComponent = true;","excerpt":"Recently I had the occasion to reformat a load of dates in Vim from  DD/MM/YYYY  to  YYYY-MM-DD . In Vim, this is quite simple: This should be easy to adapt to reformatting otherâ€¦","frontmatter":{"title":"Changing date format from DD/MM/YYYY to YYYY-MM-DD in Vim","date":"28th September 2014 6:53 pm","isoDate":"2014-09-28T18:53:34+00:00","categories":["vim","regex"]},"fields":{"path":"/blog/2014/09/28/changing-date-format-from-dd-slash-mm-slash-yyyy-to-yyyy-mm-dd-in-vim/"}}},"pageContext":{"previous":{"fields":{"path":"/blog/2014/08/31/django-blog-tutorial-the-next-generation-part-8/"},"frontmatter":{"title":"Django Blog Tutorial - the Next Generation - Part 8","date":"2014-08-31 22:00:00 +0100","layout":"post"}},"next":{"fields":{"path":"/blog/2014/09/28/django-blog-tutorial-the-next-generation-part-9/"},"frontmatter":{"title":"Django Blog Tutorial - the Next Generation - Part 9","date":"2014-09-28 20:51:02 +0100","layout":"post"}}}},"staticQueryHashes":["290055352","3373576264"]}