{"version":3,"file":"component---src-templates-chunk-tsx-8964f592e3e995933e96.js","mappings":"wLAeA,EAPiB,SAACA,GAAD,OACf,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAMG,KAAMC,IAAI,OAAOC,UAAU,gHACzC,yBAAG,8CACH,qBAAGA,UAAU,QAAQL,EAAMM,SCI/B,EAPqB,SAACN,GAAD,OACnB,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAMG,KAAMC,IAAI,OAAOC,UAAU,+GACzC,yBAAG,0BAAQA,UAAU,wBAAlB,oBACH,qBAAGA,UAAU,QAAQL,EAAMM,SCW/B,EAPiB,SAACN,GAAD,OACf,uBAAKK,UAAU,8BACZL,EAAMO,UAAY,gBAAC,EAAD,CAAcJ,KAAMH,EAAMO,SAASJ,KAAMG,MAAON,EAAMO,SAASD,QACjFN,EAAMQ,MAAQ,gBAAC,EAAD,CAAUL,KAAMH,EAAMQ,KAAKL,KAAMG,MAAON,EAAMQ,KAAKF,W,8CCEtE,IAVoB,SAACN,GAAD,OAClB,uBAAKK,UAAU,eACb,gBAAC,EAAAJ,KAAD,CAAMI,UAAU,uCAAuCH,GAAIF,EAAMG,MAC9DH,EAAMM,OAET,qBAAGD,UAAU,mBAAmBL,EAAMS,MACtC,qBAAGJ,UAAU,mBAAmBL,EAAMU,Y,sFC8B1C,UA7Bc,SAAC,GAAgE,IAA9DC,EAA6D,EAA7DA,YAAaC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,SAC5BC,EAAYF,EAAKG,KAAKC,aAAaV,MACjCW,EAAwCN,EAAxCM,YAAaC,EAA2BP,EAA3BO,SAAUC,EAAiBR,EAAjBQ,aACzBC,EAAeR,EAAKG,KAAKC,aAAaK,QAAUR,EAASS,SAE/D,OACE,gBAAC,EAAAC,SAAD,KACE,gBAAC,IAAD,CACEjB,MAAK,QAAUW,EACfO,YAAgBV,EAAL,WAAyBG,EACpCQ,IAAKL,IAEP,gBAAC,IAAD,CAAQd,MAAOQ,GACb,uBAAKT,UAAU,cACZO,EAAKc,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,gBAAC,IAAD,CAAaC,IAAKD,EAAKE,OAAO5B,KAAMA,KAAM0B,EAAKE,OAAO5B,KAAMG,MAAOuB,EAAKG,YAAY1B,MAAOG,KAAMoB,EAAKG,YAAYvB,KAAMC,QAASmB,EAAKnB,cAI1I,gBAAC,IAAD,CACEH,SAAUY,GAAgB,CAAChB,KAAK,UAAWgB,EAAgBb,MAAM,QAASa,GAC1EX,KAAMU,GAAY,CAACf,KAAK,UAAWe,EAAYZ,MAAM,QAASY","sources":["webpack://matthew-dalys-blog/./src/components/NextPage.tsx","webpack://matthew-dalys-blog/./src/components/PreviousPage.tsx","webpack://matthew-dalys-blog/./src/components/NavBlock.tsx","webpack://matthew-dalys-blog/./src/components/PostExcerpt.tsx","webpack://matthew-dalys-blog/./src/templates/chunk.tsx"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  path: string;\n  title: string;\n}\n\nconst NextPage = (props: Props): React.ReactElement => (\n  <Link to={props.path} rel=\"next\" className=\"float-right w-1/2 p-2 shadow-sm hover:bg-gray-200 dark:hover:bg-gray-800 transition duration-300 ease-in-out\">\n    <p><strong>→ Next page</strong></p>\n    <p className=\"pl-6\">{props.title}</p>\n  </Link>\n)\n\nexport default NextPage\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  path: string;\n  title: string;\n}\n\nconst PreviousPage = (props: Props): React.ReactElement => (\n  <Link to={props.path} rel=\"prev\" className=\"float-left w-1/2 p-2 shadow-sm hover:bg-gray-200 dark:hover:bg-gray-800 transition duration-300 ease-in-out\">\n    <p><strong className=\"font-bold clear-both\">← Previous page</strong></p>\n    <p className=\"pl-6\">{props.title}</p>\n  </Link>\n)\n\nexport default PreviousPage\n","import React from \"react\"\nimport NextPage from \"./NextPage\"\nimport PreviousPage from \"./PreviousPage\"\n\ninterface Props {\n    previous?: {\n        path: string;\n        title: string;\n    };\n    next?: {\n        path: string;\n        title: string;\n    };\n}\n\nconst NavBlock = (props: Props): React.ReactElement => (\n  <nav className=\"pt-4 clear-both box-border\">\n    {props.previous && <PreviousPage path={props.previous.path} title={props.previous.title} />}\n    {props.next && <NextPage path={props.next.path} title={props.next.title} />}\n  </nav>\n)\n\nexport default NavBlock\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n    path: string;\n    date: string;\n    excerpt: string;\n    title: string;\n}\n\nconst PostExcerpt = (props: Props): React.ReactElement => (\n  <div className=\"w-full py-2\">\n    <Link className=\"float-left w-full text-2xl font-bold\" to={props.path}>\n      {props.title}\n    </Link>\n    <p className=\"float-left py-2\">{props.date}</p>\n    <p className=\"float-left py-2\">{props.excerpt}</p>\n  </div>\n)\n\nexport default PostExcerpt\n","import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport NavBlock from \"../components/NavBlock\"\nimport SEO from \"../components/Seo\"\nimport { PageContext, PageData, SiteData } from \"../Types\"\nimport PostExcerpt from \"../components/PostExcerpt\"\n\ninterface Props {\n  pageContext: PageContext;\n  data: {\n    site: SiteData;\n    mdx: PageData;\n  }\n  location: Location\n}\n\nconst Chunk = ({ pageContext, data, location }: Props): React.ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const { currentPage, nextPage, previousPage } = pageContext\n  const canonicalUrl = data.site.siteMetadata.siteUrl + location.pathname\n\n  return (\n    <Fragment>\n      <SEO\n        title={`Page ${currentPage}`}\n        description={`${siteTitle} - Page ${currentPage}`}\n        url={canonicalUrl}\n      />\n      <Layout title={siteTitle}>\n        <div className=\"space-y-32\">\n          {data.allMdx.edges.map(({ node }) => (\n            <PostExcerpt key={node.fields.path} path={node.fields.path} title={node.frontmatter.title} date={node.frontmatter.date} excerpt={node.excerpt} />\n          ))}\n        </div>\n\n        <NavBlock\n          previous={previousPage && {path: `/posts/${previousPage}`, title: `Page ${previousPage}`}}\n          next={nextPage && {path: `/posts/${nextPage}`, title: `Page ${nextPage}`}}\n        />\n\n      </Layout>\n    </Fragment>\n  )\n}\n\nexport default Chunk\n\nexport const chunkQuery = graphql`\nquery($skip: Int!, $limit: Int!) {\n  site {\n    siteMetadata {\n      title\n      siteUrl\n    }\n  }\n  allMdx(\n    sort: { fields: [frontmatter___date], order: DESC}\n    filter: { frontmatter: { layout: { eq: \"post\" }}}\n    limit: $limit\n    skip: $skip\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        fields {\n          path\n        }\n        frontmatter {\n          title\n          date(formatString: \"Do MMMM YYYY h:mm a\")\n        }\n      }\n    }\n  }\n}\n`\n"],"names":["props","Link","to","path","rel","className","title","previous","next","date","excerpt","pageContext","data","location","siteTitle","site","siteMetadata","currentPage","nextPage","previousPage","canonicalUrl","siteUrl","pathname","Fragment","description","url","allMdx","edges","map","node","key","fields","frontmatter"],"sourceRoot":""}