{"version":3,"sources":["webpack://matthew-dalys-blog/./src/components/NextPage.tsx","webpack://matthew-dalys-blog/./src/components/PreviousPage.tsx","webpack://matthew-dalys-blog/./src/components/NavBlock.tsx","webpack://matthew-dalys-blog/./src/components/PostExcerpt.tsx","webpack://matthew-dalys-blog/./src/templates/chunk.tsx"],"names":["props","Link","to","path","rel","title","className","previous","next","date","excerpt","pageContext","data","siteTitle","site","siteMetadata","currentPage","nextPage","previousPage","Fragment","description","siteUrl","allMdx","edges","map","node","key","fields","frontmatter"],"mappings":"wLAcA,EANiB,SAACA,GAAD,OACf,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAMG,KAAMC,IAAI,QACvBJ,EAAMK,MADT,OCKF,EANqB,SAACL,GAAD,OACnB,gBAAC,EAAAC,KAAD,CAAMC,GAAIF,EAAMG,KAAMC,IAAI,QAA1B,KACSJ,EAAMK,QCgBjB,EAXiB,SAACL,GAAD,OACf,uBAAKM,UAAU,mBACb,uBAAKA,UAAU,cACZN,EAAMO,UAAY,gBAAC,EAAD,CAAcJ,KAAMH,EAAMO,SAASJ,KAAME,MAAOL,EAAMO,SAASF,SAEpF,uBAAKC,UAAU,eACZN,EAAMQ,MAAQ,gBAAC,EAAD,CAAUL,KAAMH,EAAMQ,KAAKL,KAAME,MAAOL,EAAMQ,KAAKH,Y,2DCDxE,IAVoB,SAACL,GAAD,OAClB,uBAAKM,UAAU,eACb,gBAAC,EAAAL,KAAD,CAAMK,UAAU,uCAAuCJ,GAAIF,EAAMG,MAC9DH,EAAMK,OAET,qBAAGC,UAAU,mBAAmBN,EAAMS,MACtC,qBAAGH,UAAU,mBAAmBN,EAAMU,Y,mGC2B1C,UA3Bc,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,KACtBC,EAAYD,EAAKE,KAAKC,aAAaV,MACjCW,EAAwCL,EAAxCK,YAAaC,EAA2BN,EAA3BM,SAAUC,EAAiBP,EAAjBO,aAE/B,OACE,gBAAC,EAAAC,SAAD,KACE,gBAAC,IAAD,CACEd,MAAK,QAAUW,EACfI,YAAgBP,EAAL,WAAyBG,IAEtC,gBAAC,IAAD,CAAQX,MAAOQ,EAAWQ,QAAST,EAAKE,KAAKC,aAAaM,SACxD,uBAAKf,UAAU,cACZM,EAAKU,OAAOC,MAAMC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACrB,gBAAC,IAAD,CAAaC,IAAKD,EAAKE,OAAOxB,KAAMA,KAAMsB,EAAKE,OAAOxB,KAAME,MAAOoB,EAAKG,YAAYvB,MAAOI,KAAMgB,EAAKG,YAAYnB,KAAMC,QAASe,EAAKf,cAI1I,gBAAC,IAAD,CACEH,SAAUW,GAAgB,CAACf,KAAK,UAAWe,EAAgBb,MAAM,QAASa,GAC1EV,KAAMS,GAAY,CAACd,KAAK,UAAWc,EAAYZ,MAAM,QAASY","file":"component---src-templates-chunk-tsx-3218d59fe69e33096c97.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  path: string;\n  title: string;\n}\n\nconst NextPage = (props: Props): React.ReactElement => (\n  <Link to={props.path} rel=\"next\">\n    {props.title} →\n  </Link>\n)\n\nexport default NextPage\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n  path: string;\n  title: string;\n}\n\nconst PreviousPage = (props: Props): React.ReactElement => (\n  <Link to={props.path} rel=\"prev\">\n        ← {props.title}\n  </Link>\n)\n\nexport default PreviousPage\n","import React from \"react\"\nimport NextPage from \"./NextPage\"\nimport PreviousPage from \"./PreviousPage\"\n\ninterface Props {\n    previous?: {\n        path: string;\n        title: string;\n    };\n    next?: {\n        path: string;\n        title: string;\n    };\n}\n\nconst NavBlock = (props: Props): React.ReactElement => (\n  <nav className=\"pt-4 clear-both\">\n    <div className=\"float-left\">\n      {props.previous && <PreviousPage path={props.previous.path} title={props.previous.title} />}\n    </div>\n    <div className=\"float-right\">\n      {props.next && <NextPage path={props.next.path} title={props.next.title} />}\n    </div>\n  </nav>\n)\n\nexport default NavBlock\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n    path: string;\n    date: string;\n    excerpt: string;\n    title: string;\n}\n\nconst PostExcerpt = (props: Props): React.ReactElement => (\n  <div className=\"w-full py-2\">\n    <Link className=\"float-left w-full text-2xl font-bold\" to={props.path}>\n      {props.title}\n    </Link>\n    <p className=\"float-left py-2\">{props.date}</p>\n    <p className=\"float-left py-2\">{props.excerpt}</p>\n  </div>\n)\n\nexport default PostExcerpt\n","import React, { Fragment } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport NavBlock from \"../components/NavBlock\"\nimport SEO from \"../components/Seo\"\nimport { PageContext, PageData, SiteData } from \"../Types\"\nimport PostExcerpt from \"../components/PostExcerpt\"\n\ninterface Props {\n  pageContext: PageContext;\n  data: {\n    site: SiteData;\n    mdx: PageData;\n  }\n}\n\nconst Chunk = ({ pageContext, data }: Props): React.ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const { currentPage, nextPage, previousPage } = pageContext\n\n  return (\n    <Fragment>\n      <SEO\n        title={`Page ${currentPage}`}\n        description={`${siteTitle} - Page ${currentPage}`}\n      />\n      <Layout title={siteTitle} siteUrl={data.site.siteMetadata.siteUrl}>\n        <div className=\"space-y-32\">\n          {data.allMdx.edges.map(({ node }) => (\n            <PostExcerpt key={node.fields.path} path={node.fields.path} title={node.frontmatter.title} date={node.frontmatter.date} excerpt={node.excerpt} />\n          ))}\n        </div>\n\n        <NavBlock\n          previous={previousPage && {path: `/posts/${previousPage}`, title: `Page ${previousPage}`}}\n          next={nextPage && {path: `/posts/${nextPage}`, title: `Page ${nextPage}`}}\n        />\n\n      </Layout>\n    </Fragment>\n  )\n}\n\nexport default Chunk\n\nexport const chunkQuery = graphql`\nquery($skip: Int!, $limit: Int!) {\n  site {\n    siteMetadata {\n      title\n      siteUrl\n    }\n  }\n  allMdx(\n    sort: { fields: [frontmatter___date], order: DESC}\n    filter: { frontmatter: { layout: { eq: \"post\" }}}\n    limit: $limit\n    skip: $skip\n  ) {\n    totalCount\n    edges {\n      node {\n        excerpt\n        fields {\n          path\n        }\n        frontmatter {\n          title\n          date(formatString: \"DD MMMM YYYY\")\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}