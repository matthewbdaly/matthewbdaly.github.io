{"version":3,"file":"component---src-pages-index-tsx-73c34cd005d2af0f7321.js","mappings":"6IAgBA,IARgBA,GAEZC,EAAAA,cAAAA,IAAAA,CAAGC,KAAMF,EAAME,KAAMC,UAAU,8BAA8BC,IAAKJ,EAAMI,KACrEJ,EAAMK,S,iDCSb,IAVqBL,GACnBC,EAAAA,cAAAA,UAAAA,CAASE,UAAU,uBACjBF,EAAAA,cAACK,EAAAA,KAAD,CAAMH,UAAU,0BAA0BI,GAAIP,EAAMQ,MAClDP,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,uCAAuCH,EAAMS,QAE7DR,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,gCAAgCH,EAAMU,MACnDT,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,6BAA6BH,EAAMW,S,+HC+BpD,MA3CoB,KAClB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,gBAAe,aAyBlC,OACEZ,EAAAA,cAACa,EAAAA,SAAD,KACEb,EAAAA,cAAAA,UAAAA,CAASE,UAAU,SACjBF,EAAAA,cAAAA,KAAAA,CAAIE,UAAU,YAAd,gBACAF,EAAAA,cAAAA,MAAAA,CAAKE,UAAU,qBACZS,EAAOG,MAAMC,KAAIC,IAAAA,IAAC,KAAEC,GAAHD,EAAAA,OAChBhB,EAAAA,cAACkB,EAAAA,EAAD,CAAaC,IAAKF,EAAKG,OAAOb,KAAMA,KAAMU,EAAKG,OAAOb,KAAMC,MAAOS,EAAKI,YAAYb,MAAOC,KAAMQ,EAAKI,YAAYZ,KAAMC,QAASO,EAAKP,SADtH,MAKtBV,EAAAA,cAAAA,UAAAA,CAASE,UAAU,cACjBF,EAAAA,cAACK,EAAAA,KAAD,CAAMC,GAAG,YAAT,uBAXN,E,WCUF,MAxBcU,IAAmD,IAAlD,KAAEM,EAAF,SAAQC,GAA0CP,EAC/D,MAAMQ,EAAYF,EAAKG,KAAKC,aAAalB,MACnCmB,GAAuBC,EAAAA,EAAAA,MAAKC,GAC5BC,EAAeR,EAAKG,KAAKC,aAAaK,QAAUR,EAASS,SAE/D,OACEhC,EAAAA,cAACiC,EAAAA,EAAD,CAAQzB,MAAOgB,GACbxB,EAAAA,cAACkC,EAAAA,EAAD,CACE1B,MAAO,OACP2B,YAAa,OACbC,IAAKN,IAEP9B,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,kCAAb,WAA2DF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,SAASC,IAAI,KAAKF,KAAMqB,EAAKG,KAAKC,aAAaK,SAA5D,gBAA3D,KACA/B,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,gBAAb,kLACAF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,gBAAb,yNAEAF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,gBAAb,gLAEEF,EAAAA,cAAAA,IAAAA,CAAGE,UAAU,gBAAb,sBAA+CF,EAAAA,cAACqC,EAAAA,EAAD,CAAQpC,KAAMqB,EAAKG,KAAKC,aAAaY,OAAOC,SAAUpC,IAAI,MAA1D,YAA/C,QAAoIH,EAAAA,cAACqC,EAAAA,EAAD,CAAQpC,KAAI,sBAAwBqB,EAAKG,KAAKC,aAAaY,OAAOE,OAAUrC,IAAI,MAAhF,WACtIH,EAAAA,cAAC2B,EAAD,MAdJ,C","sources":["webpack://matthew-dalys-blog/./src/components/Anchor.tsx","webpack://matthew-dalys-blog/./src/components/PostExcerpt.tsx","webpack://matthew-dalys-blog/./src/components/RecentPosts.tsx","webpack://matthew-dalys-blog/./src/pages/index.tsx"],"sourcesContent":["import React from \"react\"\n\ninterface Props {\n  children: React.ReactNode;\n  href: string;\n  rel: string | undefined;\n}\n\nconst Anchor = (props: Props): React.ReactElement => {\n  return (\n    <a href={props.href} className=\"border-b-2 border-green-400\" rel={props.rel}>\n      {props.children}\n    </a>\n  )\n}\n\nexport default Anchor\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\ninterface Props {\n    path: string;\n    date: string;\n    excerpt: string;\n    title: string;\n}\n\nconst PostExcerpt = (props: Props): React.ReactElement => (\n  <article className=\"w-full py-2 h-entry\">\n    <Link className=\"float-left w-full u-url\" to={props.path}>\n      <h2 className=\"text-2xl font-bold e-content p-name\">{props.title}</h2>\n    </Link>\n    <p className=\"float-left py-2 dt-published\">{props.date}</p>\n    <p className=\"float-left py-2 p-summary\">{props.excerpt}</p>\n  </article>\n)\n\nexport default PostExcerpt\n","import React, { Fragment } from \"react\"\nimport { useStaticQuery, Link, graphql } from \"gatsby\"\nimport PostExcerpt from \"./PostExcerpt\"\n\nconst RecentPosts = (): React.ReactElement => {\n  const { allMdx } = useStaticQuery(\n    graphql`\n      query {\n        allMdx(\n          filter: {frontmatter: {layout: {eq: \"post\"}}}\n          sort: { fields: [frontmatter___date], order: DESC }\n          limit: 5\n        ) {\n          edges {\n            node {\n              excerpt(pruneLength: 180)\n              fields {\n                path\n              }\n              frontmatter {\n                date(formatString: \"Do MMMM YYYY h:mm a\")\n                title\n              }\n            }\n          }\n        }\n      }\n    `\n  )\n\n  return (\n    <Fragment>\n      <section className=\"mt-16\">\n        <h2 className=\"text-2xl\">Recent posts</h2>\n        <div className=\"w-full space-y-32\">\n          {allMdx.edges.map(({ node }) => (\n            <PostExcerpt key={node.fields.path} path={node.fields.path} title={node.frontmatter.title} date={node.frontmatter.date} excerpt={node.excerpt} />\n          ))}\n        </div>\n      </section>\n      <section className=\"clear-both\">\n        <Link to=\"/posts/1\">Read more posts...</Link>\n      </section>\n    </Fragment>\n  )\n}\n\nexport default RecentPosts\n","import React, { memo } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport RecentPosts from \"../components/RecentPosts\"\nimport Anchor from \"../components/Anchor\"\nimport { PageData, SiteData } from \"../Types\"\n\ninterface Props {\n  location: Location;\n  data: {\n    site: SiteData;\n    mdx: PageData;\n  }\n}\n\nconst Index = ({ data, location }: Props): React.ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const RecentPostsComponent = memo(RecentPosts)\n  const canonicalUrl = data.site.siteMetadata.siteUrl + location.pathname\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title={\"Home\"}\n        description={\"Home\"}\n        url={canonicalUrl}\n      />\n      <p className=\"font-bold text-2xl py-2 p-note\">Hi, I&apos;m <a className=\"h-card\" rel=\"me\" href={data.site.siteMetadata.siteUrl}>Matthew Daly</a>.</p>\n      <p className=\"text-xl py-2\">I&apos;m a web developer, and have worked in the industry for about a decade now. I live in Norfolk and work in Norwich (except during lockdown, when I&apos;ve been working from home).</p>\n      <p className=\"text-xl py-2\">Right now, I work primarily with Laravel and React.js, and on maintaining and migrating a legacy Zend 1 project.\n       I&apos;ve also worked with Django, Angular 1, CodeIgniter, Backbone.js, Vue.js, and Phonegap in the past.</p>\n      <p className=\"text-xl py-2\">I blog about the challenges of and solutions for dealing with legacy code, web app performance,\n      modern PHP and Javascript development, and anything else I find interesting.</p>\n        <p className=\"text-xl py-2\">You can find me on <Anchor href={data.site.siteMetadata.social.mastodon} rel=\"me\">Mastodon</Anchor> and <Anchor href={`https://github.com/${data.site.siteMetadata.social.github}`} rel=\"me\">GitHub</Anchor></p>\n      <RecentPostsComponent />\n    </Layout>\n  )\n}\n\nexport default Index\n\nexport const recentPostsQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        social {\n          github\n          mastodon\n        }\n      }\n    }\n  }\n`\n"],"names":["props","React","href","className","rel","children","Link","to","path","title","date","excerpt","allMdx","useStaticQuery","Fragment","edges","map","_ref","node","PostExcerpt","key","fields","frontmatter","data","location","siteTitle","site","siteMetadata","RecentPostsComponent","memo","RecentPosts","canonicalUrl","siteUrl","pathname","Layout","SEO","description","url","Anchor","social","mastodon","github"],"sourceRoot":""}