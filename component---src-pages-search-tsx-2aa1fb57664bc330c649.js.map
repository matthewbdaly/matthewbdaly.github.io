{"version":3,"file":"component---src-pages-search-tsx-2aa1fb57664bc330c649.js","mappings":"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","sources":["webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://matthew-dalys-blog/./node_modules/decode-uri-component/index.js","webpack://matthew-dalys-blog/./node_modules/filter-obj/index.js","webpack://matthew-dalys-blog/./node_modules/lunr/lunr.js","webpack://matthew-dalys-blog/./node_modules/query-string/index.js","webpack://matthew-dalys-blog/./node_modules/split-on-first/index.js","webpack://matthew-dalys-blog/./node_modules/strict-uri-encode/index.js","webpack://matthew-dalys-blog/./src/components/SearchResults.tsx","webpack://matthew-dalys-blog/./src/pages/search.tsx"],"sourcesContent":["function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (obj, predicate) {\n  var ret = {};\n  var keys = Object.keys(obj);\n  var isArr = Array.isArray(predicate);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n      ret[key] = val;\n    }\n  }\n\n  return ret;\n};","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n;\n\n(function () {\n  /**\n   * A convenience function for configuring and constructing\n   * a new lunr Index.\n   *\n   * A lunr.Builder instance is created and the pipeline setup\n   * with a trimmer, stop word filter and stemmer.\n   *\n   * This builder object is yielded to the configuration function\n   * that is passed as a parameter, allowing the list of fields\n   * and other builder parameters to be customised.\n   *\n   * All documents _must_ be added within the passed config function.\n   *\n   * @example\n   * var idx = lunr(function () {\n   *   this.field('title')\n   *   this.field('body')\n   *   this.ref('id')\n   *\n   *   documents.forEach(function (doc) {\n   *     this.add(doc)\n   *   }, this)\n   * })\n   *\n   * @see {@link lunr.Builder}\n   * @see {@link lunr.Pipeline}\n   * @see {@link lunr.trimmer}\n   * @see {@link lunr.stopWordFilter}\n   * @see {@link lunr.stemmer}\n   * @namespace {function} lunr\n   */\n  var lunr = function lunr(config) {\n    var builder = new lunr.Builder();\n    builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, lunr.stemmer);\n    builder.searchPipeline.add(lunr.stemmer);\n    config.call(builder, builder);\n    return builder.build();\n  };\n\n  lunr.version = \"2.3.9\";\n  /*!\n   * lunr.utils\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A namespace containing utils for the rest of the lunr library\n   * @namespace lunr.utils\n   */\n\n  lunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf lunr.utils\n   * @function\n   */\n\n  lunr.utils.warn = function (global) {\n    /* eslint-disable no-console */\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n    /* eslint-enable no-console */\n  }(this);\n  /**\n   * Convert an object to a string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * the empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {Any} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf lunr.utils\n   */\n\n\n  lunr.utils.asString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    } else {\n      return obj.toString();\n    }\n  };\n  /**\n   * Clones an object.\n   *\n   * Will create a copy of an existing object such that any mutations\n   * on the copy cannot affect the original.\n   *\n   * Only shallow objects are supported, passing a nested object to this\n   * function will cause a TypeError.\n   *\n   * Objects with primitives, and arrays of primitives are supported.\n   *\n   * @param {Object} obj The object to clone.\n   * @return {Object} a clone of the passed object.\n   * @throws {TypeError} when a nested object is passed.\n   * @memberOf Utils\n   */\n\n\n  lunr.utils.clone = function (obj) {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    var clone = Object.create(null),\n        keys = Object.keys(obj);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i],\n          val = obj[key];\n\n      if (Array.isArray(val)) {\n        clone[key] = val.slice();\n        continue;\n      }\n\n      if (typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean') {\n        clone[key] = val;\n        continue;\n      }\n\n      throw new TypeError(\"clone is not deep and does not support nested objects\");\n    }\n\n    return clone;\n  };\n\n  lunr.FieldRef = function (docRef, fieldName, stringValue) {\n    this.docRef = docRef;\n    this.fieldName = fieldName;\n    this._stringValue = stringValue;\n  };\n\n  lunr.FieldRef.joiner = \"/\";\n\n  lunr.FieldRef.fromString = function (s) {\n    var n = s.indexOf(lunr.FieldRef.joiner);\n\n    if (n === -1) {\n      throw \"malformed field ref string\";\n    }\n\n    var fieldRef = s.slice(0, n),\n        docRef = s.slice(n + 1);\n    return new lunr.FieldRef(docRef, fieldRef, s);\n  };\n\n  lunr.FieldRef.prototype.toString = function () {\n    if (this._stringValue == undefined) {\n      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef;\n    }\n\n    return this._stringValue;\n  };\n  /*!\n   * lunr.Set\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A lunr set.\n   *\n   * @constructor\n   */\n\n\n  lunr.Set = function (elements) {\n    this.elements = Object.create(null);\n\n    if (elements) {\n      this.length = elements.length;\n\n      for (var i = 0; i < this.length; i++) {\n        this.elements[elements[i]] = true;\n      }\n    } else {\n      this.length = 0;\n    }\n  };\n  /**\n   * A complete set that contains all elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n\n  lunr.Set.complete = {\n    intersect: function intersect(other) {\n      return other;\n    },\n    union: function union() {\n      return this;\n    },\n    contains: function contains() {\n      return true;\n    }\n  };\n  /**\n   * An empty set that contains no elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n  lunr.Set.empty = {\n    intersect: function intersect() {\n      return this;\n    },\n    union: function union(other) {\n      return other;\n    },\n    contains: function contains() {\n      return false;\n    }\n  };\n  /**\n   * Returns true if this set contains the specified object.\n   *\n   * @param {object} object - Object whose presence in this set is to be tested.\n   * @returns {boolean} - True if this set contains the specified object.\n   */\n\n  lunr.Set.prototype.contains = function (object) {\n    return !!this.elements[object];\n  };\n  /**\n   * Returns a new set containing only the elements that are present in both\n   * this set and the specified set.\n   *\n   * @param {lunr.Set} other - set to intersect with this set.\n   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.intersect = function (other) {\n    var a,\n        b,\n        elements,\n        intersection = [];\n\n    if (other === lunr.Set.complete) {\n      return this;\n    }\n\n    if (other === lunr.Set.empty) {\n      return other;\n    }\n\n    if (this.length < other.length) {\n      a = this;\n      b = other;\n    } else {\n      a = other;\n      b = this;\n    }\n\n    elements = Object.keys(a.elements);\n\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n\n      if (element in b.elements) {\n        intersection.push(element);\n      }\n    }\n\n    return new lunr.Set(intersection);\n  };\n  /**\n   * Returns a new set combining the elements of this and the specified set.\n   *\n   * @param {lunr.Set} other - set to union with this set.\n   * @return {lunr.Set} a new set that is the union of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.union = function (other) {\n    if (other === lunr.Set.complete) {\n      return lunr.Set.complete;\n    }\n\n    if (other === lunr.Set.empty) {\n      return this;\n    }\n\n    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)));\n  };\n  /**\n   * A function to calculate the inverse document frequency for\n   * a posting. This is shared between the builder and the index\n   *\n   * @private\n   * @param {object} posting - The posting for a given term\n   * @param {number} documentCount - The total number of documents.\n   */\n\n\n  lunr.idf = function (posting, documentCount) {\n    var documentsWithTerm = 0;\n\n    for (var fieldName in posting) {\n      if (fieldName == '_index') continue; // Ignore the term index, its not a field\n\n      documentsWithTerm += Object.keys(posting[fieldName]).length;\n    }\n\n    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5);\n    return Math.log(1 + Math.abs(x));\n  };\n  /**\n   * A token wraps a string representation of a token\n   * as it is passed through the text processing pipeline.\n   *\n   * @constructor\n   * @param {string} [str=''] - The string token being wrapped.\n   * @param {object} [metadata={}] - Metadata associated with this token.\n   */\n\n\n  lunr.Token = function (str, metadata) {\n    this.str = str || \"\";\n    this.metadata = metadata || {};\n  };\n  /**\n   * Returns the token string that is being wrapped by this object.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.Token.prototype.toString = function () {\n    return this.str;\n  };\n  /**\n   * A token update function is used when updating or optionally\n   * when cloning a token.\n   *\n   * @callback lunr.Token~updateFunction\n   * @param {string} str - The string representation of the token.\n   * @param {Object} metadata - All metadata associated with this token.\n   */\n\n  /**\n   * Applies the given function to the wrapped string token.\n   *\n   * @example\n   * token.update(function (str, metadata) {\n   *   return str.toUpperCase()\n   * })\n   *\n   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.update = function (fn) {\n    this.str = fn(this.str, this.metadata);\n    return this;\n  };\n  /**\n   * Creates a clone of this token. Optionally a function can be\n   * applied to the cloned token.\n   *\n   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.clone = function (fn) {\n    fn = fn || function (s) {\n      return s;\n    };\n\n    return new lunr.Token(fn(this.str, this.metadata), this.metadata);\n  };\n  /*!\n   * lunr.tokenizer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A function for splitting a string into tokens ready to be inserted into\n   * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n   * the value of this property to change how strings are split into tokens.\n   *\n   * This tokenizer will convert its parameter to a string by calling `toString` and\n   * then will split this string on the character in `lunr.tokenizer.separator`.\n   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n   *\n   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n   * added as metadata to every token that is created from the object to be tokenized.\n   *\n   * @static\n   * @param {?(string|object|object[])} obj - The object to convert into tokens\n   * @param {?object} metadata - Optional metadata to associate with every token\n   * @returns {lunr.Token[]}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.tokenizer = function (obj, metadata) {\n    if (obj == null || obj == undefined) {\n      return [];\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(function (t) {\n        return new lunr.Token(lunr.utils.asString(t).toLowerCase(), lunr.utils.clone(metadata));\n      });\n    }\n\n    var str = obj.toString().toLowerCase(),\n        len = str.length,\n        tokens = [];\n\n    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n      var char = str.charAt(sliceEnd),\n          sliceLength = sliceEnd - sliceStart;\n\n      if (char.match(lunr.tokenizer.separator) || sliceEnd == len) {\n        if (sliceLength > 0) {\n          var tokenMetadata = lunr.utils.clone(metadata) || {};\n          tokenMetadata[\"position\"] = [sliceStart, sliceLength];\n          tokenMetadata[\"index\"] = tokens.length;\n          tokens.push(new lunr.Token(str.slice(sliceStart, sliceEnd), tokenMetadata));\n        }\n\n        sliceStart = sliceEnd + 1;\n      }\n    }\n\n    return tokens;\n  };\n  /**\n   * The separator used to split a string into tokens. Override this property to change the behaviour of\n   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see lunr.tokenizer\n   */\n\n\n  lunr.tokenizer.separator = /[\\s\\-]+/;\n  /*!\n   * lunr.Pipeline\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Pipelines maintain an ordered list of functions to be applied to all\n   * tokens in documents entering the search index and queries being ran against\n   * the index.\n   *\n   * An instance of lunr.Index created with the lunr shortcut will contain a\n   * pipeline with a stop word filter and an English language stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline will call each function in turn, passing a token, the\n   * index of that token in the original list of all tokens and finally a list of\n   * all the original tokens.\n   *\n   * The output of functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with lunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n  lunr.Pipeline = function () {\n    this._stack = [];\n  };\n\n  lunr.Pipeline.registeredFunctions = Object.create(null);\n  /**\n   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n   * string as well as all known metadata. A pipeline function can mutate the token string\n   * or mutate (or add) metadata for a given token.\n   *\n   * A pipeline function can indicate that the passed token should be discarded by returning\n   * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n   * functions and will not be added to the index.\n   *\n   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n   * to any downstream pipeline functions and all will returned tokens will be added to the index.\n   *\n   * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n   *\n   * @interface lunr.PipelineFunction\n   * @param {lunr.Token} token - A token from the document being processed.\n   * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n   * @param {lunr.Token[]} tokens - All tokens for this document/field.\n   * @returns {(?lunr.Token|lunr.Token[])}\n   */\n\n  /**\n   * Register a function with the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @param {String} label - The label to register this function with\n   */\n\n  lunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in this.registeredFunctions) {\n      lunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    lunr.Pipeline.registeredFunctions[fn.label] = fn;\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @private\n   */\n\n\n  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with lunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised - The serialised pipeline to load.\n   * @returns {lunr.Pipeline}\n   */\n\n\n  lunr.Pipeline.load = function (serialised) {\n    var pipeline = new lunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = lunr.Pipeline.registeredFunctions[fnName];\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load unregistered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._stack.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    pos = pos + 1;\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._stack.indexOf(fn);\n\n    if (pos == -1) {\n      return;\n    }\n\n    this._stack.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that make up the pipeline against the\n   * passed tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.run = function (tokens) {\n    var stackLength = this._stack.length;\n\n    for (var i = 0; i < stackLength; i++) {\n      var fn = this._stack[i];\n      var memo = [];\n\n      for (var j = 0; j < tokens.length; j++) {\n        var result = fn(tokens[j], j, tokens);\n        if (result === null || result === void 0 || result === '') continue;\n\n        if (Array.isArray(result)) {\n          for (var k = 0; k < result.length; k++) {\n            memo.push(result[k]);\n          }\n        } else {\n          memo.push(result);\n        }\n      }\n\n      tokens = memo;\n    }\n\n    return tokens;\n  };\n  /**\n   * Convenience method for passing a string through a pipeline and getting\n   * strings out. This method takes care of wrapping the passed string in a\n   * token and mapping the resulting tokens back to strings.\n   *\n   * @param {string} str - The string to pass through the pipeline.\n   * @param {?object} metadata - Optional metadata to associate with the token\n   * passed to the pipeline.\n   * @returns {string[]}\n   */\n\n\n  lunr.Pipeline.prototype.runString = function (str, metadata) {\n    var token = new lunr.Token(str, metadata);\n    return this.run([token]).map(function (t) {\n      return t.toString();\n    });\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   */\n\n\n  lunr.Pipeline.prototype.reset = function () {\n    this._stack = [];\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.toJSON = function () {\n    return this._stack.map(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * lunr.Vector\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A vector is used to construct the vector space of documents and queries. These\n   * vectors support operations to determine the similarity between two documents or\n   * a document and a query.\n   *\n   * Normally no parameters are required for initializing a vector, but in the case of\n   * loading a previously dumped vector the raw elements can be provided to the constructor.\n   *\n   * For performance reasons vectors are implemented with a flat array, where an elements\n   * index is immediately followed by its value. E.g. [index, value, index, value]. This\n   * allows the underlying array to be as sparse as possible and still offer decent\n   * performance when being used for vector calculations.\n   *\n   * @constructor\n   * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n   */\n\n\n  lunr.Vector = function (elements) {\n    this._magnitude = 0;\n    this.elements = elements || [];\n  };\n  /**\n   * Calculates the position within the vector to insert a given index.\n   *\n   * This is used internally by insert and upsert. If there are duplicate indexes then\n   * the position is returned as if the value for that index were to be updated, but it\n   * is the callers responsibility to check whether there is a duplicate at that index\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.positionForIndex = function (index) {\n    // For an empty vector the tuple can be inserted at the beginning\n    if (this.elements.length == 0) {\n      return 0;\n    }\n\n    var start = 0,\n        end = this.elements.length / 2,\n        sliceLength = end - start,\n        pivotPoint = Math.floor(sliceLength / 2),\n        pivotIndex = this.elements[pivotPoint * 2];\n\n    while (sliceLength > 1) {\n      if (pivotIndex < index) {\n        start = pivotPoint;\n      }\n\n      if (pivotIndex > index) {\n        end = pivotPoint;\n      }\n\n      if (pivotIndex == index) {\n        break;\n      }\n\n      sliceLength = end - start;\n      pivotPoint = start + Math.floor(sliceLength / 2);\n      pivotIndex = this.elements[pivotPoint * 2];\n    }\n\n    if (pivotIndex == index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex > index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex < index) {\n      return (pivotPoint + 1) * 2;\n    }\n  };\n  /**\n   * Inserts an element at an index within the vector.\n   *\n   * Does not allow duplicates, will throw an error if there is already an entry\n   * for this index.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   */\n\n\n  lunr.Vector.prototype.insert = function (insertIdx, val) {\n    this.upsert(insertIdx, val, function () {\n      throw \"duplicate index\";\n    });\n  };\n  /**\n   * Inserts or updates an existing index within the vector.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   * @param {function} fn - A function that is called for updates, the existing value and the\n   * requested value are passed as arguments\n   */\n\n\n  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n    this._magnitude = 0;\n    var position = this.positionForIndex(insertIdx);\n\n    if (this.elements[position] == insertIdx) {\n      this.elements[position + 1] = fn(this.elements[position + 1], val);\n    } else {\n      this.elements.splice(position, 0, insertIdx, val);\n    }\n  };\n  /**\n   * Calculates the magnitude of this vector.\n   *\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.magnitude = function () {\n    if (this._magnitude) return this._magnitude;\n    var sumOfSquares = 0,\n        elementsLength = this.elements.length;\n\n    for (var i = 1; i < elementsLength; i += 2) {\n      var val = this.elements[i];\n      sumOfSquares += val * val;\n    }\n\n    return this._magnitude = Math.sqrt(sumOfSquares);\n  };\n  /**\n   * Calculates the dot product of this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.dot = function (otherVector) {\n    var dotProduct = 0,\n        a = this.elements,\n        b = otherVector.elements,\n        aLen = a.length,\n        bLen = b.length,\n        aVal = 0,\n        bVal = 0,\n        i = 0,\n        j = 0;\n\n    while (i < aLen && j < bLen) {\n      aVal = a[i], bVal = b[j];\n\n      if (aVal < bVal) {\n        i += 2;\n      } else if (aVal > bVal) {\n        j += 2;\n      } else if (aVal == bVal) {\n        dotProduct += a[i + 1] * b[j + 1];\n        i += 2;\n        j += 2;\n      }\n    }\n\n    return dotProduct;\n  };\n  /**\n   * Calculates the similarity between this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The other vector to calculate the\n   * similarity with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.similarity = function (otherVector) {\n    return this.dot(otherVector) / this.magnitude() || 0;\n  };\n  /**\n   * Converts the vector to an array of the elements within the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toArray = function () {\n    var output = new Array(this.elements.length / 2);\n\n    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n      output[j] = this.elements[i];\n    }\n\n    return output;\n  };\n  /**\n   * A JSON serializable representation of the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toJSON = function () {\n    return this.elements;\n  };\n  /* eslint-disable */\n\n  /*!\n   * lunr.stemmer\n   * Copyright (C) 2020 Oliver Nightingale\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * lunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token - The string to stem\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   * @function\n   */\n\n\n  lunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return function (token) {\n      return token.update(porterStemmer);\n    };\n  }();\n\n  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer');\n  /*!\n   * lunr.stopWordFilter\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n   * list of stop words.\n   *\n   * The built in lunr.stopWordFilter is built using this generator and can be used\n   * to generate custom stopWordFilters for applications or non English languages.\n   *\n   * @function\n   * @param {Array} token The token to pass through the filter\n   * @returns {lunr.PipelineFunction}\n   * @see lunr.Pipeline\n   * @see lunr.stopWordFilter\n   */\n\n  lunr.generateStopWordFilter = function (stopWords) {\n    var words = stopWords.reduce(function (memo, stopWord) {\n      memo[stopWord] = stopWord;\n      return memo;\n    }, {});\n    return function (token) {\n      if (token && words[token.toString()] !== token.toString()) return token;\n    };\n  };\n  /**\n   * lunr.stopWordFilter is an English language stop word list filter, any words\n   * contained in the list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   *\n   * @function\n   * @implements {lunr.PipelineFunction}\n   * @params {lunr.Token} token - A token to check for being a stop word.\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.stopWordFilter = lunr.generateStopWordFilter(['a', 'able', 'about', 'across', 'after', 'all', 'almost', 'also', 'am', 'among', 'an', 'and', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'but', 'by', 'can', 'cannot', 'could', 'dear', 'did', 'do', 'does', 'either', 'else', 'ever', 'every', 'for', 'from', 'get', 'got', 'had', 'has', 'have', 'he', 'her', 'hers', 'him', 'his', 'how', 'however', 'i', 'if', 'in', 'into', 'is', 'it', 'its', 'just', 'least', 'let', 'like', 'likely', 'may', 'me', 'might', 'most', 'must', 'my', 'neither', 'no', 'nor', 'not', 'of', 'off', 'often', 'on', 'only', 'or', 'other', 'our', 'own', 'rather', 'said', 'say', 'says', 'she', 'should', 'since', 'so', 'some', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'tis', 'to', 'too', 'twas', 'us', 'wants', 'was', 'we', 'were', 'what', 'when', 'where', 'which', 'while', 'who', 'whom', 'why', 'will', 'with', 'would', 'yet', 'you', 'your']);\n  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * lunr.trimmer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.trimmer is a pipeline function for trimming non word\n   * characters from the beginning and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token The token to pass through the filter\n   * @returns {lunr.Token}\n   * @see lunr.Pipeline\n   */\n\n  lunr.trimmer = function (token) {\n    return token.update(function (s) {\n      return s.replace(/^\\W+/, '').replace(/\\W+$/, '');\n    });\n  };\n\n  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer');\n  /*!\n   * lunr.TokenSet\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A token set is used to store the unique list of all tokens\n   * within an index. Token sets are also used to represent an\n   * incoming query to the index, this query token set and index\n   * token set are then intersected to find which tokens to look\n   * up in the inverted index.\n   *\n   * A token set can hold multiple tokens, as in the case of the\n   * index token set, or it can hold a single token as in the\n   * case of a simple query token set.\n   *\n   * Additionally token sets are used to perform wildcard matching.\n   * Leading, contained and trailing wildcards are supported, and\n   * from this edit distance matching can also be provided.\n   *\n   * Token sets are implemented as a minimal finite state automata,\n   * where both common prefixes and suffixes are shared between tokens.\n   * This helps to reduce the space used for storing the token set.\n   *\n   * @constructor\n   */\n\n  lunr.TokenSet = function () {\n    this.final = false;\n    this.edges = {};\n    this.id = lunr.TokenSet._nextId;\n    lunr.TokenSet._nextId += 1;\n  };\n  /**\n   * Keeps track of the next, auto increment, identifier to assign\n   * to a new tokenSet.\n   *\n   * TokenSets require a unique identifier to be correctly minimised.\n   *\n   * @private\n   */\n\n\n  lunr.TokenSet._nextId = 1;\n  /**\n   * Creates a TokenSet instance from the given sorted array of words.\n   *\n   * @param {String[]} arr - A sorted array of strings to create the set from.\n   * @returns {lunr.TokenSet}\n   * @throws Will throw an error if the input array is not sorted.\n   */\n\n  lunr.TokenSet.fromArray = function (arr) {\n    var builder = new lunr.TokenSet.Builder();\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      builder.insert(arr[i]);\n    }\n\n    builder.finish();\n    return builder.root;\n  };\n  /**\n   * Creates a token set from a query clause.\n   *\n   * @private\n   * @param {Object} clause - A single clause from lunr.Query.\n   * @param {string} clause.term - The query clause term.\n   * @param {number} [clause.editDistance] - The optional edit distance for the term.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromClause = function (clause) {\n    if ('editDistance' in clause) {\n      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance);\n    } else {\n      return lunr.TokenSet.fromString(clause.term);\n    }\n  };\n  /**\n   * Creates a token set representing a single string with a specified\n   * edit distance.\n   *\n   * Insertions, deletions, substitutions and transpositions are each\n   * treated as an edit distance of 1.\n   *\n   * Increasing the allowed edit distance will have a dramatic impact\n   * on the performance of both creating and intersecting these TokenSets.\n   * It is advised to keep the edit distance less than 3.\n   *\n   * @param {string} str - The string to create the token set from.\n   * @param {number} editDistance - The allowed edit distance to match.\n   * @returns {lunr.Vector}\n   */\n\n\n  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n    var root = new lunr.TokenSet();\n    var stack = [{\n      node: root,\n      editsRemaining: editDistance,\n      str: str\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(); // no edit\n\n      if (frame.str.length > 0) {\n        var char = frame.str.charAt(0),\n            noEditNode;\n\n        if (char in frame.node.edges) {\n          noEditNode = frame.node.edges[char];\n        } else {\n          noEditNode = new lunr.TokenSet();\n          frame.node.edges[char] = noEditNode;\n        }\n\n        if (frame.str.length == 1) {\n          noEditNode.final = true;\n        }\n\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        });\n      }\n\n      if (frame.editsRemaining == 0) {\n        continue;\n      } // insertion\n\n\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"];\n      } else {\n        var insertionNode = new lunr.TokenSet();\n        frame.node.edges[\"*\"] = insertionNode;\n      }\n\n      if (frame.str.length == 0) {\n        insertionNode.final = true;\n      }\n\n      stack.push({\n        node: insertionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str\n      }); // deletion\n      // can only do a deletion if we have enough edits remaining\n      // and if there are characters left to delete in the string\n\n      if (frame.str.length > 1) {\n        stack.push({\n          node: frame.node,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // deletion\n      // just removing the last character from the str\n\n\n      if (frame.str.length == 1) {\n        frame.node.final = true;\n      } // substitution\n      // can only do a substitution if we have enough edits remaining\n      // and if there are characters left to substitute\n\n\n      if (frame.str.length >= 1) {\n        if (\"*\" in frame.node.edges) {\n          var substitutionNode = frame.node.edges[\"*\"];\n        } else {\n          var substitutionNode = new lunr.TokenSet();\n          frame.node.edges[\"*\"] = substitutionNode;\n        }\n\n        if (frame.str.length == 1) {\n          substitutionNode.final = true;\n        }\n\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // transposition\n      // can only do a transposition if there are edits remaining\n      // and there are enough characters to transpose\n\n\n      if (frame.str.length > 1) {\n        var charA = frame.str.charAt(0),\n            charB = frame.str.charAt(1),\n            transposeNode;\n\n        if (charB in frame.node.edges) {\n          transposeNode = frame.node.edges[charB];\n        } else {\n          transposeNode = new lunr.TokenSet();\n          frame.node.edges[charB] = transposeNode;\n        }\n\n        if (frame.str.length == 1) {\n          transposeNode.final = true;\n        }\n\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        });\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Creates a TokenSet from a string.\n   *\n   * The string may contain one or more wildcard characters (*)\n   * that will allow wildcard matching when intersecting with\n   * another TokenSet.\n   *\n   * @param {string} str - The string to create a TokenSet from.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromString = function (str) {\n    var node = new lunr.TokenSet(),\n        root = node;\n    /*\n     * Iterates through all characters within the passed string\n     * appending a node for each character.\n     *\n     * When a wildcard character is found then a self\n     * referencing edge is introduced to continually match\n     * any number of any characters.\n     */\n\n    for (var i = 0, len = str.length; i < len; i++) {\n      var char = str[i],\n          final = i == len - 1;\n\n      if (char == \"*\") {\n        node.edges[char] = node;\n        node.final = final;\n      } else {\n        var next = new lunr.TokenSet();\n        next.final = final;\n        node.edges[char] = next;\n        node = next;\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Converts this TokenSet into an array of strings\n   * contained within the TokenSet.\n   *\n   * This is not intended to be used on a TokenSet that\n   * contains wildcards, in these cases the results are\n   * undefined and are likely to cause an infinite loop.\n   *\n   * @returns {string[]}\n   */\n\n\n  lunr.TokenSet.prototype.toArray = function () {\n    var words = [];\n    var stack = [{\n      prefix: \"\",\n      node: this\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(),\n          edges = Object.keys(frame.node.edges),\n          len = edges.length;\n\n      if (frame.node.final) {\n        /* In Safari, at this point the prefix is sometimes corrupted, see:\n         * https://github.com/olivernn/lunr.js/issues/279 Calling any\n         * String.prototype method forces Safari to \"cast\" this string to what\n         * it's supposed to be, fixing the bug. */\n        frame.prefix.charAt(0);\n        words.push(frame.prefix);\n      }\n\n      for (var i = 0; i < len; i++) {\n        var edge = edges[i];\n        stack.push({\n          prefix: frame.prefix.concat(edge),\n          node: frame.node.edges[edge]\n        });\n      }\n    }\n\n    return words;\n  };\n  /**\n   * Generates a string representation of a TokenSet.\n   *\n   * This is intended to allow TokenSets to be used as keys\n   * in objects, largely to aid the construction and minimisation\n   * of a TokenSet. As such it is not designed to be a human\n   * friendly representation of the TokenSet.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.TokenSet.prototype.toString = function () {\n    // NOTE: Using Object.keys here as this.edges is very likely\n    // to enter 'hash-mode' with many keys being added\n    //\n    // avoiding a for-in loop here as it leads to the function\n    // being de-optimised (at least in V8). From some simple\n    // benchmarks the performance is comparable, but allowing\n    // V8 to optimize may mean easy performance wins in the future.\n    if (this._str) {\n      return this._str;\n    }\n\n    var str = this.final ? '1' : '0',\n        labels = Object.keys(this.edges).sort(),\n        len = labels.length;\n\n    for (var i = 0; i < len; i++) {\n      var label = labels[i],\n          node = this.edges[label];\n      str = str + label + node.id;\n    }\n\n    return str;\n  };\n  /**\n   * Returns a new TokenSet that is the intersection of\n   * this TokenSet and the passed TokenSet.\n   *\n   * This intersection will take into account any wildcards\n   * contained within the TokenSet.\n   *\n   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.prototype.intersect = function (b) {\n    var output = new lunr.TokenSet(),\n        frame = undefined;\n    var stack = [{\n      qNode: b,\n      output: output,\n      node: this\n    }];\n\n    while (stack.length) {\n      frame = stack.pop(); // NOTE: As with the #toString method, we are using\n      // Object.keys and a for loop instead of a for-in loop\n      // as both of these objects enter 'hash' mode, causing\n      // the function to be de-optimised in V8\n\n      var qEdges = Object.keys(frame.qNode.edges),\n          qLen = qEdges.length,\n          nEdges = Object.keys(frame.node.edges),\n          nLen = nEdges.length;\n\n      for (var q = 0; q < qLen; q++) {\n        var qEdge = qEdges[q];\n\n        for (var n = 0; n < nLen; n++) {\n          var nEdge = nEdges[n];\n\n          if (nEdge == qEdge || qEdge == '*') {\n            var node = frame.node.edges[nEdge],\n                qNode = frame.qNode.edges[qEdge],\n                final = node.final && qNode.final,\n                next = undefined;\n\n            if (nEdge in frame.output.edges) {\n              // an edge already exists for this character\n              // no need to create a new node, just set the finality\n              // bit unless this node is already final\n              next = frame.output.edges[nEdge];\n              next.final = next.final || final;\n            } else {\n              // no edge exists yet, must create one\n              // set the finality bit and insert it\n              // into the output\n              next = new lunr.TokenSet();\n              next.final = final;\n              frame.output.edges[nEdge] = next;\n            }\n\n            stack.push({\n              qNode: qNode,\n              output: next,\n              node: node\n            });\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n\n  lunr.TokenSet.Builder = function () {\n    this.previousWord = \"\";\n    this.root = new lunr.TokenSet();\n    this.uncheckedNodes = [];\n    this.minimizedNodes = {};\n  };\n\n  lunr.TokenSet.Builder.prototype.insert = function (word) {\n    var node,\n        commonPrefix = 0;\n\n    if (word < this.previousWord) {\n      throw new Error(\"Out of order word insertion\");\n    }\n\n    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n      if (word[i] != this.previousWord[i]) break;\n      commonPrefix++;\n    }\n\n    this.minimize(commonPrefix);\n\n    if (this.uncheckedNodes.length == 0) {\n      node = this.root;\n    } else {\n      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child;\n    }\n\n    for (var i = commonPrefix; i < word.length; i++) {\n      var nextNode = new lunr.TokenSet(),\n          char = word[i];\n      node.edges[char] = nextNode;\n      this.uncheckedNodes.push({\n        parent: node,\n        char: char,\n        child: nextNode\n      });\n      node = nextNode;\n    }\n\n    node.final = true;\n    this.previousWord = word;\n  };\n\n  lunr.TokenSet.Builder.prototype.finish = function () {\n    this.minimize(0);\n  };\n\n  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n      var node = this.uncheckedNodes[i],\n          childKey = node.child.toString();\n\n      if (childKey in this.minimizedNodes) {\n        node.parent.edges[node.char] = this.minimizedNodes[childKey];\n      } else {\n        // Cache the key for this node since\n        // we know it can't change anymore\n        node.child._str = childKey;\n        this.minimizedNodes[childKey] = node.child;\n      }\n\n      this.uncheckedNodes.pop();\n    }\n  };\n  /*!\n   * lunr.Index\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * An index contains the built index of all documents and provides a query interface\n   * to the index.\n   *\n   * Usually instances of lunr.Index will not be created using this constructor, instead\n   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n   * used to load previously built and serialized indexes.\n   *\n   * @constructor\n   * @param {Object} attrs - The attributes of the built search index.\n   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n   * @param {string[]} attrs.fields - The names of indexed document fields.\n   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n   */\n\n\n  lunr.Index = function (attrs) {\n    this.invertedIndex = attrs.invertedIndex;\n    this.fieldVectors = attrs.fieldVectors;\n    this.tokenSet = attrs.tokenSet;\n    this.fields = attrs.fields;\n    this.pipeline = attrs.pipeline;\n  };\n  /**\n   * A result contains details of a document matching a search query.\n   * @typedef {Object} lunr.Index~Result\n   * @property {string} ref - The reference of the document this result represents.\n   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n   */\n\n  /**\n   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n   * query language which itself is parsed into an instance of lunr.Query.\n   *\n   * For programmatically building queries it is advised to directly use lunr.Query, the query language\n   * is best used for human entered text rather than program generated text.\n   *\n   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n   * or 'world', though those that contain both will rank higher in the results.\n   *\n   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n   * wildcards will increase the number of documents that will be found but can also have a negative\n   * impact on query performance, especially with wildcards at the beginning of a term.\n   *\n   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n   * hello in the title field will match this query. Using a field not present in the index will lead\n   * to an error being thrown.\n   *\n   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n   * Avoid large values for edit distance to improve query performance.\n   *\n   * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n   * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n   *\n   * To escape special characters the backslash character '\\' can be used, this allows searches to include\n   * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n   * of attempting to apply a boost of 2 to the search term \"foo\".\n   *\n   * @typedef {string} lunr.Index~QueryString\n   * @example <caption>Simple single term query</caption>\n   * hello\n   * @example <caption>Multiple term query</caption>\n   * hello world\n   * @example <caption>term scoped to a field</caption>\n   * title:hello\n   * @example <caption>term with a boost of 10</caption>\n   * hello^10\n   * @example <caption>term with an edit distance of 2</caption>\n   * hello~2\n   * @example <caption>terms with presence modifiers</caption>\n   * -foo +bar baz\n   */\n\n  /**\n   * Performs a search against the index using lunr query syntax.\n   *\n   * Results will be returned sorted by their score, the most relevant results\n   * will be returned first.  For details on how the score is calculated, please see\n   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n   *\n   * For more programmatic querying use lunr.Index#query.\n   *\n   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.search = function (queryString) {\n    return this.query(function (query) {\n      var parser = new lunr.QueryParser(queryString, query);\n      parser.parse();\n    });\n  };\n  /**\n   * A query builder callback provides a query object to be used to express\n   * the query to perform on the index.\n   *\n   * @callback lunr.Index~queryBuilder\n   * @param {lunr.Query} query - The query object to build up.\n   * @this lunr.Query\n   */\n\n  /**\n   * Performs a query against the index using the yielded lunr.Query object.\n   *\n   * If performing programmatic queries against the index, this method is preferred\n   * over lunr.Index#search so as to avoid the additional query parsing overhead.\n   *\n   * A query object is yielded to the supplied function which should be used to\n   * express the query to be run against the index.\n   *\n   * Note that although this function takes a callback parameter it is _not_ an\n   * asynchronous operation, the callback is just yielded a query object to be\n   * customized.\n   *\n   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.query = function (fn) {\n    // for each query clause\n    // * process terms\n    // * expand terms from token set\n    // * find matching documents and metadata\n    // * get document vectors\n    // * score documents\n    var query = new lunr.Query(this.fields),\n        matchingFields = Object.create(null),\n        queryVectors = Object.create(null),\n        termFieldCache = Object.create(null),\n        requiredMatches = Object.create(null),\n        prohibitedMatches = Object.create(null);\n    /*\n     * To support field level boosts a query vector is created per\n     * field. An empty vector is eagerly created to support negated\n     * queries.\n     */\n\n    for (var i = 0; i < this.fields.length; i++) {\n      queryVectors[this.fields[i]] = new lunr.Vector();\n    }\n\n    fn.call(query, query);\n\n    for (var i = 0; i < query.clauses.length; i++) {\n      /*\n       * Unless the pipeline has been disabled for this term, which is\n       * the case for terms with wildcards, we need to pass the clause\n       * term through the search pipeline. A pipeline returns an array\n       * of processed terms. Pipeline functions may expand the passed\n       * term, which means we may end up performing multiple index lookups\n       * for a single query term.\n       */\n      var clause = query.clauses[i],\n          terms = null,\n          clauseMatches = lunr.Set.empty;\n\n      if (clause.usePipeline) {\n        terms = this.pipeline.runString(clause.term, {\n          fields: clause.fields\n        });\n      } else {\n        terms = [clause.term];\n      }\n\n      for (var m = 0; m < terms.length; m++) {\n        var term = terms[m];\n        /*\n         * Each term returned from the pipeline needs to use the same query\n         * clause object, e.g. the same boost and or edit distance. The\n         * simplest way to do this is to re-use the clause object but mutate\n         * its term property.\n         */\n\n        clause.term = term;\n        /*\n         * From the term in the clause we create a token set which will then\n         * be used to intersect the indexes token set to get a list of terms\n         * to lookup in the inverted index\n         */\n\n        var termTokenSet = lunr.TokenSet.fromClause(clause),\n            expandedTerms = this.tokenSet.intersect(termTokenSet).toArray();\n        /*\n         * If a term marked as required does not exist in the tokenSet it is\n         * impossible for the search to return any matches. We set all the field\n         * scoped required matches set to empty and stop examining any further\n         * clauses.\n         */\n\n        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n          for (var k = 0; k < clause.fields.length; k++) {\n            var field = clause.fields[k];\n            requiredMatches[field] = lunr.Set.empty;\n          }\n\n          break;\n        }\n\n        for (var j = 0; j < expandedTerms.length; j++) {\n          /*\n           * For each term get the posting and termIndex, this is required for\n           * building the query vector.\n           */\n          var expandedTerm = expandedTerms[j],\n              posting = this.invertedIndex[expandedTerm],\n              termIndex = posting._index;\n\n          for (var k = 0; k < clause.fields.length; k++) {\n            /*\n             * For each field that this query term is scoped by (by default\n             * all fields are in scope) we need to get all the document refs\n             * that have this term in that field.\n             *\n             * The posting is the entry in the invertedIndex for the matching\n             * term from above.\n             */\n            var field = clause.fields[k],\n                fieldPosting = posting[field],\n                matchingDocumentRefs = Object.keys(fieldPosting),\n                termField = expandedTerm + \"/\" + field,\n                matchingDocumentsSet = new lunr.Set(matchingDocumentRefs);\n            /*\n             * if the presence of this term is required ensure that the matching\n             * documents are added to the set of required matches for this clause.\n             *\n             */\n\n            if (clause.presence == lunr.Query.presence.REQUIRED) {\n              clauseMatches = clauseMatches.union(matchingDocumentsSet);\n\n              if (requiredMatches[field] === undefined) {\n                requiredMatches[field] = lunr.Set.complete;\n              }\n            }\n            /*\n             * if the presence of this term is prohibited ensure that the matching\n             * documents are added to the set of prohibited matches for this field,\n             * creating that set if it does not yet exist.\n             */\n\n\n            if (clause.presence == lunr.Query.presence.PROHIBITED) {\n              if (prohibitedMatches[field] === undefined) {\n                prohibitedMatches[field] = lunr.Set.empty;\n              }\n\n              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet);\n              /*\n               * Prohibited matches should not be part of the query vector used for\n               * similarity scoring and no metadata should be extracted so we continue\n               * to the next field\n               */\n\n              continue;\n            }\n            /*\n             * The query field vector is populated using the termIndex found for\n             * the term and a unit value with the appropriate boost applied.\n             * Using upsert because there could already be an entry in the vector\n             * for the term we are working with. In that case we just add the scores\n             * together.\n             */\n\n\n            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) {\n              return a + b;\n            });\n            /**\n             * If we've already seen this term, field combo then we've already collected\n             * the matching documents and metadata, no need to go through all that again\n             */\n\n            if (termFieldCache[termField]) {\n              continue;\n            }\n\n            for (var l = 0; l < matchingDocumentRefs.length; l++) {\n              /*\n               * All metadata for this term/field/document triple\n               * are then extracted and collected into an instance\n               * of lunr.MatchData ready to be returned in the query\n               * results\n               */\n              var matchingDocumentRef = matchingDocumentRefs[l],\n                  matchingFieldRef = new lunr.FieldRef(matchingDocumentRef, field),\n                  metadata = fieldPosting[matchingDocumentRef],\n                  fieldMatch;\n\n              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n                matchingFields[matchingFieldRef] = new lunr.MatchData(expandedTerm, field, metadata);\n              } else {\n                fieldMatch.add(expandedTerm, field, metadata);\n              }\n            }\n\n            termFieldCache[termField] = true;\n          }\n        }\n      }\n      /**\n       * If the presence was required we need to update the requiredMatches field sets.\n       * We do this after all fields for the term have collected their matches because\n       * the clause terms presence is required in _any_ of the fields not _all_ of the\n       * fields.\n       */\n\n\n      if (clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k];\n          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches);\n        }\n      }\n    }\n    /**\n     * Need to combine the field scoped required and prohibited\n     * matching documents into a global set of required and prohibited\n     * matches\n     */\n\n\n    var allRequiredMatches = lunr.Set.complete,\n        allProhibitedMatches = lunr.Set.empty;\n\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n\n      if (requiredMatches[field]) {\n        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field]);\n      }\n\n      if (prohibitedMatches[field]) {\n        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field]);\n      }\n    }\n\n    var matchingFieldRefs = Object.keys(matchingFields),\n        results = [],\n        matches = Object.create(null);\n    /*\n     * If the query is negated (contains only prohibited terms)\n     * we need to get _all_ fieldRefs currently existing in the\n     * index. This is only done when we know that the query is\n     * entirely prohibited terms to avoid any cost of getting all\n     * fieldRefs unnecessarily.\n     *\n     * Additionally, blank MatchData must be created to correctly\n     * populate the results.\n     */\n\n    if (query.isNegated()) {\n      matchingFieldRefs = Object.keys(this.fieldVectors);\n\n      for (var i = 0; i < matchingFieldRefs.length; i++) {\n        var matchingFieldRef = matchingFieldRefs[i];\n        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef);\n        matchingFields[matchingFieldRef] = new lunr.MatchData();\n      }\n    }\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      /*\n       * Currently we have document fields that match the query, but we\n       * need to return documents. The matchData and scores are combined\n       * from multiple fields belonging to the same document.\n       *\n       * Scores are calculated by field, using the query vectors created\n       * above, and combined into a final document score using addition.\n       */\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n          docRef = fieldRef.docRef;\n\n      if (!allRequiredMatches.contains(docRef)) {\n        continue;\n      }\n\n      if (allProhibitedMatches.contains(docRef)) {\n        continue;\n      }\n\n      var fieldVector = this.fieldVectors[fieldRef],\n          score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n          docMatch;\n\n      if ((docMatch = matches[docRef]) !== undefined) {\n        docMatch.score += score;\n        docMatch.matchData.combine(matchingFields[fieldRef]);\n      } else {\n        var match = {\n          ref: docRef,\n          score: score,\n          matchData: matchingFields[fieldRef]\n        };\n        matches[docRef] = match;\n        results.push(match);\n      }\n    }\n    /*\n     * Sort the results objects by score, highest first.\n     */\n\n\n    return results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n  };\n  /**\n   * Prepares the index for JSON serialization.\n   *\n   * The schema for this JSON blob will be described in a\n   * separate JSON schema file.\n   *\n   * @returns {Object}\n   */\n\n\n  lunr.Index.prototype.toJSON = function () {\n    var invertedIndex = Object.keys(this.invertedIndex).sort().map(function (term) {\n      return [term, this.invertedIndex[term]];\n    }, this);\n    var fieldVectors = Object.keys(this.fieldVectors).map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()];\n    }, this);\n    return {\n      version: lunr.version,\n      fields: this.fields,\n      fieldVectors: fieldVectors,\n      invertedIndex: invertedIndex,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Loads a previously serialized lunr.Index\n   *\n   * @param {Object} serializedIndex - A previously serialized lunr.Index\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Index.load = function (serializedIndex) {\n    var attrs = {},\n        fieldVectors = {},\n        serializedVectors = serializedIndex.fieldVectors,\n        invertedIndex = Object.create(null),\n        serializedInvertedIndex = serializedIndex.invertedIndex,\n        tokenSetBuilder = new lunr.TokenSet.Builder(),\n        pipeline = lunr.Pipeline.load(serializedIndex.pipeline);\n\n    if (serializedIndex.version != lunr.version) {\n      lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\");\n    }\n\n    for (var i = 0; i < serializedVectors.length; i++) {\n      var tuple = serializedVectors[i],\n          ref = tuple[0],\n          elements = tuple[1];\n      fieldVectors[ref] = new lunr.Vector(elements);\n    }\n\n    for (var i = 0; i < serializedInvertedIndex.length; i++) {\n      var tuple = serializedInvertedIndex[i],\n          term = tuple[0],\n          posting = tuple[1];\n      tokenSetBuilder.insert(term);\n      invertedIndex[term] = posting;\n    }\n\n    tokenSetBuilder.finish();\n    attrs.fields = serializedIndex.fields;\n    attrs.fieldVectors = fieldVectors;\n    attrs.invertedIndex = invertedIndex;\n    attrs.tokenSet = tokenSetBuilder.root;\n    attrs.pipeline = pipeline;\n    return new lunr.Index(attrs);\n  };\n  /*!\n   * lunr.Builder\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Builder performs indexing on a set of documents and\n   * returns instances of lunr.Index ready for querying.\n   *\n   * All configuration of the index is done via the builder, the\n   * fields to index, the document reference, the text processing\n   * pipeline and document scoring parameters are all set on the\n   * builder before indexing.\n   *\n   * @constructor\n   * @property {string} _ref - Internal reference to the document reference field.\n   * @property {string[]} _fields - Internal reference to the document fields to index.\n   * @property {object} invertedIndex - The inverted index maps terms to document fields.\n   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n   * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n   * @property {number} documentCount - Keeps track of the total number of documents indexed.\n   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n   */\n\n\n  lunr.Builder = function () {\n    this._ref = \"id\";\n    this._fields = Object.create(null);\n    this._documents = Object.create(null);\n    this.invertedIndex = Object.create(null);\n    this.fieldTermFrequencies = {};\n    this.fieldLengths = {};\n    this.tokenizer = lunr.tokenizer;\n    this.pipeline = new lunr.Pipeline();\n    this.searchPipeline = new lunr.Pipeline();\n    this.documentCount = 0;\n    this._b = 0.75;\n    this._k1 = 1.2;\n    this.termIndex = 0;\n    this.metadataWhitelist = [];\n  };\n  /**\n   * Sets the document field used as the document reference. Every document must have this field.\n   * The type of this field in the document should be a string, if it is not a string it will be\n   * coerced into a string by calling toString.\n   *\n   * The default ref is 'id'.\n   *\n   * The ref should _not_ be changed during indexing, it should be set before any documents are\n   * added to the index. Changing it during indexing can lead to inconsistent results.\n   *\n   * @param {string} ref - The name of the reference field in the document.\n   */\n\n\n  lunr.Builder.prototype.ref = function (ref) {\n    this._ref = ref;\n  };\n  /**\n   * A function that is used to extract a field from a document.\n   *\n   * Lunr expects a field to be at the top level of a document, if however the field\n   * is deeply nested within a document an extractor function can be used to extract\n   * the right field for indexing.\n   *\n   * @callback fieldExtractor\n   * @param {object} doc - The document being added to the index.\n   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n   * @example <caption>Extracting a nested field</caption>\n   * function (doc) { return doc.nested.field }\n   */\n\n  /**\n   * Adds a field to the list of document fields that will be indexed. Every document being\n   * indexed should have this field. Null values for this field in indexed documents will\n   * not cause errors but will limit the chance of that document being retrieved by searches.\n   *\n   * All fields should be added before adding documents to the index. Adding fields after\n   * a document has been indexed will have no effect on already indexed documents.\n   *\n   * Fields can be boosted at build time. This allows terms within that field to have more\n   * importance when ranking search results. Use a field boost to specify that matches within\n   * one field are more important than other fields.\n   *\n   * @param {string} fieldName - The name of a field to index in all documents.\n   * @param {object} attributes - Optional attributes associated with this field.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n   * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n   */\n\n\n  lunr.Builder.prototype.field = function (fieldName, attributes) {\n    if (/\\//.test(fieldName)) {\n      throw new RangeError(\"Field '\" + fieldName + \"' contains illegal character '/'\");\n    }\n\n    this._fields[fieldName] = attributes || {};\n  };\n  /**\n   * A parameter to tune the amount of field length normalisation that is applied when\n   * calculating relevance scores. A value of 0 will completely disable any normalisation\n   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n   * will be clamped to the range 0 - 1.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.b = function (number) {\n    if (number < 0) {\n      this._b = 0;\n    } else if (number > 1) {\n      this._b = 1;\n    } else {\n      this._b = number;\n    }\n  };\n  /**\n   * A parameter that controls the speed at which a rise in term frequency results in term\n   * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n   * slower saturation levels, a lower value will result in quicker saturation.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.k1 = function (number) {\n    this._k1 = number;\n  };\n  /**\n   * Adds a document to the index.\n   *\n   * Before adding fields to the index the index should have been fully setup, with the document\n   * ref and all fields to index already having been specified.\n   *\n   * The document must have a field name as specified by the ref (by default this is 'id') and\n   * it should have all fields defined for indexing, though null or undefined values will not\n   * cause errors.\n   *\n   * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n   * this document should rank higher in search results than other documents.\n   *\n   * @param {object} doc - The document to add to the index.\n   * @param {object} attributes - Optional attributes associated with this document.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n   */\n\n\n  lunr.Builder.prototype.add = function (doc, attributes) {\n    var docRef = doc[this._ref],\n        fields = Object.keys(this._fields);\n    this._documents[docRef] = attributes || {};\n    this.documentCount += 1;\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i],\n          extractor = this._fields[fieldName].extractor,\n          field = extractor ? extractor(doc) : doc[fieldName],\n          tokens = this.tokenizer(field, {\n        fields: [fieldName]\n      }),\n          terms = this.pipeline.run(tokens),\n          fieldRef = new lunr.FieldRef(docRef, fieldName),\n          fieldTerms = Object.create(null);\n      this.fieldTermFrequencies[fieldRef] = fieldTerms;\n      this.fieldLengths[fieldRef] = 0; // store the length of this field for this document\n\n      this.fieldLengths[fieldRef] += terms.length; // calculate term frequencies for this field\n\n      for (var j = 0; j < terms.length; j++) {\n        var term = terms[j];\n\n        if (fieldTerms[term] == undefined) {\n          fieldTerms[term] = 0;\n        }\n\n        fieldTerms[term] += 1; // add to inverted index\n        // create an initial posting if one doesn't exist\n\n        if (this.invertedIndex[term] == undefined) {\n          var posting = Object.create(null);\n          posting[\"_index\"] = this.termIndex;\n          this.termIndex += 1;\n\n          for (var k = 0; k < fields.length; k++) {\n            posting[fields[k]] = Object.create(null);\n          }\n\n          this.invertedIndex[term] = posting;\n        } // add an entry for this term/fieldName/docRef to the invertedIndex\n\n\n        if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n          this.invertedIndex[term][fieldName][docRef] = Object.create(null);\n        } // store all whitelisted metadata about this token in the\n        // inverted index\n\n\n        for (var l = 0; l < this.metadataWhitelist.length; l++) {\n          var metadataKey = this.metadataWhitelist[l],\n              metadata = term.metadata[metadataKey];\n\n          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n            this.invertedIndex[term][fieldName][docRef][metadataKey] = [];\n          }\n\n          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata);\n        }\n      }\n    }\n  };\n  /**\n   * Calculates the average document length for this index\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.calculateAverageFieldLengths = function () {\n    var fieldRefs = Object.keys(this.fieldLengths),\n        numberOfFields = fieldRefs.length,\n        accumulator = {},\n        documentsWithField = {};\n\n    for (var i = 0; i < numberOfFields; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          field = fieldRef.fieldName;\n      documentsWithField[field] || (documentsWithField[field] = 0);\n      documentsWithField[field] += 1;\n      accumulator[field] || (accumulator[field] = 0);\n      accumulator[field] += this.fieldLengths[fieldRef];\n    }\n\n    var fields = Object.keys(this._fields);\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i];\n      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName];\n    }\n\n    this.averageFieldLength = accumulator;\n  };\n  /**\n   * Builds a vector space model of every document using lunr.Vector\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createFieldVectors = function () {\n    var fieldVectors = {},\n        fieldRefs = Object.keys(this.fieldTermFrequencies),\n        fieldRefsLength = fieldRefs.length,\n        termIdfCache = Object.create(null);\n\n    for (var i = 0; i < fieldRefsLength; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          fieldName = fieldRef.fieldName,\n          fieldLength = this.fieldLengths[fieldRef],\n          fieldVector = new lunr.Vector(),\n          termFrequencies = this.fieldTermFrequencies[fieldRef],\n          terms = Object.keys(termFrequencies),\n          termsLength = terms.length;\n      var fieldBoost = this._fields[fieldName].boost || 1,\n          docBoost = this._documents[fieldRef.docRef].boost || 1;\n\n      for (var j = 0; j < termsLength; j++) {\n        var term = terms[j],\n            tf = termFrequencies[term],\n            termIndex = this.invertedIndex[term]._index,\n            idf,\n            score,\n            scoreWithPrecision;\n\n        if (termIdfCache[term] === undefined) {\n          idf = lunr.idf(this.invertedIndex[term], this.documentCount);\n          termIdfCache[term] = idf;\n        } else {\n          idf = termIdfCache[term];\n        }\n\n        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf);\n        score *= fieldBoost;\n        score *= docBoost;\n        scoreWithPrecision = Math.round(score * 1000) / 1000; // Converts 1.23456789 to 1.234.\n        // Reducing the precision so that the vectors take up less\n        // space when serialised. Doing it now so that they behave\n        // the same before and after serialisation. Also, this is\n        // the fastest approach to reducing a number's precision in\n        // JavaScript.\n\n        fieldVector.insert(termIndex, scoreWithPrecision);\n      }\n\n      fieldVectors[fieldRef] = fieldVector;\n    }\n\n    this.fieldVectors = fieldVectors;\n  };\n  /**\n   * Creates a token set of all tokens in the index using lunr.TokenSet\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createTokenSet = function () {\n    this.tokenSet = lunr.TokenSet.fromArray(Object.keys(this.invertedIndex).sort());\n  };\n  /**\n   * Builds the index, creating an instance of lunr.Index.\n   *\n   * This completes the indexing process and should only be called\n   * once all documents have been added to the index.\n   *\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Builder.prototype.build = function () {\n    this.calculateAverageFieldLengths();\n    this.createFieldVectors();\n    this.createTokenSet();\n    return new lunr.Index({\n      invertedIndex: this.invertedIndex,\n      fieldVectors: this.fieldVectors,\n      tokenSet: this.tokenSet,\n      fields: Object.keys(this._fields),\n      pipeline: this.searchPipeline\n    });\n  };\n  /**\n   * Applies a plugin to the index builder.\n   *\n   * A plugin is a function that is called with the index builder as its context.\n   * Plugins can be used to customise or extend the behaviour of the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied when building the index.\n   *\n   * The plugin function will be called with the index builder as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index builder as its context.\n   *\n   * @param {Function} plugin The plugin to apply.\n   */\n\n\n  lunr.Builder.prototype.use = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    fn.apply(this, args);\n  };\n  /**\n   * Contains and collects metadata about a matching document.\n   * A single instance of lunr.MatchData is returned as part of every\n   * lunr.Index~Result.\n   *\n   * @constructor\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   * @property {object} metadata - A cloned collection of metadata associated with this document.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData = function (term, field, metadata) {\n    var clonedMetadata = Object.create(null),\n        metadataKeys = Object.keys(metadata || {}); // Cloning the metadata to prevent the original\n    // being mutated during match data combination.\n    // Metadata is kept in an array within the inverted\n    // index so cloning the data can be done with\n    // Array#slice\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n      clonedMetadata[key] = metadata[key].slice();\n    }\n\n    this.metadata = Object.create(null);\n\n    if (term !== undefined) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = clonedMetadata;\n    }\n  };\n  /**\n   * An instance of lunr.MatchData will be created for every term that matches a\n   * document. However only one instance is required in a lunr.Index~Result. This\n   * method combines metadata from another instance of lunr.MatchData with this\n   * objects metadata.\n   *\n   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData.prototype.combine = function (otherMatchData) {\n    var terms = Object.keys(otherMatchData.metadata);\n\n    for (var i = 0; i < terms.length; i++) {\n      var term = terms[i],\n          fields = Object.keys(otherMatchData.metadata[term]);\n\n      if (this.metadata[term] == undefined) {\n        this.metadata[term] = Object.create(null);\n      }\n\n      for (var j = 0; j < fields.length; j++) {\n        var field = fields[j],\n            keys = Object.keys(otherMatchData.metadata[term][field]);\n\n        if (this.metadata[term][field] == undefined) {\n          this.metadata[term][field] = Object.create(null);\n        }\n\n        for (var k = 0; k < keys.length; k++) {\n          var key = keys[k];\n\n          if (this.metadata[term][field][key] == undefined) {\n            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key];\n          } else {\n            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Add metadata for a term/field pair to this instance of match data.\n   *\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   */\n\n\n  lunr.MatchData.prototype.add = function (term, field, metadata) {\n    if (!(term in this.metadata)) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    if (!(field in this.metadata[term])) {\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    var metadataKeys = Object.keys(metadata);\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n\n      if (key in this.metadata[term][field]) {\n        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key]);\n      } else {\n        this.metadata[term][field][key] = metadata[key];\n      }\n    }\n  };\n  /**\n   * A lunr.Query provides a programmatic way of defining queries to be performed\n   * against a {@link lunr.Index}.\n   *\n   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n   * so the query object is pre-initialized with the right index fields.\n   *\n   * @constructor\n   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n   * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n   */\n\n\n  lunr.Query = function (allFields) {\n    this.clauses = [];\n    this.allFields = allFields;\n  };\n  /**\n   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n   *\n   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n   * concatenation.\n   *\n   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n   *\n   * @constant\n   * @default\n   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with trailing wildcard</caption>\n   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n   * @example <caption>query term with leading and trailing wildcard</caption>\n   * query.term('foo', {\n   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n   * })\n   */\n\n\n  lunr.Query.wildcard = new String(\"*\");\n  lunr.Query.wildcard.NONE = 0;\n  lunr.Query.wildcard.LEADING = 1;\n  lunr.Query.wildcard.TRAILING = 2;\n  /**\n   * Constants for indicating what kind of presence a term must have in matching documents.\n   *\n   * @constant\n   * @enum {number}\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with required presence</caption>\n   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n   */\n\n  lunr.Query.presence = {\n    /**\n     * Term's presence in a document is optional, this is the default value.\n     */\n    OPTIONAL: 1,\n\n    /**\n     * Term's presence in a document is required, documents that do not contain\n     * this term will not be returned.\n     */\n    REQUIRED: 2,\n\n    /**\n     * Term's presence in a document is prohibited, documents that do contain\n     * this term will not be returned.\n     */\n    PROHIBITED: 3\n  };\n  /**\n   * A single clause in a {@link lunr.Query} contains a term and details on how to\n   * match that term against a {@link lunr.Index}.\n   *\n   * @typedef {Object} lunr.Query~Clause\n   * @property {string[]} fields - The fields in an index this clause should be matched against.\n   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n   */\n\n  /**\n   * Adds a {@link lunr.Query~Clause} to this query.\n   *\n   * Unless the clause contains the fields to be matched all fields will be matched. In addition\n   * a default boost of 1 is applied to the clause.\n   *\n   * @param {lunr.Query~Clause} clause - The clause to add to this query.\n   * @see lunr.Query~Clause\n   * @returns {lunr.Query}\n   */\n\n  lunr.Query.prototype.clause = function (clause) {\n    if (!('fields' in clause)) {\n      clause.fields = this.allFields;\n    }\n\n    if (!('boost' in clause)) {\n      clause.boost = 1;\n    }\n\n    if (!('usePipeline' in clause)) {\n      clause.usePipeline = true;\n    }\n\n    if (!('wildcard' in clause)) {\n      clause.wildcard = lunr.Query.wildcard.NONE;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.LEADING && clause.term.charAt(0) != lunr.Query.wildcard) {\n      clause.term = \"*\" + clause.term;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.TRAILING && clause.term.slice(-1) != lunr.Query.wildcard) {\n      clause.term = \"\" + clause.term + \"*\";\n    }\n\n    if (!('presence' in clause)) {\n      clause.presence = lunr.Query.presence.OPTIONAL;\n    }\n\n    this.clauses.push(clause);\n    return this;\n  };\n  /**\n   * A negated query is one in which every clause has a presence of\n   * prohibited. These queries require some special processing to return\n   * the expected results.\n   *\n   * @returns boolean\n   */\n\n\n  lunr.Query.prototype.isNegated = function () {\n    for (var i = 0; i < this.clauses.length; i++) {\n      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n   * to the list of clauses that make up this query.\n   *\n   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n   * to a token or token-like string should be done before calling this method.\n   *\n   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n   * array, each term in the array will share the same options.\n   *\n   * @param {object|object[]} term - The term(s) to add to the query.\n   * @param {object} [options] - Any additional properties to add to the query clause.\n   * @returns {lunr.Query}\n   * @see lunr.Query#clause\n   * @see lunr.Query~Clause\n   * @example <caption>adding a single term to a query</caption>\n   * query.term(\"foo\")\n   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n   * query.term(\"foo\", {\n   *   fields: [\"title\"],\n   *   boost: 10,\n   *   wildcard: lunr.Query.wildcard.TRAILING\n   * })\n   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n   * query.term(lunr.tokenizer(\"foo bar\"))\n   */\n\n\n  lunr.Query.prototype.term = function (term, options) {\n    if (Array.isArray(term)) {\n      term.forEach(function (t) {\n        this.term(t, lunr.utils.clone(options));\n      }, this);\n      return this;\n    }\n\n    var clause = options || {};\n    clause.term = term.toString();\n    this.clause(clause);\n    return this;\n  };\n\n  lunr.QueryParseError = function (message, start, end) {\n    this.name = \"QueryParseError\";\n    this.message = message;\n    this.start = start;\n    this.end = end;\n  };\n\n  lunr.QueryParseError.prototype = new Error();\n\n  lunr.QueryLexer = function (str) {\n    this.lexemes = [];\n    this.str = str;\n    this.length = str.length;\n    this.pos = 0;\n    this.start = 0;\n    this.escapeCharPositions = [];\n  };\n\n  lunr.QueryLexer.prototype.run = function () {\n    var state = lunr.QueryLexer.lexText;\n\n    while (state) {\n      state = state(this);\n    }\n  };\n\n  lunr.QueryLexer.prototype.sliceString = function () {\n    var subSlices = [],\n        sliceStart = this.start,\n        sliceEnd = this.pos;\n\n    for (var i = 0; i < this.escapeCharPositions.length; i++) {\n      sliceEnd = this.escapeCharPositions[i];\n      subSlices.push(this.str.slice(sliceStart, sliceEnd));\n      sliceStart = sliceEnd + 1;\n    }\n\n    subSlices.push(this.str.slice(sliceStart, this.pos));\n    this.escapeCharPositions.length = 0;\n    return subSlices.join('');\n  };\n\n  lunr.QueryLexer.prototype.emit = function (type) {\n    this.lexemes.push({\n      type: type,\n      str: this.sliceString(),\n      start: this.start,\n      end: this.pos\n    });\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.escapeCharacter = function () {\n    this.escapeCharPositions.push(this.pos - 1);\n    this.pos += 1;\n  };\n\n  lunr.QueryLexer.prototype.next = function () {\n    if (this.pos >= this.length) {\n      return lunr.QueryLexer.EOS;\n    }\n\n    var char = this.str.charAt(this.pos);\n    this.pos += 1;\n    return char;\n  };\n\n  lunr.QueryLexer.prototype.width = function () {\n    return this.pos - this.start;\n  };\n\n  lunr.QueryLexer.prototype.ignore = function () {\n    if (this.start == this.pos) {\n      this.pos += 1;\n    }\n\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.backup = function () {\n    this.pos -= 1;\n  };\n\n  lunr.QueryLexer.prototype.acceptDigitRun = function () {\n    var char, charCode;\n\n    do {\n      char = this.next();\n      charCode = char.charCodeAt(0);\n    } while (charCode > 47 && charCode < 58);\n\n    if (char != lunr.QueryLexer.EOS) {\n      this.backup();\n    }\n  };\n\n  lunr.QueryLexer.prototype.more = function () {\n    return this.pos < this.length;\n  };\n\n  lunr.QueryLexer.EOS = 'EOS';\n  lunr.QueryLexer.FIELD = 'FIELD';\n  lunr.QueryLexer.TERM = 'TERM';\n  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE';\n  lunr.QueryLexer.BOOST = 'BOOST';\n  lunr.QueryLexer.PRESENCE = 'PRESENCE';\n\n  lunr.QueryLexer.lexField = function (lexer) {\n    lexer.backup();\n    lexer.emit(lunr.QueryLexer.FIELD);\n    lexer.ignore();\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexTerm = function (lexer) {\n    if (lexer.width() > 1) {\n      lexer.backup();\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n\n    lexer.ignore();\n\n    if (lexer.more()) {\n      return lunr.QueryLexer.lexText;\n    }\n  };\n\n  lunr.QueryLexer.lexEditDistance = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexBoost = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.BOOST);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexEOS = function (lexer) {\n    if (lexer.width() > 0) {\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n  }; // This matches the separator used when tokenising fields\n  // within a document. These should match otherwise it is\n  // not possible to search for some tokens within a document.\n  //\n  // It is possible for the user to change the separator on the\n  // tokenizer so it _might_ clash with any other of the special\n  // characters already used within the search string, e.g. :.\n  //\n  // This means that it is possible to change the separator in\n  // such a way that makes some words unsearchable using a search\n  // string.\n\n\n  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator;\n\n  lunr.QueryLexer.lexText = function (lexer) {\n    while (true) {\n      var char = lexer.next();\n\n      if (char == lunr.QueryLexer.EOS) {\n        return lunr.QueryLexer.lexEOS;\n      } // Escape character is '\\'\n\n\n      if (char.charCodeAt(0) == 92) {\n        lexer.escapeCharacter();\n        continue;\n      }\n\n      if (char == \":\") {\n        return lunr.QueryLexer.lexField;\n      }\n\n      if (char == \"~\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexEditDistance;\n      }\n\n      if (char == \"^\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexBoost;\n      } // \"+\" indicates term presence is required\n      // checking for length to ensure that only\n      // leading \"+\" are considered\n\n\n      if (char == \"+\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      } // \"-\" indicates term presence is prohibited\n      // checking for length to ensure that only\n      // leading \"-\" are considered\n\n\n      if (char == \"-\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      }\n\n      if (char.match(lunr.QueryLexer.termSeparator)) {\n        return lunr.QueryLexer.lexTerm;\n      }\n    }\n  };\n\n  lunr.QueryParser = function (str, query) {\n    this.lexer = new lunr.QueryLexer(str);\n    this.query = query;\n    this.currentClause = {};\n    this.lexemeIdx = 0;\n  };\n\n  lunr.QueryParser.prototype.parse = function () {\n    this.lexer.run();\n    this.lexemes = this.lexer.lexemes;\n    var state = lunr.QueryParser.parseClause;\n\n    while (state) {\n      state = state(this);\n    }\n\n    return this.query;\n  };\n\n  lunr.QueryParser.prototype.peekLexeme = function () {\n    return this.lexemes[this.lexemeIdx];\n  };\n\n  lunr.QueryParser.prototype.consumeLexeme = function () {\n    var lexeme = this.peekLexeme();\n    this.lexemeIdx += 1;\n    return lexeme;\n  };\n\n  lunr.QueryParser.prototype.nextClause = function () {\n    var completedClause = this.currentClause;\n    this.query.clause(completedClause);\n    this.currentClause = {};\n  };\n\n  lunr.QueryParser.parseClause = function (parser) {\n    var lexeme = parser.peekLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.type) {\n      case lunr.QueryLexer.PRESENCE:\n        return lunr.QueryParser.parsePresence;\n\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expected either a field or a term, found \" + lexeme.type;\n\n        if (lexeme.str.length >= 1) {\n          errorMessage += \" with value '\" + lexeme.str + \"'\";\n        }\n\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parsePresence = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.str) {\n      case \"-\":\n        parser.currentClause.presence = lunr.Query.presence.PROHIBITED;\n        break;\n\n      case \"+\":\n        parser.currentClause.presence = lunr.Query.presence.REQUIRED;\n        break;\n\n      default:\n        var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\";\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term or field, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseField = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n      var possibleFields = parser.query.allFields.map(function (f) {\n        return \"'\" + f + \"'\";\n      }).join(', '),\n          errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields;\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.fields = [lexeme.str];\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseTerm = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    parser.currentClause.term = lexeme.str.toLowerCase();\n\n    if (lexeme.str.indexOf(\"*\") != -1) {\n      parser.currentClause.usePipeline = false;\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseEditDistance = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var editDistance = parseInt(lexeme.str, 10);\n\n    if (isNaN(editDistance)) {\n      var errorMessage = \"edit distance must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.editDistance = editDistance;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseBoost = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var boost = parseInt(lexeme.str, 10);\n\n    if (isNaN(boost)) {\n      var errorMessage = \"boost must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.boost = boost;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr;\n  });\n})();","'use strict';\n\nvar _defineProperty = require(\"/Users/matthew.daly/Projects/gatsby-site-yet-again/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _slicedToArray = require(\"/Users/matthew.daly/Projects/gatsby-site-yet-again/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _toConsumableArray = require(\"/Users/matthew.daly/Projects/gatsby-site-yet-again/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar filterObject = require('filter-obj');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nvar encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            } // Translate null to an empty string so that it doesn't serialize as 'null'\n\n\n            value = value === null ? '' : value;\n\n            if (result.length === 0) {\n              return [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n            }\n\n            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n          };\n        };\n      }\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n        var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n        value = isEncodedArray ? decode(value, options) : value;\n        var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    case 'bracket-separator':\n      return function (key, value, accumulator) {\n        var isArray = /(\\[\\])$/.test(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!isArray) {\n          accumulator[key] = value ? decode(value, options) : value;\n          return;\n        }\n\n        var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        });\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = arrayValue;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], arrayValue);\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(query, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof query !== 'string') {\n    return ret;\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return ret;\n  }\n\n  var _iterator = _createForOfIteratorHelper(query.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n\n      if (param === '') {\n        continue;\n      }\n\n      var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, ret);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = ret[key];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        value[k] = parseValue(value[k], options);\n      }\n    } else {\n      ret[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (url, options) {\n  options = Object.assign({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(url, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url_ = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return Object.assign({\n    url: url_.split('?')[0] || '',\n    query: parse(extract(url), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n};\n\nexports.stringifyUrl = function (object, options) {\n  options = Object.assign(_defineProperty({\n    encode: true,\n    strict: true\n  }, encodeFragmentIdentifier, true), options);\n  var url = removeHash(object.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(object.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl, {\n    sort: false\n  });\n  var query = Object.assign(parsedQueryFromUrl, object.query);\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(object.url);\n\n  if (object.fragmentIdentifier) {\n    hash = \"#\".concat(options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier);\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n};\n\nexports.pick = function (input, filter, options) {\n  options = Object.assign(_defineProperty({\n    parseFragmentIdentifier: true\n  }, encodeFragmentIdentifier, false), options);\n\n  var _exports$parseUrl = exports.parseUrl(input, options),\n      url = _exports$parseUrl.url,\n      query = _exports$parseUrl.query,\n      fragmentIdentifier = _exports$parseUrl.fragmentIdentifier;\n\n  return exports.stringifyUrl({\n    url: url,\n    query: filterObject(query, filter),\n    fragmentIdentifier: fragmentIdentifier\n  }, options);\n};\n\nexports.exclude = function (input, filter, options) {\n  var exclusionFilter = Array.isArray(filter) ? function (key) {\n    return !filter.includes(key);\n  } : function (key, value) {\n    return !filter(key, value);\n  };\n  return exports.pick(input, exclusionFilter, options);\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","import React, { ChangeEvent, useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { Index } from \"lunr\"\n\ninterface Result {\n    id: string;\n    path: string;\n    title: string;\n}\n\ninterface Props {\n    value: string | string[];\n}\n\n\n\nconst SearchResults = ({ value }: Props): React.ReactElement => {\n  const data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tLunrIndex\n\t\t}\n\t`)\n  const [query, setQuery] = useState(value)\n  const { store } = data.LunrIndex\n  const index = Index.load(data.LunrIndex.index)\n  let results = []\n  try {\n    if (query) {\n      results = index.search(`${query}~1`)\n        .sort((a, b) => {\n          return b.score - a.score\n        }).map(({ ref }) => {\n          return {\n            path: ref,\n            ...store[ref],\n          }\n        })\n    }\n  } catch (error) {\n    console.log(error)\n  }\n  console.log(results)\n\n  const updateSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.value.length > 2) {\n      setQuery(e.currentTarget.value)\n    } else {\n      setQuery(null)\n    }\n  }\n\n  return (\n    <form action=\"/search\" method=\"get\" autoComplete=\"off\" target=\"_top\">\n      <div className=\"w-full\">\n        <input type=\"search\" id=\"search\" placeholder=\"Search blog posts\" name=\"s\" onChange={updateSearch} className=\"float-left w-3/4 p-4 text-xl text-gray-900 border-2 border-gray-100 md:float-none\" defaultValue={value} />\n        <button type=\"submit\" className=\"float-right w-1/4 px-2 py-4 mx-0 border-2 md:float-none\">Search</button>\n        <div className=\"w-full mt-2 divide-y divide-gray-800 dark:divide-gray-200\">\n          {results.map((result: Result) => (\n            <Link key={result.path} className=\"float-left w-full py-4 text-xl font-bold focus:outline-none focus:ring focus:border-blue-300\" to={result.path}>\n              <span className=\"block w-full px-2\">\n                {result.title}\n              </span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SearchResults\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport SearchResults from \"../components/SearchResults\"\nimport queryString from \"query-string\"\nimport { SiteData } from \"../Types\"\n\ninterface Props {\n  data: {\n    site: SiteData;\n  },\n  location: Location;\n}\n\nconst Search = ({ location, data }: Props): React.ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const search = queryString.parse(location.search)\n  const canonicalUrl = data.site.siteMetadata.siteUrl + location.pathname\n\n  return (\n    <Layout title={siteTitle} siteUrl={data.site.siteMetadata.siteUrl}>\n      <SEO\n        title={\"Home\"}\n        description={\"Home\"}\n        url={canonicalUrl}\n      />\n      <SearchResults value={search.s} />\n    </Layout>\n  )\n}\n\nexport default Search\n\nexport const siteDataQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n  }\n`\n"],"names":["module","exports","arr","len","length","i","arr2","Array","__esModule","isArray","arrayLikeToArray","obj","key","value","Object","defineProperty","enumerable","configurable","writable","iter","Symbol","iterator","from","_i","_s","_e","_arr","_n","_d","call","next","done","push","err","TypeError","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","o","minLen","n","prototype","toString","slice","constructor","name","test","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","right","concat","decode","input","tokens","match","encodedURI","replace","replaceMap","exec","result","entries","keys","customDecodeURIComponent","predicate","ret","isArr","val","indexOf","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","this","message","console","asString","clone","create","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","fieldRef","undefined","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","t","toLowerCase","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","k","runString","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","fp","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","_defineProperty","_slicedToArray","_toConsumableArray","_createForOfIteratorHelper","allowArrayLike","it","_arrayLikeToArray","_unsupportedIterableToArray","F","e","normalCompletion","didErr","step","_e2","return","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","assign","arrayFormat","arrayFormatSeparator","formatter","includes","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","_step","_iterator","param","_splitOnFirst","_splitOnFirst2","_key","_value","_Object$keys","_i2","_Object$keys2","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","_i3","_Object$keys3","filter","parseUrl","url","_splitOnFirst3","_splitOnFirst4","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","_exports$parseUrl","exclude","exclusionFilter","string","separatorIndex","data","useStaticQuery","useState","setQuery","store","LunrIndex","path","error","action","method","autoComplete","target","className","placeholder","onChange","currentTarget","defaultValue","Link","to","title","location","siteTitle","site","siteMetadata","canonicalUrl","siteUrl","pathname","Layout","description"],"sourceRoot":""}