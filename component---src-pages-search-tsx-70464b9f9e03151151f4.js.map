{"version":3,"file":"component---src-pages-search-tsx-70464b9f9e03151151f4.js","mappings":"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","sources":["webpack://matthew-dalys-blog/./node_modules/decode-uri-component/index.js","webpack://matthew-dalys-blog/./node_modules/filter-obj/index.js","webpack://matthew-dalys-blog/./node_modules/lunr/lunr.js","webpack://matthew-dalys-blog/./node_modules/query-string/index.js","webpack://matthew-dalys-blog/./node_modules/split-on-first/index.js","webpack://matthew-dalys-blog/./node_modules/strict-uri-encode/index.js","webpack://matthew-dalys-blog/./src/components/SearchResults.tsx","webpack://matthew-dalys-blog/./src/pages/search.tsx","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://matthew-dalys-blog/./node_modules/@babel/runtime/helpers/toConsumableArray.js"],"sourcesContent":["'use strict';\n\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n  try {\n    // Try to decode the entire string first\n    return decodeURIComponent(components.join(''));\n  } catch (err) {// Do nothing\n  }\n\n  if (components.length === 1) {\n    return components;\n  }\n\n  split = split || 1; // Split the array in 2 parts\n\n  var left = components.slice(0, split);\n  var right = components.slice(split);\n  return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n  try {\n    return decodeURIComponent(input);\n  } catch (err) {\n    var tokens = input.match(singleMatcher);\n\n    for (var i = 1; i < tokens.length; i++) {\n      input = decodeComponents(tokens, i).join('');\n      tokens = input.match(singleMatcher);\n    }\n\n    return input;\n  }\n}\n\nfunction customDecodeURIComponent(input) {\n  // Keep track of all the replacements and prefill the map with the `BOM`\n  var replaceMap = {\n    '%FE%FF': \"\\uFFFD\\uFFFD\",\n    '%FF%FE': \"\\uFFFD\\uFFFD\"\n  };\n  var match = multiMatcher.exec(input);\n\n  while (match) {\n    try {\n      // Decode as big chunks as possible\n      replaceMap[match[0]] = decodeURIComponent(match[0]);\n    } catch (err) {\n      var result = decode(match[0]);\n\n      if (result !== match[0]) {\n        replaceMap[match[0]] = result;\n      }\n    }\n\n    match = multiMatcher.exec(input);\n  } // Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\n\n  replaceMap['%C2'] = \"\\uFFFD\";\n  var entries = Object.keys(replaceMap);\n\n  for (var i = 0; i < entries.length; i++) {\n    // Replace all decoded components\n    var key = entries[i];\n    input = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n  }\n\n  return input;\n}\n\nmodule.exports = function (encodedURI) {\n  if (typeof encodedURI !== 'string') {\n    throw new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n  }\n\n  try {\n    encodedURI = encodedURI.replace(/\\+/g, ' '); // Try the built in decoder first\n\n    return decodeURIComponent(encodedURI);\n  } catch (err) {\n    // Fallback to a more advanced decoder\n    return customDecodeURIComponent(encodedURI);\n  }\n};","'use strict';\n\nmodule.exports = function (obj, predicate) {\n  var ret = {};\n  var keys = Object.keys(obj);\n  var isArr = Array.isArray(predicate);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var val = obj[key];\n\n    if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n      ret[key] = val;\n    }\n  }\n\n  return ret;\n};","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n;\n\n(function () {\n  /**\n   * A convenience function for configuring and constructing\n   * a new lunr Index.\n   *\n   * A lunr.Builder instance is created and the pipeline setup\n   * with a trimmer, stop word filter and stemmer.\n   *\n   * This builder object is yielded to the configuration function\n   * that is passed as a parameter, allowing the list of fields\n   * and other builder parameters to be customised.\n   *\n   * All documents _must_ be added within the passed config function.\n   *\n   * @example\n   * var idx = lunr(function () {\n   *   this.field('title')\n   *   this.field('body')\n   *   this.ref('id')\n   *\n   *   documents.forEach(function (doc) {\n   *     this.add(doc)\n   *   }, this)\n   * })\n   *\n   * @see {@link lunr.Builder}\n   * @see {@link lunr.Pipeline}\n   * @see {@link lunr.trimmer}\n   * @see {@link lunr.stopWordFilter}\n   * @see {@link lunr.stemmer}\n   * @namespace {function} lunr\n   */\n  var lunr = function lunr(config) {\n    var builder = new lunr.Builder();\n    builder.pipeline.add(lunr.trimmer, lunr.stopWordFilter, lunr.stemmer);\n    builder.searchPipeline.add(lunr.stemmer);\n    config.call(builder, builder);\n    return builder.build();\n  };\n\n  lunr.version = \"2.3.9\";\n  /*!\n   * lunr.utils\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A namespace containing utils for the rest of the lunr library\n   * @namespace lunr.utils\n   */\n\n  lunr.utils = {};\n  /**\n   * Print a warning message to the console.\n   *\n   * @param {String} message The message to be printed.\n   * @memberOf lunr.utils\n   * @function\n   */\n\n  lunr.utils.warn = function (global) {\n    /* eslint-disable no-console */\n    return function (message) {\n      if (global.console && console.warn) {\n        console.warn(message);\n      }\n    };\n    /* eslint-enable no-console */\n  }(this);\n  /**\n   * Convert an object to a string.\n   *\n   * In the case of `null` and `undefined` the function returns\n   * the empty string, in all other cases the result of calling\n   * `toString` on the passed object is returned.\n   *\n   * @param {Any} obj The object to convert to a string.\n   * @return {String} string representation of the passed object.\n   * @memberOf lunr.utils\n   */\n\n\n  lunr.utils.asString = function (obj) {\n    if (obj === void 0 || obj === null) {\n      return \"\";\n    } else {\n      return obj.toString();\n    }\n  };\n  /**\n   * Clones an object.\n   *\n   * Will create a copy of an existing object such that any mutations\n   * on the copy cannot affect the original.\n   *\n   * Only shallow objects are supported, passing a nested object to this\n   * function will cause a TypeError.\n   *\n   * Objects with primitives, and arrays of primitives are supported.\n   *\n   * @param {Object} obj The object to clone.\n   * @return {Object} a clone of the passed object.\n   * @throws {TypeError} when a nested object is passed.\n   * @memberOf Utils\n   */\n\n\n  lunr.utils.clone = function (obj) {\n    if (obj === null || obj === undefined) {\n      return obj;\n    }\n\n    var clone = Object.create(null),\n        keys = Object.keys(obj);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i],\n          val = obj[key];\n\n      if (Array.isArray(val)) {\n        clone[key] = val.slice();\n        continue;\n      }\n\n      if (typeof val === 'string' || typeof val === 'number' || typeof val === 'boolean') {\n        clone[key] = val;\n        continue;\n      }\n\n      throw new TypeError(\"clone is not deep and does not support nested objects\");\n    }\n\n    return clone;\n  };\n\n  lunr.FieldRef = function (docRef, fieldName, stringValue) {\n    this.docRef = docRef;\n    this.fieldName = fieldName;\n    this._stringValue = stringValue;\n  };\n\n  lunr.FieldRef.joiner = \"/\";\n\n  lunr.FieldRef.fromString = function (s) {\n    var n = s.indexOf(lunr.FieldRef.joiner);\n\n    if (n === -1) {\n      throw \"malformed field ref string\";\n    }\n\n    var fieldRef = s.slice(0, n),\n        docRef = s.slice(n + 1);\n    return new lunr.FieldRef(docRef, fieldRef, s);\n  };\n\n  lunr.FieldRef.prototype.toString = function () {\n    if (this._stringValue == undefined) {\n      this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef;\n    }\n\n    return this._stringValue;\n  };\n  /*!\n   * lunr.Set\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A lunr set.\n   *\n   * @constructor\n   */\n\n\n  lunr.Set = function (elements) {\n    this.elements = Object.create(null);\n\n    if (elements) {\n      this.length = elements.length;\n\n      for (var i = 0; i < this.length; i++) {\n        this.elements[elements[i]] = true;\n      }\n    } else {\n      this.length = 0;\n    }\n  };\n  /**\n   * A complete set that contains all elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n\n  lunr.Set.complete = {\n    intersect: function intersect(other) {\n      return other;\n    },\n    union: function union() {\n      return this;\n    },\n    contains: function contains() {\n      return true;\n    }\n  };\n  /**\n   * An empty set that contains no elements.\n   *\n   * @static\n   * @readonly\n   * @type {lunr.Set}\n   */\n\n  lunr.Set.empty = {\n    intersect: function intersect() {\n      return this;\n    },\n    union: function union(other) {\n      return other;\n    },\n    contains: function contains() {\n      return false;\n    }\n  };\n  /**\n   * Returns true if this set contains the specified object.\n   *\n   * @param {object} object - Object whose presence in this set is to be tested.\n   * @returns {boolean} - True if this set contains the specified object.\n   */\n\n  lunr.Set.prototype.contains = function (object) {\n    return !!this.elements[object];\n  };\n  /**\n   * Returns a new set containing only the elements that are present in both\n   * this set and the specified set.\n   *\n   * @param {lunr.Set} other - set to intersect with this set.\n   * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.intersect = function (other) {\n    var a,\n        b,\n        elements,\n        intersection = [];\n\n    if (other === lunr.Set.complete) {\n      return this;\n    }\n\n    if (other === lunr.Set.empty) {\n      return other;\n    }\n\n    if (this.length < other.length) {\n      a = this;\n      b = other;\n    } else {\n      a = other;\n      b = this;\n    }\n\n    elements = Object.keys(a.elements);\n\n    for (var i = 0; i < elements.length; i++) {\n      var element = elements[i];\n\n      if (element in b.elements) {\n        intersection.push(element);\n      }\n    }\n\n    return new lunr.Set(intersection);\n  };\n  /**\n   * Returns a new set combining the elements of this and the specified set.\n   *\n   * @param {lunr.Set} other - set to union with this set.\n   * @return {lunr.Set} a new set that is the union of this and the specified set.\n   */\n\n\n  lunr.Set.prototype.union = function (other) {\n    if (other === lunr.Set.complete) {\n      return lunr.Set.complete;\n    }\n\n    if (other === lunr.Set.empty) {\n      return this;\n    }\n\n    return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)));\n  };\n  /**\n   * A function to calculate the inverse document frequency for\n   * a posting. This is shared between the builder and the index\n   *\n   * @private\n   * @param {object} posting - The posting for a given term\n   * @param {number} documentCount - The total number of documents.\n   */\n\n\n  lunr.idf = function (posting, documentCount) {\n    var documentsWithTerm = 0;\n\n    for (var fieldName in posting) {\n      if (fieldName == '_index') continue; // Ignore the term index, its not a field\n\n      documentsWithTerm += Object.keys(posting[fieldName]).length;\n    }\n\n    var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5);\n    return Math.log(1 + Math.abs(x));\n  };\n  /**\n   * A token wraps a string representation of a token\n   * as it is passed through the text processing pipeline.\n   *\n   * @constructor\n   * @param {string} [str=''] - The string token being wrapped.\n   * @param {object} [metadata={}] - Metadata associated with this token.\n   */\n\n\n  lunr.Token = function (str, metadata) {\n    this.str = str || \"\";\n    this.metadata = metadata || {};\n  };\n  /**\n   * Returns the token string that is being wrapped by this object.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.Token.prototype.toString = function () {\n    return this.str;\n  };\n  /**\n   * A token update function is used when updating or optionally\n   * when cloning a token.\n   *\n   * @callback lunr.Token~updateFunction\n   * @param {string} str - The string representation of the token.\n   * @param {Object} metadata - All metadata associated with this token.\n   */\n\n  /**\n   * Applies the given function to the wrapped string token.\n   *\n   * @example\n   * token.update(function (str, metadata) {\n   *   return str.toUpperCase()\n   * })\n   *\n   * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.update = function (fn) {\n    this.str = fn(this.str, this.metadata);\n    return this;\n  };\n  /**\n   * Creates a clone of this token. Optionally a function can be\n   * applied to the cloned token.\n   *\n   * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n   * @returns {lunr.Token}\n   */\n\n\n  lunr.Token.prototype.clone = function (fn) {\n    fn = fn || function (s) {\n      return s;\n    };\n\n    return new lunr.Token(fn(this.str, this.metadata), this.metadata);\n  };\n  /*!\n   * lunr.tokenizer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A function for splitting a string into tokens ready to be inserted into\n   * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n   * the value of this property to change how strings are split into tokens.\n   *\n   * This tokenizer will convert its parameter to a string by calling `toString` and\n   * then will split this string on the character in `lunr.tokenizer.separator`.\n   * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n   *\n   * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n   * added as metadata to every token that is created from the object to be tokenized.\n   *\n   * @static\n   * @param {?(string|object|object[])} obj - The object to convert into tokens\n   * @param {?object} metadata - Optional metadata to associate with every token\n   * @returns {lunr.Token[]}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.tokenizer = function (obj, metadata) {\n    if (obj == null || obj == undefined) {\n      return [];\n    }\n\n    if (Array.isArray(obj)) {\n      return obj.map(function (t) {\n        return new lunr.Token(lunr.utils.asString(t).toLowerCase(), lunr.utils.clone(metadata));\n      });\n    }\n\n    var str = obj.toString().toLowerCase(),\n        len = str.length,\n        tokens = [];\n\n    for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n      var char = str.charAt(sliceEnd),\n          sliceLength = sliceEnd - sliceStart;\n\n      if (char.match(lunr.tokenizer.separator) || sliceEnd == len) {\n        if (sliceLength > 0) {\n          var tokenMetadata = lunr.utils.clone(metadata) || {};\n          tokenMetadata[\"position\"] = [sliceStart, sliceLength];\n          tokenMetadata[\"index\"] = tokens.length;\n          tokens.push(new lunr.Token(str.slice(sliceStart, sliceEnd), tokenMetadata));\n        }\n\n        sliceStart = sliceEnd + 1;\n      }\n    }\n\n    return tokens;\n  };\n  /**\n   * The separator used to split a string into tokens. Override this property to change the behaviour of\n   * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n   *\n   * @static\n   * @see lunr.tokenizer\n   */\n\n\n  lunr.tokenizer.separator = /[\\s\\-]+/;\n  /*!\n   * lunr.Pipeline\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Pipelines maintain an ordered list of functions to be applied to all\n   * tokens in documents entering the search index and queries being ran against\n   * the index.\n   *\n   * An instance of lunr.Index created with the lunr shortcut will contain a\n   * pipeline with a stop word filter and an English language stemmer. Extra\n   * functions can be added before or after either of these functions or these\n   * default functions can be removed.\n   *\n   * When run the pipeline will call each function in turn, passing a token, the\n   * index of that token in the original list of all tokens and finally a list of\n   * all the original tokens.\n   *\n   * The output of functions in the pipeline will be passed to the next function\n   * in the pipeline. To exclude a token from entering the index the function\n   * should return undefined, the rest of the pipeline will not be called with\n   * this token.\n   *\n   * For serialisation of pipelines to work, all functions used in an instance of\n   * a pipeline should be registered with lunr.Pipeline. Registered functions can\n   * then be loaded. If trying to load a serialised pipeline that uses functions\n   * that are not registered an error will be thrown.\n   *\n   * If not planning on serialising the pipeline then registering pipeline functions\n   * is not necessary.\n   *\n   * @constructor\n   */\n\n  lunr.Pipeline = function () {\n    this._stack = [];\n  };\n\n  lunr.Pipeline.registeredFunctions = Object.create(null);\n  /**\n   * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n   * string as well as all known metadata. A pipeline function can mutate the token string\n   * or mutate (or add) metadata for a given token.\n   *\n   * A pipeline function can indicate that the passed token should be discarded by returning\n   * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n   * functions and will not be added to the index.\n   *\n   * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n   * to any downstream pipeline functions and all will returned tokens will be added to the index.\n   *\n   * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n   *\n   * @interface lunr.PipelineFunction\n   * @param {lunr.Token} token - A token from the document being processed.\n   * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n   * @param {lunr.Token[]} tokens - All tokens for this document/field.\n   * @returns {(?lunr.Token|lunr.Token[])}\n   */\n\n  /**\n   * Register a function with the pipeline.\n   *\n   * Functions that are used in the pipeline should be registered if the pipeline\n   * needs to be serialised, or a serialised pipeline needs to be loaded.\n   *\n   * Registering a function does not add it to a pipeline, functions must still be\n   * added to instances of the pipeline for them to be used when running a pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @param {String} label - The label to register this function with\n   */\n\n  lunr.Pipeline.registerFunction = function (fn, label) {\n    if (label in this.registeredFunctions) {\n      lunr.utils.warn('Overwriting existing registered function: ' + label);\n    }\n\n    fn.label = label;\n    lunr.Pipeline.registeredFunctions[fn.label] = fn;\n  };\n  /**\n   * Warns if the function is not registered as a Pipeline function.\n   *\n   * @param {lunr.PipelineFunction} fn - The function to check for.\n   * @private\n   */\n\n\n  lunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n    var isRegistered = fn.label && fn.label in this.registeredFunctions;\n\n    if (!isRegistered) {\n      lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn);\n    }\n  };\n  /**\n   * Loads a previously serialised pipeline.\n   *\n   * All functions to be loaded must already be registered with lunr.Pipeline.\n   * If any function from the serialised data has not been registered then an\n   * error will be thrown.\n   *\n   * @param {Object} serialised - The serialised pipeline to load.\n   * @returns {lunr.Pipeline}\n   */\n\n\n  lunr.Pipeline.load = function (serialised) {\n    var pipeline = new lunr.Pipeline();\n    serialised.forEach(function (fnName) {\n      var fn = lunr.Pipeline.registeredFunctions[fnName];\n\n      if (fn) {\n        pipeline.add(fn);\n      } else {\n        throw new Error('Cannot load unregistered function: ' + fnName);\n      }\n    });\n    return pipeline;\n  };\n  /**\n   * Adds new functions to the end of the pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.add = function () {\n    var fns = Array.prototype.slice.call(arguments);\n    fns.forEach(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n\n      this._stack.push(fn);\n    }, this);\n  };\n  /**\n   * Adds a single function after a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.after = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    pos = pos + 1;\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Adds a single function before a function that already exists in the\n   * pipeline.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n   * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.before = function (existingFn, newFn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(newFn);\n\n    var pos = this._stack.indexOf(existingFn);\n\n    if (pos == -1) {\n      throw new Error('Cannot find existingFn');\n    }\n\n    this._stack.splice(pos, 0, newFn);\n  };\n  /**\n   * Removes a function from the pipeline.\n   *\n   * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n   */\n\n\n  lunr.Pipeline.prototype.remove = function (fn) {\n    var pos = this._stack.indexOf(fn);\n\n    if (pos == -1) {\n      return;\n    }\n\n    this._stack.splice(pos, 1);\n  };\n  /**\n   * Runs the current list of functions that make up the pipeline against the\n   * passed tokens.\n   *\n   * @param {Array} tokens The tokens to run through the pipeline.\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.run = function (tokens) {\n    var stackLength = this._stack.length;\n\n    for (var i = 0; i < stackLength; i++) {\n      var fn = this._stack[i];\n      var memo = [];\n\n      for (var j = 0; j < tokens.length; j++) {\n        var result = fn(tokens[j], j, tokens);\n        if (result === null || result === void 0 || result === '') continue;\n\n        if (Array.isArray(result)) {\n          for (var k = 0; k < result.length; k++) {\n            memo.push(result[k]);\n          }\n        } else {\n          memo.push(result);\n        }\n      }\n\n      tokens = memo;\n    }\n\n    return tokens;\n  };\n  /**\n   * Convenience method for passing a string through a pipeline and getting\n   * strings out. This method takes care of wrapping the passed string in a\n   * token and mapping the resulting tokens back to strings.\n   *\n   * @param {string} str - The string to pass through the pipeline.\n   * @param {?object} metadata - Optional metadata to associate with the token\n   * passed to the pipeline.\n   * @returns {string[]}\n   */\n\n\n  lunr.Pipeline.prototype.runString = function (str, metadata) {\n    var token = new lunr.Token(str, metadata);\n    return this.run([token]).map(function (t) {\n      return t.toString();\n    });\n  };\n  /**\n   * Resets the pipeline by removing any existing processors.\n   *\n   */\n\n\n  lunr.Pipeline.prototype.reset = function () {\n    this._stack = [];\n  };\n  /**\n   * Returns a representation of the pipeline ready for serialisation.\n   *\n   * Logs a warning if the function has not been registered.\n   *\n   * @returns {Array}\n   */\n\n\n  lunr.Pipeline.prototype.toJSON = function () {\n    return this._stack.map(function (fn) {\n      lunr.Pipeline.warnIfFunctionNotRegistered(fn);\n      return fn.label;\n    });\n  };\n  /*!\n   * lunr.Vector\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A vector is used to construct the vector space of documents and queries. These\n   * vectors support operations to determine the similarity between two documents or\n   * a document and a query.\n   *\n   * Normally no parameters are required for initializing a vector, but in the case of\n   * loading a previously dumped vector the raw elements can be provided to the constructor.\n   *\n   * For performance reasons vectors are implemented with a flat array, where an elements\n   * index is immediately followed by its value. E.g. [index, value, index, value]. This\n   * allows the underlying array to be as sparse as possible and still offer decent\n   * performance when being used for vector calculations.\n   *\n   * @constructor\n   * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n   */\n\n\n  lunr.Vector = function (elements) {\n    this._magnitude = 0;\n    this.elements = elements || [];\n  };\n  /**\n   * Calculates the position within the vector to insert a given index.\n   *\n   * This is used internally by insert and upsert. If there are duplicate indexes then\n   * the position is returned as if the value for that index were to be updated, but it\n   * is the callers responsibility to check whether there is a duplicate at that index\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.positionForIndex = function (index) {\n    // For an empty vector the tuple can be inserted at the beginning\n    if (this.elements.length == 0) {\n      return 0;\n    }\n\n    var start = 0,\n        end = this.elements.length / 2,\n        sliceLength = end - start,\n        pivotPoint = Math.floor(sliceLength / 2),\n        pivotIndex = this.elements[pivotPoint * 2];\n\n    while (sliceLength > 1) {\n      if (pivotIndex < index) {\n        start = pivotPoint;\n      }\n\n      if (pivotIndex > index) {\n        end = pivotPoint;\n      }\n\n      if (pivotIndex == index) {\n        break;\n      }\n\n      sliceLength = end - start;\n      pivotPoint = start + Math.floor(sliceLength / 2);\n      pivotIndex = this.elements[pivotPoint * 2];\n    }\n\n    if (pivotIndex == index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex > index) {\n      return pivotPoint * 2;\n    }\n\n    if (pivotIndex < index) {\n      return (pivotPoint + 1) * 2;\n    }\n  };\n  /**\n   * Inserts an element at an index within the vector.\n   *\n   * Does not allow duplicates, will throw an error if there is already an entry\n   * for this index.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   */\n\n\n  lunr.Vector.prototype.insert = function (insertIdx, val) {\n    this.upsert(insertIdx, val, function () {\n      throw \"duplicate index\";\n    });\n  };\n  /**\n   * Inserts or updates an existing index within the vector.\n   *\n   * @param {Number} insertIdx - The index at which the element should be inserted.\n   * @param {Number} val - The value to be inserted into the vector.\n   * @param {function} fn - A function that is called for updates, the existing value and the\n   * requested value are passed as arguments\n   */\n\n\n  lunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n    this._magnitude = 0;\n    var position = this.positionForIndex(insertIdx);\n\n    if (this.elements[position] == insertIdx) {\n      this.elements[position + 1] = fn(this.elements[position + 1], val);\n    } else {\n      this.elements.splice(position, 0, insertIdx, val);\n    }\n  };\n  /**\n   * Calculates the magnitude of this vector.\n   *\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.magnitude = function () {\n    if (this._magnitude) return this._magnitude;\n    var sumOfSquares = 0,\n        elementsLength = this.elements.length;\n\n    for (var i = 1; i < elementsLength; i += 2) {\n      var val = this.elements[i];\n      sumOfSquares += val * val;\n    }\n\n    return this._magnitude = Math.sqrt(sumOfSquares);\n  };\n  /**\n   * Calculates the dot product of this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.dot = function (otherVector) {\n    var dotProduct = 0,\n        a = this.elements,\n        b = otherVector.elements,\n        aLen = a.length,\n        bLen = b.length,\n        aVal = 0,\n        bVal = 0,\n        i = 0,\n        j = 0;\n\n    while (i < aLen && j < bLen) {\n      aVal = a[i], bVal = b[j];\n\n      if (aVal < bVal) {\n        i += 2;\n      } else if (aVal > bVal) {\n        j += 2;\n      } else if (aVal == bVal) {\n        dotProduct += a[i + 1] * b[j + 1];\n        i += 2;\n        j += 2;\n      }\n    }\n\n    return dotProduct;\n  };\n  /**\n   * Calculates the similarity between this vector and another vector.\n   *\n   * @param {lunr.Vector} otherVector - The other vector to calculate the\n   * similarity with.\n   * @returns {Number}\n   */\n\n\n  lunr.Vector.prototype.similarity = function (otherVector) {\n    return this.dot(otherVector) / this.magnitude() || 0;\n  };\n  /**\n   * Converts the vector to an array of the elements within the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toArray = function () {\n    var output = new Array(this.elements.length / 2);\n\n    for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n      output[j] = this.elements[i];\n    }\n\n    return output;\n  };\n  /**\n   * A JSON serializable representation of the vector.\n   *\n   * @returns {Number[]}\n   */\n\n\n  lunr.Vector.prototype.toJSON = function () {\n    return this.elements;\n  };\n  /* eslint-disable */\n\n  /*!\n   * lunr.stemmer\n   * Copyright (C) 2020 Oliver Nightingale\n   * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n   */\n\n  /**\n   * lunr.stemmer is an english language stemmer, this is a JavaScript\n   * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token - The string to stem\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   * @function\n   */\n\n\n  lunr.stemmer = function () {\n    var step2list = {\n      \"ational\": \"ate\",\n      \"tional\": \"tion\",\n      \"enci\": \"ence\",\n      \"anci\": \"ance\",\n      \"izer\": \"ize\",\n      \"bli\": \"ble\",\n      \"alli\": \"al\",\n      \"entli\": \"ent\",\n      \"eli\": \"e\",\n      \"ousli\": \"ous\",\n      \"ization\": \"ize\",\n      \"ation\": \"ate\",\n      \"ator\": \"ate\",\n      \"alism\": \"al\",\n      \"iveness\": \"ive\",\n      \"fulness\": \"ful\",\n      \"ousness\": \"ous\",\n      \"aliti\": \"al\",\n      \"iviti\": \"ive\",\n      \"biliti\": \"ble\",\n      \"logi\": \"log\"\n    },\n        step3list = {\n      \"icate\": \"ic\",\n      \"ative\": \"\",\n      \"alize\": \"al\",\n      \"iciti\": \"ic\",\n      \"ical\": \"ic\",\n      \"ful\": \"\",\n      \"ness\": \"\"\n    },\n        c = \"[^aeiou]\",\n        // consonant\n    v = \"[aeiouy]\",\n        // vowel\n    C = c + \"[^aeiouy]*\",\n        // consonant sequence\n    V = v + \"[aeiou]*\",\n        // vowel sequence\n    mgr0 = \"^(\" + C + \")?\" + V + C,\n        // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",\n        // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,\n        // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v; // vowel in stem\n\n    var re_mgr0 = new RegExp(mgr0);\n    var re_mgr1 = new RegExp(mgr1);\n    var re_meq1 = new RegExp(meq1);\n    var re_s_v = new RegExp(s_v);\n    var re_1a = /^(.+?)(ss|i)es$/;\n    var re2_1a = /^(.+?)([^s])s$/;\n    var re_1b = /^(.+?)eed$/;\n    var re2_1b = /^(.+?)(ed|ing)$/;\n    var re_1b_2 = /.$/;\n    var re2_1b_2 = /(at|bl|iz)$/;\n    var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n    var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n    var re_1c = /^(.+?[^aeiou])y$/;\n    var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n    var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n    var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n    var re2_4 = /^(.+?)(s|t)(ion)$/;\n    var re_5 = /^(.+?)e$/;\n    var re_5_1 = /ll$/;\n    var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n    var porterStemmer = function porterStemmer(w) {\n      var stem, suffix, firstch, re, re2, re3, re4;\n\n      if (w.length < 3) {\n        return w;\n      }\n\n      firstch = w.substr(0, 1);\n\n      if (firstch == \"y\") {\n        w = firstch.toUpperCase() + w.substr(1);\n      } // Step 1a\n\n\n      re = re_1a;\n      re2 = re2_1a;\n\n      if (re.test(w)) {\n        w = w.replace(re, \"$1$2\");\n      } else if (re2.test(w)) {\n        w = w.replace(re2, \"$1$2\");\n      } // Step 1b\n\n\n      re = re_1b;\n      re2 = re2_1b;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        re = re_mgr0;\n\n        if (re.test(fp[1])) {\n          re = re_1b_2;\n          w = w.replace(re, \"\");\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1];\n        re2 = re_s_v;\n\n        if (re2.test(stem)) {\n          w = stem;\n          re2 = re2_1b_2;\n          re3 = re3_1b_2;\n          re4 = re4_1b_2;\n\n          if (re2.test(w)) {\n            w = w + \"e\";\n          } else if (re3.test(w)) {\n            re = re_1b_2;\n            w = w.replace(re, \"\");\n          } else if (re4.test(w)) {\n            w = w + \"e\";\n          }\n        }\n      } // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n\n\n      re = re_1c;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        w = stem + \"i\";\n      } // Step 2\n\n\n      re = re_2;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step2list[suffix];\n        }\n      } // Step 3\n\n\n      re = re_3;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        suffix = fp[2];\n        re = re_mgr0;\n\n        if (re.test(stem)) {\n          w = stem + step3list[suffix];\n        }\n      } // Step 4\n\n\n      re = re_4;\n      re2 = re2_4;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n\n        if (re.test(stem)) {\n          w = stem;\n        }\n      } else if (re2.test(w)) {\n        var fp = re2.exec(w);\n        stem = fp[1] + fp[2];\n        re2 = re_mgr1;\n\n        if (re2.test(stem)) {\n          w = stem;\n        }\n      } // Step 5\n\n\n      re = re_5;\n\n      if (re.test(w)) {\n        var fp = re.exec(w);\n        stem = fp[1];\n        re = re_mgr1;\n        re2 = re_meq1;\n        re3 = re3_5;\n\n        if (re.test(stem) || re2.test(stem) && !re3.test(stem)) {\n          w = stem;\n        }\n      }\n\n      re = re_5_1;\n      re2 = re_mgr1;\n\n      if (re.test(w) && re2.test(w)) {\n        re = re_1b_2;\n        w = w.replace(re, \"\");\n      } // and turn initial Y back to y\n\n\n      if (firstch == \"y\") {\n        w = firstch.toLowerCase() + w.substr(1);\n      }\n\n      return w;\n    };\n\n    return function (token) {\n      return token.update(porterStemmer);\n    };\n  }();\n\n  lunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer');\n  /*!\n   * lunr.stopWordFilter\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n   * list of stop words.\n   *\n   * The built in lunr.stopWordFilter is built using this generator and can be used\n   * to generate custom stopWordFilters for applications or non English languages.\n   *\n   * @function\n   * @param {Array} token The token to pass through the filter\n   * @returns {lunr.PipelineFunction}\n   * @see lunr.Pipeline\n   * @see lunr.stopWordFilter\n   */\n\n  lunr.generateStopWordFilter = function (stopWords) {\n    var words = stopWords.reduce(function (memo, stopWord) {\n      memo[stopWord] = stopWord;\n      return memo;\n    }, {});\n    return function (token) {\n      if (token && words[token.toString()] !== token.toString()) return token;\n    };\n  };\n  /**\n   * lunr.stopWordFilter is an English language stop word list filter, any words\n   * contained in the list will not be passed through the filter.\n   *\n   * This is intended to be used in the Pipeline. If the token does not pass the\n   * filter then undefined will be returned.\n   *\n   * @function\n   * @implements {lunr.PipelineFunction}\n   * @params {lunr.Token} token - A token to check for being a stop word.\n   * @returns {lunr.Token}\n   * @see {@link lunr.Pipeline}\n   */\n\n\n  lunr.stopWordFilter = lunr.generateStopWordFilter(['a', 'able', 'about', 'across', 'after', 'all', 'almost', 'also', 'am', 'among', 'an', 'and', 'any', 'are', 'as', 'at', 'be', 'because', 'been', 'but', 'by', 'can', 'cannot', 'could', 'dear', 'did', 'do', 'does', 'either', 'else', 'ever', 'every', 'for', 'from', 'get', 'got', 'had', 'has', 'have', 'he', 'her', 'hers', 'him', 'his', 'how', 'however', 'i', 'if', 'in', 'into', 'is', 'it', 'its', 'just', 'least', 'let', 'like', 'likely', 'may', 'me', 'might', 'most', 'must', 'my', 'neither', 'no', 'nor', 'not', 'of', 'off', 'often', 'on', 'only', 'or', 'other', 'our', 'own', 'rather', 'said', 'say', 'says', 'she', 'should', 'since', 'so', 'some', 'than', 'that', 'the', 'their', 'them', 'then', 'there', 'these', 'they', 'this', 'tis', 'to', 'too', 'twas', 'us', 'wants', 'was', 'we', 'were', 'what', 'when', 'where', 'which', 'while', 'who', 'whom', 'why', 'will', 'with', 'would', 'yet', 'you', 'your']);\n  lunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter');\n  /*!\n   * lunr.trimmer\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.trimmer is a pipeline function for trimming non word\n   * characters from the beginning and end of tokens before they\n   * enter the index.\n   *\n   * This implementation may not work correctly for non latin\n   * characters and should either be removed or adapted for use\n   * with languages with non-latin characters.\n   *\n   * @static\n   * @implements {lunr.PipelineFunction}\n   * @param {lunr.Token} token The token to pass through the filter\n   * @returns {lunr.Token}\n   * @see lunr.Pipeline\n   */\n\n  lunr.trimmer = function (token) {\n    return token.update(function (s) {\n      return s.replace(/^\\W+/, '').replace(/\\W+$/, '');\n    });\n  };\n\n  lunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer');\n  /*!\n   * lunr.TokenSet\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * A token set is used to store the unique list of all tokens\n   * within an index. Token sets are also used to represent an\n   * incoming query to the index, this query token set and index\n   * token set are then intersected to find which tokens to look\n   * up in the inverted index.\n   *\n   * A token set can hold multiple tokens, as in the case of the\n   * index token set, or it can hold a single token as in the\n   * case of a simple query token set.\n   *\n   * Additionally token sets are used to perform wildcard matching.\n   * Leading, contained and trailing wildcards are supported, and\n   * from this edit distance matching can also be provided.\n   *\n   * Token sets are implemented as a minimal finite state automata,\n   * where both common prefixes and suffixes are shared between tokens.\n   * This helps to reduce the space used for storing the token set.\n   *\n   * @constructor\n   */\n\n  lunr.TokenSet = function () {\n    this.final = false;\n    this.edges = {};\n    this.id = lunr.TokenSet._nextId;\n    lunr.TokenSet._nextId += 1;\n  };\n  /**\n   * Keeps track of the next, auto increment, identifier to assign\n   * to a new tokenSet.\n   *\n   * TokenSets require a unique identifier to be correctly minimised.\n   *\n   * @private\n   */\n\n\n  lunr.TokenSet._nextId = 1;\n  /**\n   * Creates a TokenSet instance from the given sorted array of words.\n   *\n   * @param {String[]} arr - A sorted array of strings to create the set from.\n   * @returns {lunr.TokenSet}\n   * @throws Will throw an error if the input array is not sorted.\n   */\n\n  lunr.TokenSet.fromArray = function (arr) {\n    var builder = new lunr.TokenSet.Builder();\n\n    for (var i = 0, len = arr.length; i < len; i++) {\n      builder.insert(arr[i]);\n    }\n\n    builder.finish();\n    return builder.root;\n  };\n  /**\n   * Creates a token set from a query clause.\n   *\n   * @private\n   * @param {Object} clause - A single clause from lunr.Query.\n   * @param {string} clause.term - The query clause term.\n   * @param {number} [clause.editDistance] - The optional edit distance for the term.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromClause = function (clause) {\n    if ('editDistance' in clause) {\n      return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance);\n    } else {\n      return lunr.TokenSet.fromString(clause.term);\n    }\n  };\n  /**\n   * Creates a token set representing a single string with a specified\n   * edit distance.\n   *\n   * Insertions, deletions, substitutions and transpositions are each\n   * treated as an edit distance of 1.\n   *\n   * Increasing the allowed edit distance will have a dramatic impact\n   * on the performance of both creating and intersecting these TokenSets.\n   * It is advised to keep the edit distance less than 3.\n   *\n   * @param {string} str - The string to create the token set from.\n   * @param {number} editDistance - The allowed edit distance to match.\n   * @returns {lunr.Vector}\n   */\n\n\n  lunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n    var root = new lunr.TokenSet();\n    var stack = [{\n      node: root,\n      editsRemaining: editDistance,\n      str: str\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(); // no edit\n\n      if (frame.str.length > 0) {\n        var char = frame.str.charAt(0),\n            noEditNode;\n\n        if (char in frame.node.edges) {\n          noEditNode = frame.node.edges[char];\n        } else {\n          noEditNode = new lunr.TokenSet();\n          frame.node.edges[char] = noEditNode;\n        }\n\n        if (frame.str.length == 1) {\n          noEditNode.final = true;\n        }\n\n        stack.push({\n          node: noEditNode,\n          editsRemaining: frame.editsRemaining,\n          str: frame.str.slice(1)\n        });\n      }\n\n      if (frame.editsRemaining == 0) {\n        continue;\n      } // insertion\n\n\n      if (\"*\" in frame.node.edges) {\n        var insertionNode = frame.node.edges[\"*\"];\n      } else {\n        var insertionNode = new lunr.TokenSet();\n        frame.node.edges[\"*\"] = insertionNode;\n      }\n\n      if (frame.str.length == 0) {\n        insertionNode.final = true;\n      }\n\n      stack.push({\n        node: insertionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str\n      }); // deletion\n      // can only do a deletion if we have enough edits remaining\n      // and if there are characters left to delete in the string\n\n      if (frame.str.length > 1) {\n        stack.push({\n          node: frame.node,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // deletion\n      // just removing the last character from the str\n\n\n      if (frame.str.length == 1) {\n        frame.node.final = true;\n      } // substitution\n      // can only do a substitution if we have enough edits remaining\n      // and if there are characters left to substitute\n\n\n      if (frame.str.length >= 1) {\n        if (\"*\" in frame.node.edges) {\n          var substitutionNode = frame.node.edges[\"*\"];\n        } else {\n          var substitutionNode = new lunr.TokenSet();\n          frame.node.edges[\"*\"] = substitutionNode;\n        }\n\n        if (frame.str.length == 1) {\n          substitutionNode.final = true;\n        }\n\n        stack.push({\n          node: substitutionNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: frame.str.slice(1)\n        });\n      } // transposition\n      // can only do a transposition if there are edits remaining\n      // and there are enough characters to transpose\n\n\n      if (frame.str.length > 1) {\n        var charA = frame.str.charAt(0),\n            charB = frame.str.charAt(1),\n            transposeNode;\n\n        if (charB in frame.node.edges) {\n          transposeNode = frame.node.edges[charB];\n        } else {\n          transposeNode = new lunr.TokenSet();\n          frame.node.edges[charB] = transposeNode;\n        }\n\n        if (frame.str.length == 1) {\n          transposeNode.final = true;\n        }\n\n        stack.push({\n          node: transposeNode,\n          editsRemaining: frame.editsRemaining - 1,\n          str: charA + frame.str.slice(2)\n        });\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Creates a TokenSet from a string.\n   *\n   * The string may contain one or more wildcard characters (*)\n   * that will allow wildcard matching when intersecting with\n   * another TokenSet.\n   *\n   * @param {string} str - The string to create a TokenSet from.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.fromString = function (str) {\n    var node = new lunr.TokenSet(),\n        root = node;\n    /*\n     * Iterates through all characters within the passed string\n     * appending a node for each character.\n     *\n     * When a wildcard character is found then a self\n     * referencing edge is introduced to continually match\n     * any number of any characters.\n     */\n\n    for (var i = 0, len = str.length; i < len; i++) {\n      var char = str[i],\n          final = i == len - 1;\n\n      if (char == \"*\") {\n        node.edges[char] = node;\n        node.final = final;\n      } else {\n        var next = new lunr.TokenSet();\n        next.final = final;\n        node.edges[char] = next;\n        node = next;\n      }\n    }\n\n    return root;\n  };\n  /**\n   * Converts this TokenSet into an array of strings\n   * contained within the TokenSet.\n   *\n   * This is not intended to be used on a TokenSet that\n   * contains wildcards, in these cases the results are\n   * undefined and are likely to cause an infinite loop.\n   *\n   * @returns {string[]}\n   */\n\n\n  lunr.TokenSet.prototype.toArray = function () {\n    var words = [];\n    var stack = [{\n      prefix: \"\",\n      node: this\n    }];\n\n    while (stack.length) {\n      var frame = stack.pop(),\n          edges = Object.keys(frame.node.edges),\n          len = edges.length;\n\n      if (frame.node.final) {\n        /* In Safari, at this point the prefix is sometimes corrupted, see:\n         * https://github.com/olivernn/lunr.js/issues/279 Calling any\n         * String.prototype method forces Safari to \"cast\" this string to what\n         * it's supposed to be, fixing the bug. */\n        frame.prefix.charAt(0);\n        words.push(frame.prefix);\n      }\n\n      for (var i = 0; i < len; i++) {\n        var edge = edges[i];\n        stack.push({\n          prefix: frame.prefix.concat(edge),\n          node: frame.node.edges[edge]\n        });\n      }\n    }\n\n    return words;\n  };\n  /**\n   * Generates a string representation of a TokenSet.\n   *\n   * This is intended to allow TokenSets to be used as keys\n   * in objects, largely to aid the construction and minimisation\n   * of a TokenSet. As such it is not designed to be a human\n   * friendly representation of the TokenSet.\n   *\n   * @returns {string}\n   */\n\n\n  lunr.TokenSet.prototype.toString = function () {\n    // NOTE: Using Object.keys here as this.edges is very likely\n    // to enter 'hash-mode' with many keys being added\n    //\n    // avoiding a for-in loop here as it leads to the function\n    // being de-optimised (at least in V8). From some simple\n    // benchmarks the performance is comparable, but allowing\n    // V8 to optimize may mean easy performance wins in the future.\n    if (this._str) {\n      return this._str;\n    }\n\n    var str = this.final ? '1' : '0',\n        labels = Object.keys(this.edges).sort(),\n        len = labels.length;\n\n    for (var i = 0; i < len; i++) {\n      var label = labels[i],\n          node = this.edges[label];\n      str = str + label + node.id;\n    }\n\n    return str;\n  };\n  /**\n   * Returns a new TokenSet that is the intersection of\n   * this TokenSet and the passed TokenSet.\n   *\n   * This intersection will take into account any wildcards\n   * contained within the TokenSet.\n   *\n   * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n   * @returns {lunr.TokenSet}\n   */\n\n\n  lunr.TokenSet.prototype.intersect = function (b) {\n    var output = new lunr.TokenSet(),\n        frame = undefined;\n    var stack = [{\n      qNode: b,\n      output: output,\n      node: this\n    }];\n\n    while (stack.length) {\n      frame = stack.pop(); // NOTE: As with the #toString method, we are using\n      // Object.keys and a for loop instead of a for-in loop\n      // as both of these objects enter 'hash' mode, causing\n      // the function to be de-optimised in V8\n\n      var qEdges = Object.keys(frame.qNode.edges),\n          qLen = qEdges.length,\n          nEdges = Object.keys(frame.node.edges),\n          nLen = nEdges.length;\n\n      for (var q = 0; q < qLen; q++) {\n        var qEdge = qEdges[q];\n\n        for (var n = 0; n < nLen; n++) {\n          var nEdge = nEdges[n];\n\n          if (nEdge == qEdge || qEdge == '*') {\n            var node = frame.node.edges[nEdge],\n                qNode = frame.qNode.edges[qEdge],\n                final = node.final && qNode.final,\n                next = undefined;\n\n            if (nEdge in frame.output.edges) {\n              // an edge already exists for this character\n              // no need to create a new node, just set the finality\n              // bit unless this node is already final\n              next = frame.output.edges[nEdge];\n              next.final = next.final || final;\n            } else {\n              // no edge exists yet, must create one\n              // set the finality bit and insert it\n              // into the output\n              next = new lunr.TokenSet();\n              next.final = final;\n              frame.output.edges[nEdge] = next;\n            }\n\n            stack.push({\n              qNode: qNode,\n              output: next,\n              node: node\n            });\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n\n  lunr.TokenSet.Builder = function () {\n    this.previousWord = \"\";\n    this.root = new lunr.TokenSet();\n    this.uncheckedNodes = [];\n    this.minimizedNodes = {};\n  };\n\n  lunr.TokenSet.Builder.prototype.insert = function (word) {\n    var node,\n        commonPrefix = 0;\n\n    if (word < this.previousWord) {\n      throw new Error(\"Out of order word insertion\");\n    }\n\n    for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n      if (word[i] != this.previousWord[i]) break;\n      commonPrefix++;\n    }\n\n    this.minimize(commonPrefix);\n\n    if (this.uncheckedNodes.length == 0) {\n      node = this.root;\n    } else {\n      node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child;\n    }\n\n    for (var i = commonPrefix; i < word.length; i++) {\n      var nextNode = new lunr.TokenSet(),\n          char = word[i];\n      node.edges[char] = nextNode;\n      this.uncheckedNodes.push({\n        parent: node,\n        char: char,\n        child: nextNode\n      });\n      node = nextNode;\n    }\n\n    node.final = true;\n    this.previousWord = word;\n  };\n\n  lunr.TokenSet.Builder.prototype.finish = function () {\n    this.minimize(0);\n  };\n\n  lunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n    for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n      var node = this.uncheckedNodes[i],\n          childKey = node.child.toString();\n\n      if (childKey in this.minimizedNodes) {\n        node.parent.edges[node.char] = this.minimizedNodes[childKey];\n      } else {\n        // Cache the key for this node since\n        // we know it can't change anymore\n        node.child._str = childKey;\n        this.minimizedNodes[childKey] = node.child;\n      }\n\n      this.uncheckedNodes.pop();\n    }\n  };\n  /*!\n   * lunr.Index\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * An index contains the built index of all documents and provides a query interface\n   * to the index.\n   *\n   * Usually instances of lunr.Index will not be created using this constructor, instead\n   * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n   * used to load previously built and serialized indexes.\n   *\n   * @constructor\n   * @param {Object} attrs - The attributes of the built search index.\n   * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n   * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n   * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n   * @param {string[]} attrs.fields - The names of indexed document fields.\n   * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n   */\n\n\n  lunr.Index = function (attrs) {\n    this.invertedIndex = attrs.invertedIndex;\n    this.fieldVectors = attrs.fieldVectors;\n    this.tokenSet = attrs.tokenSet;\n    this.fields = attrs.fields;\n    this.pipeline = attrs.pipeline;\n  };\n  /**\n   * A result contains details of a document matching a search query.\n   * @typedef {Object} lunr.Index~Result\n   * @property {string} ref - The reference of the document this result represents.\n   * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n   * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n   */\n\n  /**\n   * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n   * query language which itself is parsed into an instance of lunr.Query.\n   *\n   * For programmatically building queries it is advised to directly use lunr.Query, the query language\n   * is best used for human entered text rather than program generated text.\n   *\n   * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n   * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n   * or 'world', though those that contain both will rank higher in the results.\n   *\n   * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n   * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n   * wildcards will increase the number of documents that will be found but can also have a negative\n   * impact on query performance, especially with wildcards at the beginning of a term.\n   *\n   * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n   * hello in the title field will match this query. Using a field not present in the index will lead\n   * to an error being thrown.\n   *\n   * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n   * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n   * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n   * Avoid large values for edit distance to improve query performance.\n   *\n   * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n   * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n   * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n   * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n   * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n   *\n   * To escape special characters the backslash character '\\' can be used, this allows searches to include\n   * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n   * of attempting to apply a boost of 2 to the search term \"foo\".\n   *\n   * @typedef {string} lunr.Index~QueryString\n   * @example <caption>Simple single term query</caption>\n   * hello\n   * @example <caption>Multiple term query</caption>\n   * hello world\n   * @example <caption>term scoped to a field</caption>\n   * title:hello\n   * @example <caption>term with a boost of 10</caption>\n   * hello^10\n   * @example <caption>term with an edit distance of 2</caption>\n   * hello~2\n   * @example <caption>terms with presence modifiers</caption>\n   * -foo +bar baz\n   */\n\n  /**\n   * Performs a search against the index using lunr query syntax.\n   *\n   * Results will be returned sorted by their score, the most relevant results\n   * will be returned first.  For details on how the score is calculated, please see\n   * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n   *\n   * For more programmatic querying use lunr.Index#query.\n   *\n   * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n   * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.search = function (queryString) {\n    return this.query(function (query) {\n      var parser = new lunr.QueryParser(queryString, query);\n      parser.parse();\n    });\n  };\n  /**\n   * A query builder callback provides a query object to be used to express\n   * the query to perform on the index.\n   *\n   * @callback lunr.Index~queryBuilder\n   * @param {lunr.Query} query - The query object to build up.\n   * @this lunr.Query\n   */\n\n  /**\n   * Performs a query against the index using the yielded lunr.Query object.\n   *\n   * If performing programmatic queries against the index, this method is preferred\n   * over lunr.Index#search so as to avoid the additional query parsing overhead.\n   *\n   * A query object is yielded to the supplied function which should be used to\n   * express the query to be run against the index.\n   *\n   * Note that although this function takes a callback parameter it is _not_ an\n   * asynchronous operation, the callback is just yielded a query object to be\n   * customized.\n   *\n   * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n   * @returns {lunr.Index~Result[]}\n   */\n\n\n  lunr.Index.prototype.query = function (fn) {\n    // for each query clause\n    // * process terms\n    // * expand terms from token set\n    // * find matching documents and metadata\n    // * get document vectors\n    // * score documents\n    var query = new lunr.Query(this.fields),\n        matchingFields = Object.create(null),\n        queryVectors = Object.create(null),\n        termFieldCache = Object.create(null),\n        requiredMatches = Object.create(null),\n        prohibitedMatches = Object.create(null);\n    /*\n     * To support field level boosts a query vector is created per\n     * field. An empty vector is eagerly created to support negated\n     * queries.\n     */\n\n    for (var i = 0; i < this.fields.length; i++) {\n      queryVectors[this.fields[i]] = new lunr.Vector();\n    }\n\n    fn.call(query, query);\n\n    for (var i = 0; i < query.clauses.length; i++) {\n      /*\n       * Unless the pipeline has been disabled for this term, which is\n       * the case for terms with wildcards, we need to pass the clause\n       * term through the search pipeline. A pipeline returns an array\n       * of processed terms. Pipeline functions may expand the passed\n       * term, which means we may end up performing multiple index lookups\n       * for a single query term.\n       */\n      var clause = query.clauses[i],\n          terms = null,\n          clauseMatches = lunr.Set.empty;\n\n      if (clause.usePipeline) {\n        terms = this.pipeline.runString(clause.term, {\n          fields: clause.fields\n        });\n      } else {\n        terms = [clause.term];\n      }\n\n      for (var m = 0; m < terms.length; m++) {\n        var term = terms[m];\n        /*\n         * Each term returned from the pipeline needs to use the same query\n         * clause object, e.g. the same boost and or edit distance. The\n         * simplest way to do this is to re-use the clause object but mutate\n         * its term property.\n         */\n\n        clause.term = term;\n        /*\n         * From the term in the clause we create a token set which will then\n         * be used to intersect the indexes token set to get a list of terms\n         * to lookup in the inverted index\n         */\n\n        var termTokenSet = lunr.TokenSet.fromClause(clause),\n            expandedTerms = this.tokenSet.intersect(termTokenSet).toArray();\n        /*\n         * If a term marked as required does not exist in the tokenSet it is\n         * impossible for the search to return any matches. We set all the field\n         * scoped required matches set to empty and stop examining any further\n         * clauses.\n         */\n\n        if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n          for (var k = 0; k < clause.fields.length; k++) {\n            var field = clause.fields[k];\n            requiredMatches[field] = lunr.Set.empty;\n          }\n\n          break;\n        }\n\n        for (var j = 0; j < expandedTerms.length; j++) {\n          /*\n           * For each term get the posting and termIndex, this is required for\n           * building the query vector.\n           */\n          var expandedTerm = expandedTerms[j],\n              posting = this.invertedIndex[expandedTerm],\n              termIndex = posting._index;\n\n          for (var k = 0; k < clause.fields.length; k++) {\n            /*\n             * For each field that this query term is scoped by (by default\n             * all fields are in scope) we need to get all the document refs\n             * that have this term in that field.\n             *\n             * The posting is the entry in the invertedIndex for the matching\n             * term from above.\n             */\n            var field = clause.fields[k],\n                fieldPosting = posting[field],\n                matchingDocumentRefs = Object.keys(fieldPosting),\n                termField = expandedTerm + \"/\" + field,\n                matchingDocumentsSet = new lunr.Set(matchingDocumentRefs);\n            /*\n             * if the presence of this term is required ensure that the matching\n             * documents are added to the set of required matches for this clause.\n             *\n             */\n\n            if (clause.presence == lunr.Query.presence.REQUIRED) {\n              clauseMatches = clauseMatches.union(matchingDocumentsSet);\n\n              if (requiredMatches[field] === undefined) {\n                requiredMatches[field] = lunr.Set.complete;\n              }\n            }\n            /*\n             * if the presence of this term is prohibited ensure that the matching\n             * documents are added to the set of prohibited matches for this field,\n             * creating that set if it does not yet exist.\n             */\n\n\n            if (clause.presence == lunr.Query.presence.PROHIBITED) {\n              if (prohibitedMatches[field] === undefined) {\n                prohibitedMatches[field] = lunr.Set.empty;\n              }\n\n              prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet);\n              /*\n               * Prohibited matches should not be part of the query vector used for\n               * similarity scoring and no metadata should be extracted so we continue\n               * to the next field\n               */\n\n              continue;\n            }\n            /*\n             * The query field vector is populated using the termIndex found for\n             * the term and a unit value with the appropriate boost applied.\n             * Using upsert because there could already be an entry in the vector\n             * for the term we are working with. In that case we just add the scores\n             * together.\n             */\n\n\n            queryVectors[field].upsert(termIndex, clause.boost, function (a, b) {\n              return a + b;\n            });\n            /**\n             * If we've already seen this term, field combo then we've already collected\n             * the matching documents and metadata, no need to go through all that again\n             */\n\n            if (termFieldCache[termField]) {\n              continue;\n            }\n\n            for (var l = 0; l < matchingDocumentRefs.length; l++) {\n              /*\n               * All metadata for this term/field/document triple\n               * are then extracted and collected into an instance\n               * of lunr.MatchData ready to be returned in the query\n               * results\n               */\n              var matchingDocumentRef = matchingDocumentRefs[l],\n                  matchingFieldRef = new lunr.FieldRef(matchingDocumentRef, field),\n                  metadata = fieldPosting[matchingDocumentRef],\n                  fieldMatch;\n\n              if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n                matchingFields[matchingFieldRef] = new lunr.MatchData(expandedTerm, field, metadata);\n              } else {\n                fieldMatch.add(expandedTerm, field, metadata);\n              }\n            }\n\n            termFieldCache[termField] = true;\n          }\n        }\n      }\n      /**\n       * If the presence was required we need to update the requiredMatches field sets.\n       * We do this after all fields for the term have collected their matches because\n       * the clause terms presence is required in _any_ of the fields not _all_ of the\n       * fields.\n       */\n\n\n      if (clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k];\n          requiredMatches[field] = requiredMatches[field].intersect(clauseMatches);\n        }\n      }\n    }\n    /**\n     * Need to combine the field scoped required and prohibited\n     * matching documents into a global set of required and prohibited\n     * matches\n     */\n\n\n    var allRequiredMatches = lunr.Set.complete,\n        allProhibitedMatches = lunr.Set.empty;\n\n    for (var i = 0; i < this.fields.length; i++) {\n      var field = this.fields[i];\n\n      if (requiredMatches[field]) {\n        allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field]);\n      }\n\n      if (prohibitedMatches[field]) {\n        allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field]);\n      }\n    }\n\n    var matchingFieldRefs = Object.keys(matchingFields),\n        results = [],\n        matches = Object.create(null);\n    /*\n     * If the query is negated (contains only prohibited terms)\n     * we need to get _all_ fieldRefs currently existing in the\n     * index. This is only done when we know that the query is\n     * entirely prohibited terms to avoid any cost of getting all\n     * fieldRefs unnecessarily.\n     *\n     * Additionally, blank MatchData must be created to correctly\n     * populate the results.\n     */\n\n    if (query.isNegated()) {\n      matchingFieldRefs = Object.keys(this.fieldVectors);\n\n      for (var i = 0; i < matchingFieldRefs.length; i++) {\n        var matchingFieldRef = matchingFieldRefs[i];\n        var fieldRef = lunr.FieldRef.fromString(matchingFieldRef);\n        matchingFields[matchingFieldRef] = new lunr.MatchData();\n      }\n    }\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      /*\n       * Currently we have document fields that match the query, but we\n       * need to return documents. The matchData and scores are combined\n       * from multiple fields belonging to the same document.\n       *\n       * Scores are calculated by field, using the query vectors created\n       * above, and combined into a final document score using addition.\n       */\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n          docRef = fieldRef.docRef;\n\n      if (!allRequiredMatches.contains(docRef)) {\n        continue;\n      }\n\n      if (allProhibitedMatches.contains(docRef)) {\n        continue;\n      }\n\n      var fieldVector = this.fieldVectors[fieldRef],\n          score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n          docMatch;\n\n      if ((docMatch = matches[docRef]) !== undefined) {\n        docMatch.score += score;\n        docMatch.matchData.combine(matchingFields[fieldRef]);\n      } else {\n        var match = {\n          ref: docRef,\n          score: score,\n          matchData: matchingFields[fieldRef]\n        };\n        matches[docRef] = match;\n        results.push(match);\n      }\n    }\n    /*\n     * Sort the results objects by score, highest first.\n     */\n\n\n    return results.sort(function (a, b) {\n      return b.score - a.score;\n    });\n  };\n  /**\n   * Prepares the index for JSON serialization.\n   *\n   * The schema for this JSON blob will be described in a\n   * separate JSON schema file.\n   *\n   * @returns {Object}\n   */\n\n\n  lunr.Index.prototype.toJSON = function () {\n    var invertedIndex = Object.keys(this.invertedIndex).sort().map(function (term) {\n      return [term, this.invertedIndex[term]];\n    }, this);\n    var fieldVectors = Object.keys(this.fieldVectors).map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()];\n    }, this);\n    return {\n      version: lunr.version,\n      fields: this.fields,\n      fieldVectors: fieldVectors,\n      invertedIndex: invertedIndex,\n      pipeline: this.pipeline.toJSON()\n    };\n  };\n  /**\n   * Loads a previously serialized lunr.Index\n   *\n   * @param {Object} serializedIndex - A previously serialized lunr.Index\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Index.load = function (serializedIndex) {\n    var attrs = {},\n        fieldVectors = {},\n        serializedVectors = serializedIndex.fieldVectors,\n        invertedIndex = Object.create(null),\n        serializedInvertedIndex = serializedIndex.invertedIndex,\n        tokenSetBuilder = new lunr.TokenSet.Builder(),\n        pipeline = lunr.Pipeline.load(serializedIndex.pipeline);\n\n    if (serializedIndex.version != lunr.version) {\n      lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\");\n    }\n\n    for (var i = 0; i < serializedVectors.length; i++) {\n      var tuple = serializedVectors[i],\n          ref = tuple[0],\n          elements = tuple[1];\n      fieldVectors[ref] = new lunr.Vector(elements);\n    }\n\n    for (var i = 0; i < serializedInvertedIndex.length; i++) {\n      var tuple = serializedInvertedIndex[i],\n          term = tuple[0],\n          posting = tuple[1];\n      tokenSetBuilder.insert(term);\n      invertedIndex[term] = posting;\n    }\n\n    tokenSetBuilder.finish();\n    attrs.fields = serializedIndex.fields;\n    attrs.fieldVectors = fieldVectors;\n    attrs.invertedIndex = invertedIndex;\n    attrs.tokenSet = tokenSetBuilder.root;\n    attrs.pipeline = pipeline;\n    return new lunr.Index(attrs);\n  };\n  /*!\n   * lunr.Builder\n   * Copyright (C) 2020 Oliver Nightingale\n   */\n\n  /**\n   * lunr.Builder performs indexing on a set of documents and\n   * returns instances of lunr.Index ready for querying.\n   *\n   * All configuration of the index is done via the builder, the\n   * fields to index, the document reference, the text processing\n   * pipeline and document scoring parameters are all set on the\n   * builder before indexing.\n   *\n   * @constructor\n   * @property {string} _ref - Internal reference to the document reference field.\n   * @property {string[]} _fields - Internal reference to the document fields to index.\n   * @property {object} invertedIndex - The inverted index maps terms to document fields.\n   * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n   * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n   * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n   * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n   * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n   * @property {number} documentCount - Keeps track of the total number of documents indexed.\n   * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n   * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n   * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n   * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n   */\n\n\n  lunr.Builder = function () {\n    this._ref = \"id\";\n    this._fields = Object.create(null);\n    this._documents = Object.create(null);\n    this.invertedIndex = Object.create(null);\n    this.fieldTermFrequencies = {};\n    this.fieldLengths = {};\n    this.tokenizer = lunr.tokenizer;\n    this.pipeline = new lunr.Pipeline();\n    this.searchPipeline = new lunr.Pipeline();\n    this.documentCount = 0;\n    this._b = 0.75;\n    this._k1 = 1.2;\n    this.termIndex = 0;\n    this.metadataWhitelist = [];\n  };\n  /**\n   * Sets the document field used as the document reference. Every document must have this field.\n   * The type of this field in the document should be a string, if it is not a string it will be\n   * coerced into a string by calling toString.\n   *\n   * The default ref is 'id'.\n   *\n   * The ref should _not_ be changed during indexing, it should be set before any documents are\n   * added to the index. Changing it during indexing can lead to inconsistent results.\n   *\n   * @param {string} ref - The name of the reference field in the document.\n   */\n\n\n  lunr.Builder.prototype.ref = function (ref) {\n    this._ref = ref;\n  };\n  /**\n   * A function that is used to extract a field from a document.\n   *\n   * Lunr expects a field to be at the top level of a document, if however the field\n   * is deeply nested within a document an extractor function can be used to extract\n   * the right field for indexing.\n   *\n   * @callback fieldExtractor\n   * @param {object} doc - The document being added to the index.\n   * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n   * @example <caption>Extracting a nested field</caption>\n   * function (doc) { return doc.nested.field }\n   */\n\n  /**\n   * Adds a field to the list of document fields that will be indexed. Every document being\n   * indexed should have this field. Null values for this field in indexed documents will\n   * not cause errors but will limit the chance of that document being retrieved by searches.\n   *\n   * All fields should be added before adding documents to the index. Adding fields after\n   * a document has been indexed will have no effect on already indexed documents.\n   *\n   * Fields can be boosted at build time. This allows terms within that field to have more\n   * importance when ranking search results. Use a field boost to specify that matches within\n   * one field are more important than other fields.\n   *\n   * @param {string} fieldName - The name of a field to index in all documents.\n   * @param {object} attributes - Optional attributes associated with this field.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n   * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n   * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n   */\n\n\n  lunr.Builder.prototype.field = function (fieldName, attributes) {\n    if (/\\//.test(fieldName)) {\n      throw new RangeError(\"Field '\" + fieldName + \"' contains illegal character '/'\");\n    }\n\n    this._fields[fieldName] = attributes || {};\n  };\n  /**\n   * A parameter to tune the amount of field length normalisation that is applied when\n   * calculating relevance scores. A value of 0 will completely disable any normalisation\n   * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n   * will be clamped to the range 0 - 1.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.b = function (number) {\n    if (number < 0) {\n      this._b = 0;\n    } else if (number > 1) {\n      this._b = 1;\n    } else {\n      this._b = number;\n    }\n  };\n  /**\n   * A parameter that controls the speed at which a rise in term frequency results in term\n   * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n   * slower saturation levels, a lower value will result in quicker saturation.\n   *\n   * @param {number} number - The value to set for this tuning parameter.\n   */\n\n\n  lunr.Builder.prototype.k1 = function (number) {\n    this._k1 = number;\n  };\n  /**\n   * Adds a document to the index.\n   *\n   * Before adding fields to the index the index should have been fully setup, with the document\n   * ref and all fields to index already having been specified.\n   *\n   * The document must have a field name as specified by the ref (by default this is 'id') and\n   * it should have all fields defined for indexing, though null or undefined values will not\n   * cause errors.\n   *\n   * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n   * this document should rank higher in search results than other documents.\n   *\n   * @param {object} doc - The document to add to the index.\n   * @param {object} attributes - Optional attributes associated with this document.\n   * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n   */\n\n\n  lunr.Builder.prototype.add = function (doc, attributes) {\n    var docRef = doc[this._ref],\n        fields = Object.keys(this._fields);\n    this._documents[docRef] = attributes || {};\n    this.documentCount += 1;\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i],\n          extractor = this._fields[fieldName].extractor,\n          field = extractor ? extractor(doc) : doc[fieldName],\n          tokens = this.tokenizer(field, {\n        fields: [fieldName]\n      }),\n          terms = this.pipeline.run(tokens),\n          fieldRef = new lunr.FieldRef(docRef, fieldName),\n          fieldTerms = Object.create(null);\n      this.fieldTermFrequencies[fieldRef] = fieldTerms;\n      this.fieldLengths[fieldRef] = 0; // store the length of this field for this document\n\n      this.fieldLengths[fieldRef] += terms.length; // calculate term frequencies for this field\n\n      for (var j = 0; j < terms.length; j++) {\n        var term = terms[j];\n\n        if (fieldTerms[term] == undefined) {\n          fieldTerms[term] = 0;\n        }\n\n        fieldTerms[term] += 1; // add to inverted index\n        // create an initial posting if one doesn't exist\n\n        if (this.invertedIndex[term] == undefined) {\n          var posting = Object.create(null);\n          posting[\"_index\"] = this.termIndex;\n          this.termIndex += 1;\n\n          for (var k = 0; k < fields.length; k++) {\n            posting[fields[k]] = Object.create(null);\n          }\n\n          this.invertedIndex[term] = posting;\n        } // add an entry for this term/fieldName/docRef to the invertedIndex\n\n\n        if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n          this.invertedIndex[term][fieldName][docRef] = Object.create(null);\n        } // store all whitelisted metadata about this token in the\n        // inverted index\n\n\n        for (var l = 0; l < this.metadataWhitelist.length; l++) {\n          var metadataKey = this.metadataWhitelist[l],\n              metadata = term.metadata[metadataKey];\n\n          if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n            this.invertedIndex[term][fieldName][docRef][metadataKey] = [];\n          }\n\n          this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata);\n        }\n      }\n    }\n  };\n  /**\n   * Calculates the average document length for this index\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.calculateAverageFieldLengths = function () {\n    var fieldRefs = Object.keys(this.fieldLengths),\n        numberOfFields = fieldRefs.length,\n        accumulator = {},\n        documentsWithField = {};\n\n    for (var i = 0; i < numberOfFields; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          field = fieldRef.fieldName;\n      documentsWithField[field] || (documentsWithField[field] = 0);\n      documentsWithField[field] += 1;\n      accumulator[field] || (accumulator[field] = 0);\n      accumulator[field] += this.fieldLengths[fieldRef];\n    }\n\n    var fields = Object.keys(this._fields);\n\n    for (var i = 0; i < fields.length; i++) {\n      var fieldName = fields[i];\n      accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName];\n    }\n\n    this.averageFieldLength = accumulator;\n  };\n  /**\n   * Builds a vector space model of every document using lunr.Vector\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createFieldVectors = function () {\n    var fieldVectors = {},\n        fieldRefs = Object.keys(this.fieldTermFrequencies),\n        fieldRefsLength = fieldRefs.length,\n        termIdfCache = Object.create(null);\n\n    for (var i = 0; i < fieldRefsLength; i++) {\n      var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n          fieldName = fieldRef.fieldName,\n          fieldLength = this.fieldLengths[fieldRef],\n          fieldVector = new lunr.Vector(),\n          termFrequencies = this.fieldTermFrequencies[fieldRef],\n          terms = Object.keys(termFrequencies),\n          termsLength = terms.length;\n      var fieldBoost = this._fields[fieldName].boost || 1,\n          docBoost = this._documents[fieldRef.docRef].boost || 1;\n\n      for (var j = 0; j < termsLength; j++) {\n        var term = terms[j],\n            tf = termFrequencies[term],\n            termIndex = this.invertedIndex[term]._index,\n            idf,\n            score,\n            scoreWithPrecision;\n\n        if (termIdfCache[term] === undefined) {\n          idf = lunr.idf(this.invertedIndex[term], this.documentCount);\n          termIdfCache[term] = idf;\n        } else {\n          idf = termIdfCache[term];\n        }\n\n        score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf);\n        score *= fieldBoost;\n        score *= docBoost;\n        scoreWithPrecision = Math.round(score * 1000) / 1000; // Converts 1.23456789 to 1.234.\n        // Reducing the precision so that the vectors take up less\n        // space when serialised. Doing it now so that they behave\n        // the same before and after serialisation. Also, this is\n        // the fastest approach to reducing a number's precision in\n        // JavaScript.\n\n        fieldVector.insert(termIndex, scoreWithPrecision);\n      }\n\n      fieldVectors[fieldRef] = fieldVector;\n    }\n\n    this.fieldVectors = fieldVectors;\n  };\n  /**\n   * Creates a token set of all tokens in the index using lunr.TokenSet\n   *\n   * @private\n   */\n\n\n  lunr.Builder.prototype.createTokenSet = function () {\n    this.tokenSet = lunr.TokenSet.fromArray(Object.keys(this.invertedIndex).sort());\n  };\n  /**\n   * Builds the index, creating an instance of lunr.Index.\n   *\n   * This completes the indexing process and should only be called\n   * once all documents have been added to the index.\n   *\n   * @returns {lunr.Index}\n   */\n\n\n  lunr.Builder.prototype.build = function () {\n    this.calculateAverageFieldLengths();\n    this.createFieldVectors();\n    this.createTokenSet();\n    return new lunr.Index({\n      invertedIndex: this.invertedIndex,\n      fieldVectors: this.fieldVectors,\n      tokenSet: this.tokenSet,\n      fields: Object.keys(this._fields),\n      pipeline: this.searchPipeline\n    });\n  };\n  /**\n   * Applies a plugin to the index builder.\n   *\n   * A plugin is a function that is called with the index builder as its context.\n   * Plugins can be used to customise or extend the behaviour of the index\n   * in some way. A plugin is just a function, that encapsulated the custom\n   * behaviour that should be applied when building the index.\n   *\n   * The plugin function will be called with the index builder as its argument, additional\n   * arguments can also be passed when calling use. The function will be called\n   * with the index builder as its context.\n   *\n   * @param {Function} plugin The plugin to apply.\n   */\n\n\n  lunr.Builder.prototype.use = function (fn) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    args.unshift(this);\n    fn.apply(this, args);\n  };\n  /**\n   * Contains and collects metadata about a matching document.\n   * A single instance of lunr.MatchData is returned as part of every\n   * lunr.Index~Result.\n   *\n   * @constructor\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   * @property {object} metadata - A cloned collection of metadata associated with this document.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData = function (term, field, metadata) {\n    var clonedMetadata = Object.create(null),\n        metadataKeys = Object.keys(metadata || {}); // Cloning the metadata to prevent the original\n    // being mutated during match data combination.\n    // Metadata is kept in an array within the inverted\n    // index so cloning the data can be done with\n    // Array#slice\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n      clonedMetadata[key] = metadata[key].slice();\n    }\n\n    this.metadata = Object.create(null);\n\n    if (term !== undefined) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = clonedMetadata;\n    }\n  };\n  /**\n   * An instance of lunr.MatchData will be created for every term that matches a\n   * document. However only one instance is required in a lunr.Index~Result. This\n   * method combines metadata from another instance of lunr.MatchData with this\n   * objects metadata.\n   *\n   * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n   * @see {@link lunr.Index~Result}\n   */\n\n\n  lunr.MatchData.prototype.combine = function (otherMatchData) {\n    var terms = Object.keys(otherMatchData.metadata);\n\n    for (var i = 0; i < terms.length; i++) {\n      var term = terms[i],\n          fields = Object.keys(otherMatchData.metadata[term]);\n\n      if (this.metadata[term] == undefined) {\n        this.metadata[term] = Object.create(null);\n      }\n\n      for (var j = 0; j < fields.length; j++) {\n        var field = fields[j],\n            keys = Object.keys(otherMatchData.metadata[term][field]);\n\n        if (this.metadata[term][field] == undefined) {\n          this.metadata[term][field] = Object.create(null);\n        }\n\n        for (var k = 0; k < keys.length; k++) {\n          var key = keys[k];\n\n          if (this.metadata[term][field][key] == undefined) {\n            this.metadata[term][field][key] = otherMatchData.metadata[term][field][key];\n          } else {\n            this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key]);\n          }\n        }\n      }\n    }\n  };\n  /**\n   * Add metadata for a term/field pair to this instance of match data.\n   *\n   * @param {string} term - The term this match data is associated with\n   * @param {string} field - The field in which the term was found\n   * @param {object} metadata - The metadata recorded about this term in this field\n   */\n\n\n  lunr.MatchData.prototype.add = function (term, field, metadata) {\n    if (!(term in this.metadata)) {\n      this.metadata[term] = Object.create(null);\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    if (!(field in this.metadata[term])) {\n      this.metadata[term][field] = metadata;\n      return;\n    }\n\n    var metadataKeys = Object.keys(metadata);\n\n    for (var i = 0; i < metadataKeys.length; i++) {\n      var key = metadataKeys[i];\n\n      if (key in this.metadata[term][field]) {\n        this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key]);\n      } else {\n        this.metadata[term][field][key] = metadata[key];\n      }\n    }\n  };\n  /**\n   * A lunr.Query provides a programmatic way of defining queries to be performed\n   * against a {@link lunr.Index}.\n   *\n   * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n   * so the query object is pre-initialized with the right index fields.\n   *\n   * @constructor\n   * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n   * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n   */\n\n\n  lunr.Query = function (allFields) {\n    this.clauses = [];\n    this.allFields = allFields;\n  };\n  /**\n   * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n   *\n   * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n   * concatenation.\n   *\n   * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n   *\n   * @constant\n   * @default\n   * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n   * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n   * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with trailing wildcard</caption>\n   * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n   * @example <caption>query term with leading and trailing wildcard</caption>\n   * query.term('foo', {\n   *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n   * })\n   */\n\n\n  lunr.Query.wildcard = new String(\"*\");\n  lunr.Query.wildcard.NONE = 0;\n  lunr.Query.wildcard.LEADING = 1;\n  lunr.Query.wildcard.TRAILING = 2;\n  /**\n   * Constants for indicating what kind of presence a term must have in matching documents.\n   *\n   * @constant\n   * @enum {number}\n   * @see lunr.Query~Clause\n   * @see lunr.Query#clause\n   * @see lunr.Query#term\n   * @example <caption>query term with required presence</caption>\n   * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n   */\n\n  lunr.Query.presence = {\n    /**\n     * Term's presence in a document is optional, this is the default value.\n     */\n    OPTIONAL: 1,\n\n    /**\n     * Term's presence in a document is required, documents that do not contain\n     * this term will not be returned.\n     */\n    REQUIRED: 2,\n\n    /**\n     * Term's presence in a document is prohibited, documents that do contain\n     * this term will not be returned.\n     */\n    PROHIBITED: 3\n  };\n  /**\n   * A single clause in a {@link lunr.Query} contains a term and details on how to\n   * match that term against a {@link lunr.Index}.\n   *\n   * @typedef {Object} lunr.Query~Clause\n   * @property {string[]} fields - The fields in an index this clause should be matched against.\n   * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n   * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n   * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n   * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n   * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n   */\n\n  /**\n   * Adds a {@link lunr.Query~Clause} to this query.\n   *\n   * Unless the clause contains the fields to be matched all fields will be matched. In addition\n   * a default boost of 1 is applied to the clause.\n   *\n   * @param {lunr.Query~Clause} clause - The clause to add to this query.\n   * @see lunr.Query~Clause\n   * @returns {lunr.Query}\n   */\n\n  lunr.Query.prototype.clause = function (clause) {\n    if (!('fields' in clause)) {\n      clause.fields = this.allFields;\n    }\n\n    if (!('boost' in clause)) {\n      clause.boost = 1;\n    }\n\n    if (!('usePipeline' in clause)) {\n      clause.usePipeline = true;\n    }\n\n    if (!('wildcard' in clause)) {\n      clause.wildcard = lunr.Query.wildcard.NONE;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.LEADING && clause.term.charAt(0) != lunr.Query.wildcard) {\n      clause.term = \"*\" + clause.term;\n    }\n\n    if (clause.wildcard & lunr.Query.wildcard.TRAILING && clause.term.slice(-1) != lunr.Query.wildcard) {\n      clause.term = \"\" + clause.term + \"*\";\n    }\n\n    if (!('presence' in clause)) {\n      clause.presence = lunr.Query.presence.OPTIONAL;\n    }\n\n    this.clauses.push(clause);\n    return this;\n  };\n  /**\n   * A negated query is one in which every clause has a presence of\n   * prohibited. These queries require some special processing to return\n   * the expected results.\n   *\n   * @returns boolean\n   */\n\n\n  lunr.Query.prototype.isNegated = function () {\n    for (var i = 0; i < this.clauses.length; i++) {\n      if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n   * to the list of clauses that make up this query.\n   *\n   * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n   * to a token or token-like string should be done before calling this method.\n   *\n   * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n   * array, each term in the array will share the same options.\n   *\n   * @param {object|object[]} term - The term(s) to add to the query.\n   * @param {object} [options] - Any additional properties to add to the query clause.\n   * @returns {lunr.Query}\n   * @see lunr.Query#clause\n   * @see lunr.Query~Clause\n   * @example <caption>adding a single term to a query</caption>\n   * query.term(\"foo\")\n   * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n   * query.term(\"foo\", {\n   *   fields: [\"title\"],\n   *   boost: 10,\n   *   wildcard: lunr.Query.wildcard.TRAILING\n   * })\n   * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n   * query.term(lunr.tokenizer(\"foo bar\"))\n   */\n\n\n  lunr.Query.prototype.term = function (term, options) {\n    if (Array.isArray(term)) {\n      term.forEach(function (t) {\n        this.term(t, lunr.utils.clone(options));\n      }, this);\n      return this;\n    }\n\n    var clause = options || {};\n    clause.term = term.toString();\n    this.clause(clause);\n    return this;\n  };\n\n  lunr.QueryParseError = function (message, start, end) {\n    this.name = \"QueryParseError\";\n    this.message = message;\n    this.start = start;\n    this.end = end;\n  };\n\n  lunr.QueryParseError.prototype = new Error();\n\n  lunr.QueryLexer = function (str) {\n    this.lexemes = [];\n    this.str = str;\n    this.length = str.length;\n    this.pos = 0;\n    this.start = 0;\n    this.escapeCharPositions = [];\n  };\n\n  lunr.QueryLexer.prototype.run = function () {\n    var state = lunr.QueryLexer.lexText;\n\n    while (state) {\n      state = state(this);\n    }\n  };\n\n  lunr.QueryLexer.prototype.sliceString = function () {\n    var subSlices = [],\n        sliceStart = this.start,\n        sliceEnd = this.pos;\n\n    for (var i = 0; i < this.escapeCharPositions.length; i++) {\n      sliceEnd = this.escapeCharPositions[i];\n      subSlices.push(this.str.slice(sliceStart, sliceEnd));\n      sliceStart = sliceEnd + 1;\n    }\n\n    subSlices.push(this.str.slice(sliceStart, this.pos));\n    this.escapeCharPositions.length = 0;\n    return subSlices.join('');\n  };\n\n  lunr.QueryLexer.prototype.emit = function (type) {\n    this.lexemes.push({\n      type: type,\n      str: this.sliceString(),\n      start: this.start,\n      end: this.pos\n    });\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.escapeCharacter = function () {\n    this.escapeCharPositions.push(this.pos - 1);\n    this.pos += 1;\n  };\n\n  lunr.QueryLexer.prototype.next = function () {\n    if (this.pos >= this.length) {\n      return lunr.QueryLexer.EOS;\n    }\n\n    var char = this.str.charAt(this.pos);\n    this.pos += 1;\n    return char;\n  };\n\n  lunr.QueryLexer.prototype.width = function () {\n    return this.pos - this.start;\n  };\n\n  lunr.QueryLexer.prototype.ignore = function () {\n    if (this.start == this.pos) {\n      this.pos += 1;\n    }\n\n    this.start = this.pos;\n  };\n\n  lunr.QueryLexer.prototype.backup = function () {\n    this.pos -= 1;\n  };\n\n  lunr.QueryLexer.prototype.acceptDigitRun = function () {\n    var char, charCode;\n\n    do {\n      char = this.next();\n      charCode = char.charCodeAt(0);\n    } while (charCode > 47 && charCode < 58);\n\n    if (char != lunr.QueryLexer.EOS) {\n      this.backup();\n    }\n  };\n\n  lunr.QueryLexer.prototype.more = function () {\n    return this.pos < this.length;\n  };\n\n  lunr.QueryLexer.EOS = 'EOS';\n  lunr.QueryLexer.FIELD = 'FIELD';\n  lunr.QueryLexer.TERM = 'TERM';\n  lunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE';\n  lunr.QueryLexer.BOOST = 'BOOST';\n  lunr.QueryLexer.PRESENCE = 'PRESENCE';\n\n  lunr.QueryLexer.lexField = function (lexer) {\n    lexer.backup();\n    lexer.emit(lunr.QueryLexer.FIELD);\n    lexer.ignore();\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexTerm = function (lexer) {\n    if (lexer.width() > 1) {\n      lexer.backup();\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n\n    lexer.ignore();\n\n    if (lexer.more()) {\n      return lunr.QueryLexer.lexText;\n    }\n  };\n\n  lunr.QueryLexer.lexEditDistance = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.EDIT_DISTANCE);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexBoost = function (lexer) {\n    lexer.ignore();\n    lexer.acceptDigitRun();\n    lexer.emit(lunr.QueryLexer.BOOST);\n    return lunr.QueryLexer.lexText;\n  };\n\n  lunr.QueryLexer.lexEOS = function (lexer) {\n    if (lexer.width() > 0) {\n      lexer.emit(lunr.QueryLexer.TERM);\n    }\n  }; // This matches the separator used when tokenising fields\n  // within a document. These should match otherwise it is\n  // not possible to search for some tokens within a document.\n  //\n  // It is possible for the user to change the separator on the\n  // tokenizer so it _might_ clash with any other of the special\n  // characters already used within the search string, e.g. :.\n  //\n  // This means that it is possible to change the separator in\n  // such a way that makes some words unsearchable using a search\n  // string.\n\n\n  lunr.QueryLexer.termSeparator = lunr.tokenizer.separator;\n\n  lunr.QueryLexer.lexText = function (lexer) {\n    while (true) {\n      var char = lexer.next();\n\n      if (char == lunr.QueryLexer.EOS) {\n        return lunr.QueryLexer.lexEOS;\n      } // Escape character is '\\'\n\n\n      if (char.charCodeAt(0) == 92) {\n        lexer.escapeCharacter();\n        continue;\n      }\n\n      if (char == \":\") {\n        return lunr.QueryLexer.lexField;\n      }\n\n      if (char == \"~\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexEditDistance;\n      }\n\n      if (char == \"^\") {\n        lexer.backup();\n\n        if (lexer.width() > 0) {\n          lexer.emit(lunr.QueryLexer.TERM);\n        }\n\n        return lunr.QueryLexer.lexBoost;\n      } // \"+\" indicates term presence is required\n      // checking for length to ensure that only\n      // leading \"+\" are considered\n\n\n      if (char == \"+\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      } // \"-\" indicates term presence is prohibited\n      // checking for length to ensure that only\n      // leading \"-\" are considered\n\n\n      if (char == \"-\" && lexer.width() === 1) {\n        lexer.emit(lunr.QueryLexer.PRESENCE);\n        return lunr.QueryLexer.lexText;\n      }\n\n      if (char.match(lunr.QueryLexer.termSeparator)) {\n        return lunr.QueryLexer.lexTerm;\n      }\n    }\n  };\n\n  lunr.QueryParser = function (str, query) {\n    this.lexer = new lunr.QueryLexer(str);\n    this.query = query;\n    this.currentClause = {};\n    this.lexemeIdx = 0;\n  };\n\n  lunr.QueryParser.prototype.parse = function () {\n    this.lexer.run();\n    this.lexemes = this.lexer.lexemes;\n    var state = lunr.QueryParser.parseClause;\n\n    while (state) {\n      state = state(this);\n    }\n\n    return this.query;\n  };\n\n  lunr.QueryParser.prototype.peekLexeme = function () {\n    return this.lexemes[this.lexemeIdx];\n  };\n\n  lunr.QueryParser.prototype.consumeLexeme = function () {\n    var lexeme = this.peekLexeme();\n    this.lexemeIdx += 1;\n    return lexeme;\n  };\n\n  lunr.QueryParser.prototype.nextClause = function () {\n    var completedClause = this.currentClause;\n    this.query.clause(completedClause);\n    this.currentClause = {};\n  };\n\n  lunr.QueryParser.parseClause = function (parser) {\n    var lexeme = parser.peekLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.type) {\n      case lunr.QueryLexer.PRESENCE:\n        return lunr.QueryParser.parsePresence;\n\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expected either a field or a term, found \" + lexeme.type;\n\n        if (lexeme.str.length >= 1) {\n          errorMessage += \" with value '\" + lexeme.str + \"'\";\n        }\n\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parsePresence = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    switch (lexeme.str) {\n      case \"-\":\n        parser.currentClause.presence = lunr.Query.presence.PROHIBITED;\n        break;\n\n      case \"+\":\n        parser.currentClause.presence = lunr.Query.presence.REQUIRED;\n        break;\n\n      default:\n        var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\";\n        throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term or field, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.FIELD:\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseField = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n      var possibleFields = parser.query.allFields.map(function (f) {\n        return \"'\" + f + \"'\";\n      }).join(', '),\n          errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields;\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.fields = [lexeme.str];\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      var errorMessage = \"expecting term, found nothing\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        return lunr.QueryParser.parseTerm;\n\n      default:\n        var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseTerm = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    parser.currentClause.term = lexeme.str.toLowerCase();\n\n    if (lexeme.str.indexOf(\"*\") != -1) {\n      parser.currentClause.usePipeline = false;\n    }\n\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseEditDistance = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var editDistance = parseInt(lexeme.str, 10);\n\n    if (isNaN(editDistance)) {\n      var errorMessage = \"edit distance must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.editDistance = editDistance;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  };\n\n  lunr.QueryParser.parseBoost = function (parser) {\n    var lexeme = parser.consumeLexeme();\n\n    if (lexeme == undefined) {\n      return;\n    }\n\n    var boost = parseInt(lexeme.str, 10);\n\n    if (isNaN(boost)) {\n      var errorMessage = \"boost must be numeric\";\n      throw new lunr.QueryParseError(errorMessage, lexeme.start, lexeme.end);\n    }\n\n    parser.currentClause.boost = boost;\n    var nextLexeme = parser.peekLexeme();\n\n    if (nextLexeme == undefined) {\n      parser.nextClause();\n      return;\n    }\n\n    switch (nextLexeme.type) {\n      case lunr.QueryLexer.TERM:\n        parser.nextClause();\n        return lunr.QueryParser.parseTerm;\n\n      case lunr.QueryLexer.FIELD:\n        parser.nextClause();\n        return lunr.QueryParser.parseField;\n\n      case lunr.QueryLexer.EDIT_DISTANCE:\n        return lunr.QueryParser.parseEditDistance;\n\n      case lunr.QueryLexer.BOOST:\n        return lunr.QueryParser.parseBoost;\n\n      case lunr.QueryLexer.PRESENCE:\n        parser.nextClause();\n        return lunr.QueryParser.parsePresence;\n\n      default:\n        var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\";\n        throw new lunr.QueryParseError(errorMessage, nextLexeme.start, nextLexeme.end);\n    }\n  }\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;\n\n  (function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory);\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory();\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory();\n    }\n  })(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr;\n  });\n})();","'use strict';\n\nvar _defineProperty = require(\"/Users/matthewdaly/Projects/matthewbdaly.github.io/node_modules/@babel/runtime/helpers/defineProperty.js\");\n\nvar _slicedToArray = require(\"/Users/matthewdaly/Projects/matthewbdaly.github.io/node_modules/@babel/runtime/helpers/slicedToArray.js\");\n\nvar _toConsumableArray = require(\"/Users/matthewdaly/Projects/matthewbdaly.github.io/node_modules/@babel/runtime/helpers/toConsumableArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar strictUriEncode = require('strict-uri-encode');\n\nvar decodeComponent = require('decode-uri-component');\n\nvar splitOnFirst = require('split-on-first');\n\nvar filterObject = require('filter-obj');\n\nvar isNullOrUndefined = function isNullOrUndefined(value) {\n  return value === null || value === undefined;\n};\n\nvar encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key) {\n        return function (result, value) {\n          var index = result.length;\n\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[', index, ']'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'bracket':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), '[]'].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '[]=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'colon-list-separator':\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [[encode(key, options), ':list='].join('')]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), ':list=', encode(value, options)].join('')]);\n        };\n      };\n\n    case 'comma':\n    case 'separator':\n    case 'bracket-separator':\n      {\n        var keyValueSep = options.arrayFormat === 'bracket-separator' ? '[]=' : '=';\n        return function (key) {\n          return function (result, value) {\n            if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n              return result;\n            } // Translate null to an empty string so that it doesn't serialize as 'null'\n\n\n            value = value === null ? '' : value;\n\n            if (result.length === 0) {\n              return [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n            }\n\n            return [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n          };\n        };\n      }\n\n    default:\n      return function (key) {\n        return function (result, value) {\n          if (value === undefined || options.skipNull && value === null || options.skipEmptyString && value === '') {\n            return result;\n          }\n\n          if (value === null) {\n            return [].concat(_toConsumableArray(result), [encode(key, options)]);\n          }\n\n          return [].concat(_toConsumableArray(result), [[encode(key, options), '=', encode(value, options)].join('')]);\n        };\n      };\n  }\n}\n\nfunction parserForArrayFormat(options) {\n  var result;\n\n  switch (options.arrayFormat) {\n    case 'index':\n      return function (key, value, accumulator) {\n        result = /\\[(\\d*)\\]$/.exec(key);\n        key = key.replace(/\\[\\d*\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = {};\n        }\n\n        accumulator[key][result[1]] = value;\n      };\n\n    case 'bracket':\n      return function (key, value, accumulator) {\n        result = /(\\[\\])$/.exec(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'colon-list-separator':\n      return function (key, value, accumulator) {\n        result = /(:list)$/.exec(key);\n        key = key.replace(/:list$/, '');\n\n        if (!result) {\n          accumulator[key] = value;\n          return;\n        }\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = [value];\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n\n    case 'comma':\n    case 'separator':\n      return function (key, value, accumulator) {\n        var isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n        var isEncodedArray = typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator);\n        value = isEncodedArray ? decode(value, options) : value;\n        var newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        }) : value === null ? value : decode(value, options);\n        accumulator[key] = newValue;\n      };\n\n    case 'bracket-separator':\n      return function (key, value, accumulator) {\n        var isArray = /(\\[\\])$/.test(key);\n        key = key.replace(/\\[\\]$/, '');\n\n        if (!isArray) {\n          accumulator[key] = value ? decode(value, options) : value;\n          return;\n        }\n\n        var arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map(function (item) {\n          return decode(item, options);\n        });\n\n        if (accumulator[key] === undefined) {\n          accumulator[key] = arrayValue;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], arrayValue);\n      };\n\n    default:\n      return function (key, value, accumulator) {\n        if (accumulator[key] === undefined) {\n          accumulator[key] = value;\n          return;\n        }\n\n        accumulator[key] = [].concat(accumulator[key], value);\n      };\n  }\n}\n\nfunction validateArrayFormatSeparator(value) {\n  if (typeof value !== 'string' || value.length !== 1) {\n    throw new TypeError('arrayFormatSeparator must be single character string');\n  }\n}\n\nfunction encode(value, options) {\n  if (options.encode) {\n    return options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n  }\n\n  return value;\n}\n\nfunction decode(value, options) {\n  if (options.decode) {\n    return decodeComponent(value);\n  }\n\n  return value;\n}\n\nfunction keysSorter(input) {\n  if (Array.isArray(input)) {\n    return input.sort();\n  }\n\n  if (typeof input === 'object') {\n    return keysSorter(Object.keys(input)).sort(function (a, b) {\n      return Number(a) - Number(b);\n    }).map(function (key) {\n      return input[key];\n    });\n  }\n\n  return input;\n}\n\nfunction removeHash(input) {\n  var hashStart = input.indexOf('#');\n\n  if (hashStart !== -1) {\n    input = input.slice(0, hashStart);\n  }\n\n  return input;\n}\n\nfunction getHash(url) {\n  var hash = '';\n  var hashStart = url.indexOf('#');\n\n  if (hashStart !== -1) {\n    hash = url.slice(hashStart);\n  }\n\n  return hash;\n}\n\nfunction extract(input) {\n  input = removeHash(input);\n  var queryStart = input.indexOf('?');\n\n  if (queryStart === -1) {\n    return '';\n  }\n\n  return input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n  if (options.parseNumbers && !Number.isNaN(Number(value)) && typeof value === 'string' && value.trim() !== '') {\n    value = Number(value);\n  } else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n    value = value.toLowerCase() === 'true';\n  }\n\n  return value;\n}\n\nfunction parse(query, options) {\n  options = Object.assign({\n    decode: true,\n    sort: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ',',\n    parseNumbers: false,\n    parseBooleans: false\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n  var formatter = parserForArrayFormat(options); // Create an object with no prototype\n\n  var ret = Object.create(null);\n\n  if (typeof query !== 'string') {\n    return ret;\n  }\n\n  query = query.trim().replace(/^[?#&]/, '');\n\n  if (!query) {\n    return ret;\n  }\n\n  var _iterator = _createForOfIteratorHelper(query.split('&')),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n\n      if (param === '') {\n        continue;\n      }\n\n      var _splitOnFirst = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '='),\n          _splitOnFirst2 = _slicedToArray(_splitOnFirst, 2),\n          _key = _splitOnFirst2[0],\n          _value = _splitOnFirst2[1]; // Missing `=` should be `null`:\n      // http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\n\n      _value = _value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? _value : decode(_value, options);\n      formatter(decode(_key, options), _value, ret);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  for (var _i = 0, _Object$keys = Object.keys(ret); _i < _Object$keys.length; _i++) {\n    var key = _Object$keys[_i];\n    var value = ret[key];\n\n    if (typeof value === 'object' && value !== null) {\n      for (var _i2 = 0, _Object$keys2 = Object.keys(value); _i2 < _Object$keys2.length; _i2++) {\n        var k = _Object$keys2[_i2];\n        value[k] = parseValue(value[k], options);\n      }\n    } else {\n      ret[key] = parseValue(value, options);\n    }\n  }\n\n  if (options.sort === false) {\n    return ret;\n  }\n\n  return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce(function (result, key) {\n    var value = ret[key];\n\n    if (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n      // Sort object keys, not values\n      result[key] = keysSorter(value);\n    } else {\n      result[key] = value;\n    }\n\n    return result;\n  }, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (object, options) {\n  if (!object) {\n    return '';\n  }\n\n  options = Object.assign({\n    encode: true,\n    strict: true,\n    arrayFormat: 'none',\n    arrayFormatSeparator: ','\n  }, options);\n  validateArrayFormatSeparator(options.arrayFormatSeparator);\n\n  var shouldFilter = function shouldFilter(key) {\n    return options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === '';\n  };\n\n  var formatter = encoderForArrayFormat(options);\n  var objectCopy = {};\n\n  for (var _i3 = 0, _Object$keys3 = Object.keys(object); _i3 < _Object$keys3.length; _i3++) {\n    var key = _Object$keys3[_i3];\n\n    if (!shouldFilter(key)) {\n      objectCopy[key] = object[key];\n    }\n  }\n\n  var keys = Object.keys(objectCopy);\n\n  if (options.sort !== false) {\n    keys.sort(options.sort);\n  }\n\n  return keys.map(function (key) {\n    var value = object[key];\n\n    if (value === undefined) {\n      return '';\n    }\n\n    if (value === null) {\n      return encode(key, options);\n    }\n\n    if (Array.isArray(value)) {\n      if (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n        return encode(key, options) + '[]';\n      }\n\n      return value.reduce(formatter(key), []).join('&');\n    }\n\n    return encode(key, options) + '=' + encode(value, options);\n  }).filter(function (x) {\n    return x.length > 0;\n  }).join('&');\n};\n\nexports.parseUrl = function (url, options) {\n  options = Object.assign({\n    decode: true\n  }, options);\n\n  var _splitOnFirst3 = splitOnFirst(url, '#'),\n      _splitOnFirst4 = _slicedToArray(_splitOnFirst3, 2),\n      url_ = _splitOnFirst4[0],\n      hash = _splitOnFirst4[1];\n\n  return Object.assign({\n    url: url_.split('?')[0] || '',\n    query: parse(extract(url), options)\n  }, options && options.parseFragmentIdentifier && hash ? {\n    fragmentIdentifier: decode(hash, options)\n  } : {});\n};\n\nexports.stringifyUrl = function (object, options) {\n  options = Object.assign(_defineProperty({\n    encode: true,\n    strict: true\n  }, encodeFragmentIdentifier, true), options);\n  var url = removeHash(object.url).split('?')[0] || '';\n  var queryFromUrl = exports.extract(object.url);\n  var parsedQueryFromUrl = exports.parse(queryFromUrl, {\n    sort: false\n  });\n  var query = Object.assign(parsedQueryFromUrl, object.query);\n  var queryString = exports.stringify(query, options);\n\n  if (queryString) {\n    queryString = \"?\".concat(queryString);\n  }\n\n  var hash = getHash(object.url);\n\n  if (object.fragmentIdentifier) {\n    hash = \"#\".concat(options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier);\n  }\n\n  return \"\".concat(url).concat(queryString).concat(hash);\n};\n\nexports.pick = function (input, filter, options) {\n  options = Object.assign(_defineProperty({\n    parseFragmentIdentifier: true\n  }, encodeFragmentIdentifier, false), options);\n\n  var _exports$parseUrl = exports.parseUrl(input, options),\n      url = _exports$parseUrl.url,\n      query = _exports$parseUrl.query,\n      fragmentIdentifier = _exports$parseUrl.fragmentIdentifier;\n\n  return exports.stringifyUrl({\n    url: url,\n    query: filterObject(query, filter),\n    fragmentIdentifier: fragmentIdentifier\n  }, options);\n};\n\nexports.exclude = function (input, filter, options) {\n  var exclusionFilter = Array.isArray(filter) ? function (key) {\n    return !filter.includes(key);\n  } : function (key, value) {\n    return !filter(key, value);\n  };\n  return exports.pick(input, exclusionFilter, options);\n};","'use strict';\n\nmodule.exports = function (string, separator) {\n  if (!(typeof string === 'string' && typeof separator === 'string')) {\n    throw new TypeError('Expected the arguments to be of type `string`');\n  }\n\n  if (separator === '') {\n    return [string];\n  }\n\n  var separatorIndex = string.indexOf(separator);\n\n  if (separatorIndex === -1) {\n    return [string];\n  }\n\n  return [string.slice(0, separatorIndex), string.slice(separatorIndex + separator.length)];\n};","'use strict';\n\nmodule.exports = function (str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (x) {\n    return \"%\".concat(x.charCodeAt(0).toString(16).toUpperCase());\n  });\n};","import React, { ChangeEvent, useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { Index } from \"lunr\"\n\ninterface Result {\n    id: string;\n    path: string;\n    title: string;\n}\n\ninterface Props {\n    value: string | string[];\n}\n\n\n\nconst SearchResults = ({ value }: Props): React.ReactElement => {\n  const data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tLunrIndex\n\t\t}\n\t`)\n  const [query, setQuery] = useState(value)\n  const { store } = data.LunrIndex\n  const index = Index.load(data.LunrIndex.index)\n  let results = []\n  try {\n    if (query) {\n      results = index.search(`${query}~1`)\n        .sort((a, b) => {\n          return b.score - a.score\n        }).map(({ ref }) => {\n          return {\n            path: ref,\n            ...store[ref],\n          }\n        })\n    }\n  } catch (error) {\n    console.log(error)\n  }\n\n  const updateSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.value.length > 2) {\n      setQuery(e.currentTarget.value)\n    } else {\n      setQuery(null)\n    }\n  }\n\n  return (\n    <form action=\"/search\" method=\"get\" autoComplete=\"off\" target=\"_top\">\n      <div className=\"w-full\">\n        <input type=\"search\" id=\"search\" placeholder=\"Search blog posts\" name=\"s\" onChange={updateSearch} className=\"float-left w-3/4 p-4 text-xl text-gray-900 border-2 border-gray-100 md:float-none\" defaultValue={value} />\n        <button type=\"submit\" className=\"float-right w-1/4 px-2 py-4 mx-0 border-2 md:float-none\">Search</button>\n        <div className=\"w-full mt-2 divide-y divide-gray-800 dark:divide-gray-200\">\n          {results.map((result: Result) => (\n            <Link key={result.path} className=\"float-left w-full py-4 text-xl font-bold focus:outline-none focus:ring focus:border-blue-300\" to={result.path}>\n              <span className=\"block w-full px-2\">\n                {result.title}\n              </span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SearchResults\n","import React, { ReactElement } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport SearchResults from \"../components/SearchResults\"\nimport queryString from \"query-string\"\nimport { SiteData } from \"../Types\"\n\ninterface Props {\n  data: {\n    site: SiteData;\n  },\n  location: Location;\n}\n\nconst Search = ({ location, data }: Props): ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const search = queryString.parse(location.search)\n  const canonicalUrl = data.site.siteMetadata.siteUrl + location.pathname\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title={\"Search\"}\n        description={\"Search\"}\n        url={canonicalUrl}\n      />\n      <SearchResults value={search.s} />\n    </Layout>\n  )\n}\n\nexport default Search\n\nexport const siteDataQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n  }\n`\n","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","isArray","val","indexOf","global","step2list","step3list","v","C","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","this","message","console","asString","toString","clone","create","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","s","n","fieldRef","undefined","Set","elements","complete","intersect","other","union","contains","empty","object","a","b","intersection","element","push","idf","posting","documentCount","documentsWithTerm","x","Math","log","abs","Token","str","metadata","update","fn","tokenizer","map","t","toLowerCase","len","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","forEach","fnName","Error","fns","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","k","runString","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","fp","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","id","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","results","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","name","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","emit","type","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","_defineProperty","_slicedToArray","_toConsumableArray","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","minLen","_arrayLikeToArray","constructor","from","_unsupportedIterableToArray","F","done","value","e","_e","normalCompletion","didErr","step","_e2","return","arr2","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","assign","arrayFormat","arrayFormatSeparator","formatter","includes","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","_step","_iterator","param","_splitOnFirst","_splitOnFirst2","_key","_value","_i","_Object$keys","_i2","_Object$keys2","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","_i3","_Object$keys3","filter","parseUrl","url","_splitOnFirst3","_splitOnFirst4","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","_exports$parseUrl","exclude","exclusionFilter","string","separatorIndex","data","useStaticQuery","useState","setQuery","store","LunrIndex","path","error","React","action","method","autoComplete","target","className","placeholder","onChange","currentTarget","defaultValue","Link","to","title","location","siteTitle","site","siteMetadata","canonicalUrl","siteUrl","pathname","Layout","SEO","description","SearchResults","arrayLikeToArray","__esModule","defineProperty","enumerable","configurable","writable","iter","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread"],"sourceRoot":""}