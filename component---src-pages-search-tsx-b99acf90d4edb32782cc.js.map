{"version":3,"file":"component---src-pages-search-tsx-b99acf90d4edb32782cc.js","mappings":"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AQ+N,EAAG,KAKJ,KAAXD,IACFH,EAAIG,EAAQhE,cAAgB6D,EAAEQ,OAAO,IAGhCR,CACT,EAEO,SAAUtP,GACf,OAAOA,EAAMqL,OAAOrD,EACtB,GAGFC,EAAKgE,SAASG,iBAAiBnE,EAAKQ,QAAS,WAmB7CR,EAAKiI,uBAAyB,SAAUC,GACtC,IAAIC,EAAQD,EAAUE,QAAO,SAAUhD,EAAMiD,GAE3C,OADAjD,EAAKiD,GAAYA,EACVjD,CACT,GAAG,CAAC,GAEJ,OAAO,SAAUrN,GACf,GAAIA,GAASoQ,EAAMpQ,EAAMkJ,cAAgBlJ,EAAMkJ,WAAY,OAAOlJ,CACpE,CACF,EAeAiI,EAAKO,eAAiBP,EAAKiI,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGFjI,EAAKgE,SAASG,iBAAiBnE,EAAKO,eAAgB,kBAqBpDP,EAAKM,QAAU,SAAUvI,GACvB,OAAOA,EAAMqL,QAAO,SAAUnF,GAC5B,OAAOA,EAAEvE,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,GAC/C,GACF,EAEAsG,EAAKgE,SAASG,iBAAiBnE,EAAKM,QAAS,WA2B7CN,EAAKsI,S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","sources":["webpack://matthew-dalys-blog/./node_modules/decode-uri-component/index.js","webpack://matthew-dalys-blog/./node_modules/filter-obj/index.js","webpack://matthew-dalys-blog/./src/components/SearchResults.tsx","webpack://matthew-dalys-blog/./src/pages/search.tsx","webpack://matthew-dalys-blog/./node_modules/lunr/lunr.js","webpack://matthew-dalys-blog/./node_modules/query-string/index.js","webpack://matthew-dalys-blog/./node_modules/split-on-first/index.js","webpack://matthew-dalys-blog/./node_modules/strict-uri-encode/index.js"],"sourcesContent":["'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher) || [];\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","'use strict';\nmodule.exports = function (obj, predicate) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\tvar isArr = Array.isArray(predicate);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar val = obj[key];\n\n\t\tif (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {\n\t\t\tret[key] = val;\n\t\t}\n\t}\n\n\treturn ret;\n};\n","import React, { ChangeEvent, useState } from \"react\"\nimport { Link, useStaticQuery, graphql } from \"gatsby\"\nimport { Index } from \"lunr\"\n\ninterface Result {\n    id: string;\n    path: string;\n    title: string;\n}\n\ninterface Props {\n    value: string | string[];\n}\n\n\n\nconst SearchResults = ({ value }: Props): React.ReactElement => {\n  const data = useStaticQuery(graphql`\n\t\tquery {\n\t\t\tLunrIndex\n\t\t}\n\t`)\n  const [query, setQuery] = useState(value)\n  const { store } = data.LunrIndex\n  const index = Index.load(data.LunrIndex.index)\n  let results = []\n  try {\n    if (query) {\n      results = index.search(`${query}~1`)\n        .sort((a, b) => {\n          return b.score - a.score\n        }).map(({ ref }) => {\n          return {\n            path: ref,\n            ...store[ref],\n          }\n        })\n    }\n  } catch (error) {\n    console.log(error)\n  }\n\n  const updateSearch = (e: ChangeEvent<HTMLInputElement>) => {\n    if (e.currentTarget.value.length > 2) {\n      setQuery(e.currentTarget.value)\n    } else {\n      setQuery(null)\n    }\n  }\n\n  return (\n    <form action=\"/search\" method=\"get\" autoComplete=\"off\" target=\"_top\">\n      <div className=\"w-full\">\n        <input type=\"search\" id=\"search\" placeholder=\"Search blog posts\" name=\"s\" onChange={updateSearch} className=\"float-left w-3/4 p-4 text-xl text-gray-900 border-2 border-gray-100 md:float-none\" defaultValue={value} />\n        <button type=\"submit\" className=\"float-right w-1/4 px-2 py-4 mx-0 border-2 md:float-none\">Search</button>\n        <div className=\"w-full mt-2 divide-y divide-gray-800 dark:divide-gray-200\">\n          {results.map((result: Result) => (\n            <Link key={result.path} className=\"float-left w-full py-4 text-xl font-bold focus:outline-none focus:ring focus:border-blue-300\" to={result.path}>\n              <span className=\"block w-full px-2\">\n                {result.title}\n              </span>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default SearchResults\n","import React, { ReactElement } from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport SearchResults from \"../components/SearchResults\"\nimport queryString from \"query-string\"\nimport { SiteData } from \"../Types\"\n\ninterface Props {\n  data: {\n    site: SiteData;\n  },\n  location: Location;\n}\n\nconst Search = ({ location, data }: Props): ReactElement => {\n  const siteTitle = data.site.siteMetadata.title\n  const search = queryString.parse(location.search)\n  const canonicalUrl = data.site.siteMetadata.siteUrl + location.pathname\n\n  return (\n    <Layout title={siteTitle}>\n      <SEO\n        title={\"Search\"}\n        description={\"Search\"}\n        url={canonicalUrl}\n      />\n      <SearchResults value={search.s} />\n    </Layout>\n  )\n}\n\nexport default Search\n\nexport const siteDataQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        siteUrl\n      }\n    }\n  }\n`\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\nconst splitOnFirst = require('split-on-first');\nconst filterObject = require('filter-obj');\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[', index, ']'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join('')\n\t\t\t\t];\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), '[]'].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '[]=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, [encode(key, options), ':list='].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), ':list=', encode(value, options)].join('')];\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator' ?\n\t\t\t\t'[]=' :\n\t\t\t\t'=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault:\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined ||\n\t\t\t\t\t(options.skipNull && value === null) ||\n\t\t\t\t\t(options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [...result, encode(key, options)];\n\t\t\t\t}\n\n\t\t\t\treturn [...result, [encode(key, options), '=', encode(value, options)].join('')];\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'colon-list-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : value === null ? value : decode(value, options);\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\n\t\tcase 'bracket-separator':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[\\])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null ?\n\t\t\t\t\t[] :\n\t\t\t\t\tvalue.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], arrayValue);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nfunction parse(query, options) {\n\toptions = Object.assign({\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn ret;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of query.split('&')) {\n\t\tif (param === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tlet [key, value] = splitOnFirst(options.decode ? param.replace(/\\+/g, ' ') : param, '=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : ['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options);\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\tfor (const key of Object.keys(ret)) {\n\t\tconst value = ret[key];\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const k of Object.keys(value)) {\n\t\t\t\tvalue[k] = parseValue(value[k], options);\n\t\t\t}\n\t\t} else {\n\t\t\tret[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn ret;\n\t}\n\n\treturn (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (object, options) => {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ','\n\t}, options);\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key])) ||\n\t\t(options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const key of Object.keys(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = object[key];\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n};\n\nexports.parseUrl = (url, options) => {\n\toptions = Object.assign({\n\t\tdecode: true\n\t}, options);\n\n\tconst [url_, hash] = splitOnFirst(url, '#');\n\n\treturn Object.assign(\n\t\t{\n\t\t\turl: url_.split('?')[0] || '',\n\t\t\tquery: parse(extract(url), options)\n\t\t},\n\t\toptions && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}\n\t);\n};\n\nexports.stringifyUrl = (object, options) => {\n\toptions = Object.assign({\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true\n\t}, options);\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = exports.extract(object.url);\n\tconst parsedQueryFromUrl = exports.parse(queryFromUrl, {sort: false});\n\n\tconst query = Object.assign(parsedQueryFromUrl, object.query);\n\tlet queryString = exports.stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\thash = `#${options[encodeFragmentIdentifier] ? encode(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n};\n\nexports.pick = (input, filter, options) => {\n\toptions = Object.assign({\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false\n\t}, options);\n\n\tconst {url, query, fragmentIdentifier} = exports.parseUrl(input, options);\n\treturn exports.stringifyUrl({\n\t\turl,\n\t\tquery: filterObject(query, filter),\n\t\tfragmentIdentifier\n\t}, options);\n};\n\nexports.exclude = (input, filter, options) => {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn exports.pick(input, exclusionFilter, options);\n};\n","'use strict';\n\nmodule.exports = (string, separator) => {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (separator === '') {\n\t\treturn [string];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [string];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n"],"names":["token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","err","length","left","slice","right","Array","prototype","concat","call","decode","input","tokens","match","i","module","exports","encodedURI","TypeError","replace","replaceMap","exec","result","entries","Object","keys","key","customDecodeURIComponent","obj","predicate","ret","isArr","isArray","val","indexOf","_ref","value","data","useStaticQuery","query","setQuery","useState","store","LunrIndex","index","Index","load","results","search","sort","a","b","score","map","_ref2","ref","path","error","console","log","React","action","method","autoComplete","target","className","type","id","placeholder","name","onChange","e","currentTarget","defaultValue","Link","to","title","location","siteTitle","site","siteMetadata","queryString","canonicalUrl","siteUrl","pathname","Layout","SEO","description","url","SearchResults","s","global","step2list","step3list","v","C","V","meq1","mgr1","s_v","re_mgr0","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","lunr","config","builder","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","version","utils","warn","this","message","asString","toString","clone","create","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","n","fieldRef","undefined","Set","elements","complete","intersect","other","union","contains","empty","object","intersection","element","push","idf","posting","documentCount","documentsWithTerm","x","Math","abs","Token","str","metadata","update","fn","tokenizer","t","toLowerCase","len","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","serialised","forEach","fnName","Error","arguments","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","j","k","runString","reset","toJSON","Vector","_magnitude","positionForIndex","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","c","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","test","fp","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","_nextId","fromArray","arr","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","pop","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","attrs","invertedIndex","fieldVectors","tokenSet","fields","QueryParser","parse","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","l","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","matches","isNegated","docMatch","fieldVector","matchData","combine","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_fields","_documents","fieldTermFrequencies","fieldLengths","_b","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","args","unshift","apply","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","String","NONE","LEADING","TRAILING","OPTIONAL","options","QueryParseError","QueryLexer","lexemes","escapeCharPositions","state","lexText","sliceString","subSlices","emit","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","charCodeAt","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","f","parseEditDistance","parseBoost","parseInt","isNaN","strictUriEncode","decodeComponent","splitOnFirst","filterObject","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","encode","strict","encodeURIComponent","keysSorter","Number","removeHash","hashStart","extract","queryStart","parseValue","parseNumbers","trim","parseBooleans","assign","arrayFormat","arrayFormatSeparator","formatter","includes","isEncodedArray","newValue","item","arrayValue","parserForArrayFormat","param","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","keyValueSep","encoderForArrayFormat","objectCopy","filter","parseUrl","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","queryFromUrl","parsedQueryFromUrl","getHash","pick","exclude","exclusionFilter","string","separatorIndex"],"sourceRoot":""}