{"version":3,"sources":["webpack://matthew-dalys-blog/./src/templates/category.tsx"],"names":["pageContext","data","category","allMdx","edges","totalCount","categoryHeader","Fragment","title","description","siteUrl","site","siteMetadata","map","node","key","fields","path","className","Link","to","frontmatter"],"mappings":"oLA+CA,UA5BiB,SAAC,GAAsD,IAApDA,EAAmD,EAAnDA,YAAaC,EAAsC,EAAtCA,KACvBC,EAAaF,EAAbE,SACR,EAA8BD,EAAKE,OAA3BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,WACTC,EAAoBD,EAAN,SACH,IAAfA,EAAmB,GAAI,KADL,iBAEHH,EAFG,IAIpB,OACE,gBAAC,EAAAK,SAAD,KACE,gBAAC,IAAD,CACEC,MAAON,EACPO,YAAaP,IAEf,gBAAC,IAAD,CAAQM,MAAOF,EAAgBI,QAAST,EAAKU,KAAKC,aAAaF,SAC7D,0BACGN,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACT,sBAAIC,IAAKD,EAAKE,OAAOC,KAAMC,UAAU,8BACnC,gBAAC,EAAAC,KAAD,CAAMC,GAAIN,EAAKE,OAAOC,MACnBH,EAAKO,YAAYb","file":"component---src-templates-category-tsx-a8298a71d538710770c6.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/Seo\"\nimport { PageData, SiteData } from \"../Types\"\n\ninterface Props {\n  pageContext: {\n    category: string;\n  },\n  data: {\n    site: SiteData;\n    allMdx: {\n      totalCount: number;\n      edges: PageData[];\n    }\n  }\n}\n\nconst Category = ({ pageContext, data }: Props): React.ReactElement => {\n  const { category } = pageContext\n  const { edges, totalCount } = data.allMdx\n  const categoryHeader = `${totalCount} post${\n    totalCount === 1 ? \"\": \"s\"\n  } in category \"${category}\"`\n\n  return (\n    <Fragment>\n      <SEO\n        title={category}\n        description={category}\n      />\n      <Layout title={categoryHeader} siteUrl={data.site.siteMetadata.siteUrl}>\n        <ul>\n          {edges.map(({ node }) => (\n            <li key={node.fields.path} className=\"p-2 py-4 text-xl font-bold\">\n              <Link to={node.fields.path}>\n                {node.frontmatter.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </Layout>\n    </Fragment>\n  )\n}\n\nexport default Category\n\nexport const categoryQuery = graphql`\nquery($category: String) {\n  site {\n    siteMetadata {\n      title\n      siteUrl\n    }\n  }\n  allMdx(\n  limit: 2000\n  sort: { fields: [frontmatter___date], order: DESC}\n  filter: { frontmatter: { categories: { in: [$category] }}}\n  ) {\n    totalCount\n    edges {\n      node {\n        fields {\n          path\n        }\n        excerpt(pruneLength: 180)\n        frontmatter {\n          title\n          categories\n        }\n      }\n    }\n  }\n}\n`\n"],"sourceRoot":""}